Coverage Report by DU with details

=================================================================================
=== Design Unit: work.pixelcord(rtl)
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           97        49        48      50.5

================================Statement Details================================

Statement Coverage for Design Unit work.pixelcord(rtl) --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/dut/pixelCord.vhd
    24                                               architecture rtl of pixelCord is
    25                                                   signal iCord           : cord;
    26                                                   signal oRgb            : channel;
    27                                                   signal iRgb            : channel;
    28                                                   signal frameSize       : intersectPoint;
    29                                                   signal initCord        : intersectPoint;
    30                                                   signal newCord         : intersectPoint;
    31                                                   signal grid1Cord       : intersectPoint;
    32                                                   signal grid2Cord       : intersectPoint;
    33                                                   signal grid3Cord       : intersectPoint;
    34                                                   signal grid4Cord       : intersectPoint;
    35                                                   signal rgb             : channel;
    36                                               begin
    37              1                        110         iCord.x         <= iX;
    38              1                        110         iCord.y         <= iY;
    39                                                   
    40              1                        110         iRgb.red         <= iRed;
    41              1                        109         iRgb.green       <= iGreen;
    42              1                        109         iRgb.blue        <= iBlue;
    43              1                         58         iRgb.valid       <= iValid;
    44                                                   
    45              1                         45         oRed             <= oRgb.red;
    46              1                         44         oGreen           <= oRgb.green;
    47              1                         45         oBlue            <= oRgb.blue;
    48              1                         59         oValid           <= oRgb.valid;
    49                                                   
    50                                                   
    51              1                          1         initCord.rht   <= initCordValueRht;
    52              1                          1         initCord.lft   <= initCordValueLft;
    53              1                          1         initCord.top   <= initCordValueTop;
    54              1                          1         initCord.bot   <= initCordValueBot;
    55              1                          1         frameSize.lft  <= frameSizeLft;
    56              1                          1         frameSize.rht  <= frameSizeRht;
    57              1                          1         frameSize.top  <= frameSizeTop;
    58              1                          1         frameSize.bot  <= frameSizeBot;
    59                                               dataOutP: process (clk)begin
    60                                                   if rising_edge(clk) then
    61              1                        102             oRgb.valid  <= iRgb.valid;
    62              1                        102             oRgb.red    <= rgb.red;
    63              1                        102             oRgb.green  <= rgb.green;
    64              1                        102             oRgb.blue   <= rgb.blue;
    65                                                   end if;
    66                                               end process dataOutP;
    67                                               pixelCordP: process (clk)begin
    68                                                   if rising_edge(clk) then
    69                                                       if (iRgb.valid = hi) then
    70                                                           ------------------------------------
    71                                                           if (iPixelEn = hi) then 
    72                                                               ------------------------------------
    73                                                               --Left Coordinates
    74                                                               ------------------------------------
    75                                                               if (iCord.x <= newCord.lft) then
    76                                                                   if ( iCord.x >= frameSize.lft) then 
    77              1                         18                             newCord.lft <= iCord.x - 1;
    78                                                                   end if;   
    79                                                               end if;
    80                                                               ------------------------------------
    81                                                               --Right Coordinates
    82                                                               ------------------------------------
    83                                                               if (iCord.x >= newCord.rht) then
    84                                                                   if ( iCord.x <= frameSize.rht) then 
    85              1                         17                             newCord.rht <= iCord.x + 1;
    86                                                                   end if;   
    87                                                               end if;
    88                                                               ------------------------------------
    89                                                               --Top Coordinates
    90                                                               ------------------------------------
    91                                                               if (iCord.y <= newCord.top) then
    92                                                                   if ( iCord.y >= frameSize.top) then 
    93              1                         18                             newCord.top <= iCord.y - 1;
    94                                                                   end if;   
    95                                                               end if;
    96                                                               ------------------------------------
    97                                                               --Bottom Coordinates
    98                                                               ------------------------------------
    99                                                               if (iCord.y >= newCord.bot) then
    100                                                                  if ( iCord.y <= frameSize.bot) then 
    101             1                         11                             newCord.bot <= iCord.y + 1;
    102                                                                  end if;   
    103                                                              end if;
    104                                                          end if;--iPixelEn
    105                                                          ------------------------------------
    106                                                          -- 4TH FRAME
    107                                                          ------------------------------------
    108                                                          if ((iCord.y = grid4Cord.bot) and ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht)))then
    109             1                    ***0***                     rgb.red        <= white;
    110             1                    ***0***                     rgb.green      <= black;
    111             1                    ***0***                     rgb.blue       <= black;
    112                                                          elsif ((iCord.y = grid4Cord.top) and ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht)))then
    113             1                    ***0***                     rgb.red        <= white;
    114             1                    ***0***                     rgb.green      <= black;
    115             1                    ***0***                     rgb.blue       <= black;
    116                                                          elsif ((iCord.x = grid4Cord.lft) and ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot)))then
    117             1                    ***0***                     rgb.red        <= white;
    118             1                    ***0***                     rgb.green      <= black;
    119             1                    ***0***                     rgb.blue       <= black;
    120                                                          elsif ((iCord.x = grid4Cord.rht) and ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot)))then
    121             1                    ***0***                     rgb.red        <= white;
    122             1                    ***0***                     rgb.green      <= black;
    123             1                    ***0***                     rgb.blue       <= black;
    124                                                          ------------------------------------
    125                                                         -- 3RD FRAME
    126                                                          ------------------------------------
    127                                                          elsif ((iCord.y = grid3Cord.bot) and ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    128             1                    ***0***                     rgb.red        <= black;
    129             1                    ***0***                     rgb.green      <= white;
    130             1                    ***0***                     rgb.blue       <= black;
    131                                                          elsif ((iCord.y = grid3Cord.top) and ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    132             1                    ***0***                     rgb.red        <= black;
    133             1                    ***0***                     rgb.green      <= white;
    134             1                    ***0***                     rgb.blue       <= black;
    135                                                          elsif ((iCord.x = grid3Cord.lft) and ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot)))then
    136             1                    ***0***                     rgb.red        <= black;
    137             1                    ***0***                     rgb.green      <= white;
    138             1                    ***0***                     rgb.blue       <= black;
    139                                                          elsif ((iCord.x = grid3Cord.rht) and ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot)))then
    140             1                    ***0***                     rgb.red        <= black;
    141             1                    ***0***                     rgb.green      <= white;
    142             1                    ***0***                     rgb.blue       <= black;
    143                                                          ------------------------------------
    144                                                          -- 2ND FRAME
    145                                                          ------------------------------------
    146                                                          elsif ((iCord.y = grid2Cord.bot) and ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    147             1                    ***0***                     rgb.red        <= black;
    148             1                    ***0***                     rgb.green      <= black;
    149             1                    ***0***                     rgb.blue       <= white;
    150                                                          elsif ((iCord.y = grid2Cord.top) and ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    151             1                    ***0***                     rgb.red        <= black;
    152             1                    ***0***                     rgb.green      <= black;
    153             1                    ***0***                     rgb.blue       <= white;
    154                                                          elsif ((iCord.x = grid2Cord.lft) and ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot)))then
    155             1                    ***0***                     rgb.red        <= black;
    156             1                    ***0***                     rgb.green      <= black;
    157             1                    ***0***                     rgb.blue       <= white;
    158                                                          elsif ((iCord.x = grid3Cord.rht) and ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot)))then
    159             1                    ***0***                     rgb.red        <= black;
    160             1                    ***0***                     rgb.green      <= black;
    161             1                    ***0***                     rgb.blue       <= white;
    162                                                          ------------------------------------
    163                                                          -- 1ST FRAME
    164                                                          ------------------------------------
    165                                                          elsif ((iCord.y = grid1Cord.bot) and ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht)))then
    166             1                    ***0***                     rgb.red        <= x"80";
    167             1                    ***0***                     rgb.green      <= black;
    168             1                    ***0***                     rgb.blue       <= x"80";
    169                                                          elsif ((iCord.y = grid1Cord.top) and ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht)))then
    170             1                    ***0***                     rgb.red        <= x"80";
    171             1                    ***0***                     rgb.green      <= black;
    172             1                    ***0***                     rgb.blue       <= x"80";
    173                                                          elsif ((iCord.x = grid1Cord.lft) and ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot)))then
    174             1                    ***0***                     rgb.red        <= x"80";
    175             1                    ***0***                     rgb.green      <= black;
    176             1                    ***0***                     rgb.blue       <= x"80";
    177                                                          elsif ((iCord.x = grid1Cord.rht) and ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot)))then
    178             1                    ***0***                     rgb.red        <= x"80";
    179             1                    ***0***                     rgb.green      <= black;
    180             1                    ***0***                     rgb.blue       <= x"80";
    181                                                          else
    182             1                         59                     rgb.red        <= iRgb.red;
    183             1                         59                     rgb.green      <= iRgb.green;
    184             1                         59                     rgb.blue       <= iRgb.blue;
    185                                                          end if;
    186                                                      end if;--iRgb.valid
    187                                                      if (iEof = hi)then
    188                                                          --RESET COORDINATES TO DEFAULT
    189             1                         75                 newCord.lft       <= initCord.lft;
    190             1                         75                 newCord.rht       <= initCord.rht;
    191             1                         75                 newCord.top       <= initCord.top;
    192             1                         75                 newCord.bot       <= initCord.bot;
    193                                                          -- 1ST FRAME
    194             1                         75                 grid1Cord.lft     <= newCord.lft;
    195             1                         75                 grid1Cord.rht     <= newCord.rht;
    196             1                         75                 grid1Cord.top     <= newCord.top;
    197             1                         75                 grid1Cord.bot     <= newCord.bot;
    198                                                          -- 2ND FRAME
    199             1                         75                 grid2Cord.lft     <= grid1Cord.lft;
    200             1                         75                 grid2Cord.rht     <= grid1Cord.rht;
    201             1                         75                 grid2Cord.top     <= grid1Cord.top;
    202             1                         75                 grid2Cord.bot     <= grid1Cord.bot;
    203                                                          -- 3RD FRAME
    204             1                         75                 grid3Cord.lft     <= grid2Cord.lft;
    205             1                         75                 grid3Cord.rht     <= grid2Cord.rht;
    206             1                         75                 grid3Cord.top     <= grid2Cord.top;
    207             1                         75                 grid3Cord.bot     <= grid2Cord.bot;
    208                                                          -- 4TH FRAME
    209             1                         75                 grid4Cord.lft     <= grid3Cord.lft;
    210             1                         75                 grid4Cord.rht     <= grid3Cord.rht;
    211             1                         75                 grid4Cord.top     <= grid3Cord.top;
    212             1                         75                 grid4Cord.bot     <= grid3Cord.bot;

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        41        23        18      56.0

================================Branch Details================================

Branch Coverage for Design Unit work.pixelcord(rtl)

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/dut/pixelCord.vhd
------------------------------------IF Branch------------------------------------
    60                                       102     Count coming in to IF
    60              1                        102         if rising_edge(clk) then
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    68                                       139     Count coming in to IF
    68              1                        139         if rising_edge(clk) then
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    69                                       139     Count coming in to IF
    69              1                         59             if (iRgb.valid = hi) then
                                              80     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    71                                        59     Count coming in to IF
    71              1                         26                 if (iPixelEn = hi) then 
                                              33     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    75                                        26     Count coming in to IF
    75              1                         18                     if (iCord.x <= newCord.lft) then
                                               8     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    76                                        18     Count coming in to IF
    76              1                         18                         if ( iCord.x >= frameSize.lft) then 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    83                                        26     Count coming in to IF
    83              1                         18                     if (iCord.x >= newCord.rht) then
                                               8     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    84                                        18     Count coming in to IF
    84              1                         17                         if ( iCord.x <= frameSize.rht) then 
                                               1     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    91                                        26     Count coming in to IF
    91              1                         18                     if (iCord.y <= newCord.top) then
                                               8     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    92                                        18     Count coming in to IF
    92              1                         18                         if ( iCord.y >= frameSize.top) then 
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    99                                        26     Count coming in to IF
    99              1                         20                     if (iCord.y >= newCord.bot) then
                                               6     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    100                                       20     Count coming in to IF
    100             1                         11                         if ( iCord.y <= frameSize.bot) then 
                                               9     All False Count
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    108                                       59     Count coming in to IF
    108             1                    ***0***                 if ((iCord.y = grid4Cord.bot) and ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht)))then
    112             1                    ***0***                 elsif ((iCord.y = grid4Cord.top) and ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht)))then
    116             1                    ***0***                 elsif ((iCord.x = grid4Cord.lft) and ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot)))then
    120             1                    ***0***                 elsif ((iCord.x = grid4Cord.rht) and ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot)))then
    127             1                    ***0***                 elsif ((iCord.y = grid3Cord.bot) and ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    131             1                    ***0***                 elsif ((iCord.y = grid3Cord.top) and ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    135             1                    ***0***                 elsif ((iCord.x = grid3Cord.lft) and ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot)))then
    139             1                    ***0***                 elsif ((iCord.x = grid3Cord.rht) and ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot)))then
    146             1                    ***0***                 elsif ((iCord.y = grid2Cord.bot) and ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    150             1                    ***0***                 elsif ((iCord.y = grid2Cord.top) and ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht)))then
    154             1                    ***0***                 elsif ((iCord.x = grid2Cord.lft) and ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot)))then
    158             1                    ***0***                 elsif ((iCord.x = grid3Cord.rht) and ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot)))then
    165             1                    ***0***                 elsif ((iCord.y = grid1Cord.bot) and ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht)))then
    169             1                    ***0***                 elsif ((iCord.y = grid1Cord.top) and ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht)))then
    173             1                    ***0***                 elsif ((iCord.x = grid1Cord.lft) and ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot)))then
    177             1                    ***0***                 elsif ((iCord.x = grid1Cord.rht) and ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot)))then
    181             1                         59                 else
Branch totals: 1 hit of 17 branches = 5.8%

------------------------------------IF Branch------------------------------------
    187                                      139     Count coming in to IF
    187             1                         75             if (iEof = hi)then
                                              64     All False Count
Branch totals: 2 hits of 2 branches = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms             48         0        48       0.0

================================Condition Details================================

Condition Coverage for Design Unit work.pixelcord(rtl) --

  File ../modules/dut/pixelCord.vhd
----------------Focused Condition View-------------------
Line       108 Item    1  ((iCord.y = grid4Cord.bot) and ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid4Cord.bot)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid4Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid4Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid4Cord.bot)_0   -                             
  Row   2:    ***0***  (iCord.y = grid4Cord.bot)_1   ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid4Cord.lft)_0  (iCord.y = grid4Cord.bot)     
  Row   4:    ***0***  (iCord.x >= grid4Cord.lft)_1  (iCord.y = grid4Cord.bot) && (iCord.x <= grid4Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid4Cord.rht)_0  (iCord.y = grid4Cord.bot) && (iCord.x >= grid4Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid4Cord.rht)_1  (iCord.y = grid4Cord.bot) && (iCord.x >= grid4Cord.lft)

----------------Focused Condition View-------------------
Line       112 Item    1  ((iCord.y = grid4Cord.top) and ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid4Cord.top)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid4Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid4Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid4Cord.top)_0   -                             
  Row   2:    ***0***  (iCord.y = grid4Cord.top)_1   ((iCord.x >= grid4Cord.lft) and (iCord.x <= grid4Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid4Cord.lft)_0  (iCord.y = grid4Cord.top)     
  Row   4:    ***0***  (iCord.x >= grid4Cord.lft)_1  (iCord.y = grid4Cord.top) && (iCord.x <= grid4Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid4Cord.rht)_0  (iCord.y = grid4Cord.top) && (iCord.x >= grid4Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid4Cord.rht)_1  (iCord.y = grid4Cord.top) && (iCord.x >= grid4Cord.lft)

----------------Focused Condition View-------------------
Line       116 Item    1  ((iCord.x = grid4Cord.lft) and ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid4Cord.lft)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid4Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid4Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid4Cord.lft)_0   -                             
  Row   2:    ***0***  (iCord.x = grid4Cord.lft)_1   ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid4Cord.top)_0  (iCord.x = grid4Cord.lft)     
  Row   4:    ***0***  (iCord.y >= grid4Cord.top)_1  (iCord.x = grid4Cord.lft) && (iCord.y <= grid4Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid4Cord.bot)_0  (iCord.x = grid4Cord.lft) && (iCord.y >= grid4Cord.top)
  Row   6:    ***0***  (iCord.y <= grid4Cord.bot)_1  (iCord.x = grid4Cord.lft) && (iCord.y >= grid4Cord.top)

----------------Focused Condition View-------------------
Line       120 Item    1  ((iCord.x = grid4Cord.rht) and ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid4Cord.rht)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid4Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid4Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid4Cord.rht)_0   -                             
  Row   2:    ***0***  (iCord.x = grid4Cord.rht)_1   ((iCord.y >= grid4Cord.top) and (iCord.y <= grid4Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid4Cord.top)_0  (iCord.x = grid4Cord.rht)     
  Row   4:    ***0***  (iCord.y >= grid4Cord.top)_1  (iCord.x = grid4Cord.rht) && (iCord.y <= grid4Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid4Cord.bot)_0  (iCord.x = grid4Cord.rht) && (iCord.y >= grid4Cord.top)
  Row   6:    ***0***  (iCord.y <= grid4Cord.bot)_1  (iCord.x = grid4Cord.rht) && (iCord.y >= grid4Cord.top)

----------------Focused Condition View-------------------
Line       127 Item    1  ((iCord.y = grid3Cord.bot) and ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid3Cord.bot)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid3Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid3Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid3Cord.bot)_0   -                             
  Row   2:    ***0***  (iCord.y = grid3Cord.bot)_1   ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid3Cord.lft)_0  (iCord.y = grid3Cord.bot)     
  Row   4:    ***0***  (iCord.x >= grid3Cord.lft)_1  (iCord.y = grid3Cord.bot) && (iCord.x <= grid3Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid3Cord.rht)_0  (iCord.y = grid3Cord.bot) && (iCord.x >= grid3Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid3Cord.rht)_1  (iCord.y = grid3Cord.bot) && (iCord.x >= grid3Cord.lft)

----------------Focused Condition View-------------------
Line       131 Item    1  ((iCord.y = grid3Cord.top) and ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid3Cord.top)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid3Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid3Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid3Cord.top)_0   -                             
  Row   2:    ***0***  (iCord.y = grid3Cord.top)_1   ((iCord.x >= grid3Cord.lft) and (iCord.x <= grid3Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid3Cord.lft)_0  (iCord.y = grid3Cord.top)     
  Row   4:    ***0***  (iCord.x >= grid3Cord.lft)_1  (iCord.y = grid3Cord.top) && (iCord.x <= grid3Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid3Cord.rht)_0  (iCord.y = grid3Cord.top) && (iCord.x >= grid3Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid3Cord.rht)_1  (iCord.y = grid3Cord.top) && (iCord.x >= grid3Cord.lft)

----------------Focused Condition View-------------------
Line       135 Item    1  ((iCord.x = grid3Cord.lft) and ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid3Cord.lft)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid3Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid3Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid3Cord.lft)_0   -                             
  Row   2:    ***0***  (iCord.x = grid3Cord.lft)_1   ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid3Cord.top)_0  (iCord.x = grid3Cord.lft)     
  Row   4:    ***0***  (iCord.y >= grid3Cord.top)_1  (iCord.x = grid3Cord.lft) && (iCord.y <= grid3Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid3Cord.bot)_0  (iCord.x = grid3Cord.lft) && (iCord.y >= grid3Cord.top)
  Row   6:    ***0***  (iCord.y <= grid3Cord.bot)_1  (iCord.x = grid3Cord.lft) && (iCord.y >= grid3Cord.top)

----------------Focused Condition View-------------------
Line       139 Item    1  ((iCord.x = grid3Cord.rht) and ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid3Cord.rht)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid3Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid3Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid3Cord.rht)_0   -                             
  Row   2:    ***0***  (iCord.x = grid3Cord.rht)_1   ((iCord.y >= grid3Cord.top) and (iCord.y <= grid3Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid3Cord.top)_0  (iCord.x = grid3Cord.rht)     
  Row   4:    ***0***  (iCord.y >= grid3Cord.top)_1  (iCord.x = grid3Cord.rht) && (iCord.y <= grid3Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid3Cord.bot)_0  (iCord.x = grid3Cord.rht) && (iCord.y >= grid3Cord.top)
  Row   6:    ***0***  (iCord.y <= grid3Cord.bot)_1  (iCord.x = grid3Cord.rht) && (iCord.y >= grid3Cord.top)

----------------Focused Condition View-------------------
Line       146 Item    1  ((iCord.y = grid2Cord.bot) and ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid2Cord.bot)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid2Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid3Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid2Cord.bot)_0   -                             
  Row   2:    ***0***  (iCord.y = grid2Cord.bot)_1   ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid2Cord.lft)_0  (iCord.y = grid2Cord.bot)     
  Row   4:    ***0***  (iCord.x >= grid2Cord.lft)_1  (iCord.y = grid2Cord.bot) && (iCord.x <= grid3Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid3Cord.rht)_0  (iCord.y = grid2Cord.bot) && (iCord.x >= grid2Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid3Cord.rht)_1  (iCord.y = grid2Cord.bot) && (iCord.x >= grid2Cord.lft)

----------------Focused Condition View-------------------
Line       150 Item    1  ((iCord.y = grid2Cord.top) and ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid2Cord.top)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid2Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid3Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid2Cord.top)_0   -                             
  Row   2:    ***0***  (iCord.y = grid2Cord.top)_1   ((iCord.x >= grid2Cord.lft) and (iCord.x <= grid3Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid2Cord.lft)_0  (iCord.y = grid2Cord.top)     
  Row   4:    ***0***  (iCord.x >= grid2Cord.lft)_1  (iCord.y = grid2Cord.top) && (iCord.x <= grid3Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid3Cord.rht)_0  (iCord.y = grid2Cord.top) && (iCord.x >= grid2Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid3Cord.rht)_1  (iCord.y = grid2Cord.top) && (iCord.x >= grid2Cord.lft)

----------------Focused Condition View-------------------
Line       154 Item    1  ((iCord.x = grid2Cord.lft) and ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid2Cord.lft)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid2Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid2Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid2Cord.lft)_0   -                             
  Row   2:    ***0***  (iCord.x = grid2Cord.lft)_1   ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid2Cord.top)_0  (iCord.x = grid2Cord.lft)     
  Row   4:    ***0***  (iCord.y >= grid2Cord.top)_1  (iCord.x = grid2Cord.lft) && (iCord.y <= grid2Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid2Cord.bot)_0  (iCord.x = grid2Cord.lft) && (iCord.y >= grid2Cord.top)
  Row   6:    ***0***  (iCord.y <= grid2Cord.bot)_1  (iCord.x = grid2Cord.lft) && (iCord.y >= grid2Cord.top)

----------------Focused Condition View-------------------
Line       158 Item    1  ((iCord.x = grid3Cord.rht) and ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid3Cord.rht)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid2Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid2Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid3Cord.rht)_0   -                             
  Row   2:    ***0***  (iCord.x = grid3Cord.rht)_1   ((iCord.y >= grid2Cord.top) and (iCord.y <= grid2Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid2Cord.top)_0  (iCord.x = grid3Cord.rht)     
  Row   4:    ***0***  (iCord.y >= grid2Cord.top)_1  (iCord.x = grid3Cord.rht) && (iCord.y <= grid2Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid2Cord.bot)_0  (iCord.x = grid3Cord.rht) && (iCord.y >= grid2Cord.top)
  Row   6:    ***0***  (iCord.y <= grid2Cord.bot)_1  (iCord.x = grid3Cord.rht) && (iCord.y >= grid2Cord.top)

----------------Focused Condition View-------------------
Line       165 Item    1  ((iCord.y = grid1Cord.bot) and ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid1Cord.bot)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid1Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid1Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid1Cord.bot)_0   -                             
  Row   2:    ***0***  (iCord.y = grid1Cord.bot)_1   ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid1Cord.lft)_0  (iCord.y = grid1Cord.bot)     
  Row   4:    ***0***  (iCord.x >= grid1Cord.lft)_1  (iCord.y = grid1Cord.bot) && (iCord.x <= grid1Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid1Cord.rht)_0  (iCord.y = grid1Cord.bot) && (iCord.x >= grid1Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid1Cord.rht)_1  (iCord.y = grid1Cord.bot) && (iCord.x >= grid1Cord.lft)

----------------Focused Condition View-------------------
Line       169 Item    1  ((iCord.y = grid1Cord.top) and ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.y = grid1Cord.top)         N  '_1' not hit             Hit '_1'
  (iCord.x >= grid1Cord.lft)         N  No hits                  Hit '_0' and '_1'
  (iCord.x <= grid1Cord.rht)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.y = grid1Cord.top)_0   -                             
  Row   2:    ***0***  (iCord.y = grid1Cord.top)_1   ((iCord.x >= grid1Cord.lft) and (iCord.x <= grid1Cord.rht))
  Row   3:    ***0***  (iCord.x >= grid1Cord.lft)_0  (iCord.y = grid1Cord.top)     
  Row   4:    ***0***  (iCord.x >= grid1Cord.lft)_1  (iCord.y = grid1Cord.top) && (iCord.x <= grid1Cord.rht)
  Row   5:    ***0***  (iCord.x <= grid1Cord.rht)_0  (iCord.y = grid1Cord.top) && (iCord.x >= grid1Cord.lft)
  Row   6:    ***0***  (iCord.x <= grid1Cord.rht)_1  (iCord.y = grid1Cord.top) && (iCord.x >= grid1Cord.lft)

----------------Focused Condition View-------------------
Line       173 Item    1  ((iCord.x = grid1Cord.lft) and ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid1Cord.lft)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid1Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid1Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid1Cord.lft)_0   -                             
  Row   2:    ***0***  (iCord.x = grid1Cord.lft)_1   ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid1Cord.top)_0  (iCord.x = grid1Cord.lft)     
  Row   4:    ***0***  (iCord.y >= grid1Cord.top)_1  (iCord.x = grid1Cord.lft) && (iCord.y <= grid1Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid1Cord.bot)_0  (iCord.x = grid1Cord.lft) && (iCord.y >= grid1Cord.top)
  Row   6:    ***0***  (iCord.y <= grid1Cord.bot)_1  (iCord.x = grid1Cord.lft) && (iCord.y >= grid1Cord.top)

----------------Focused Condition View-------------------
Line       177 Item    1  ((iCord.x = grid1Cord.rht) and ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot)))
Condition totals: 0 of 3 input terms covered = 0.0%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
   (iCord.x = grid1Cord.rht)         N  '_1' not hit             Hit '_1'
  (iCord.y >= grid1Cord.top)         N  No hits                  Hit '_0' and '_1'
  (iCord.y <= grid1Cord.bot)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (iCord.x = grid1Cord.rht)_0   -                             
  Row   2:    ***0***  (iCord.x = grid1Cord.rht)_1   ((iCord.y >= grid1Cord.top) and (iCord.y <= grid1Cord.bot))
  Row   3:    ***0***  (iCord.y >= grid1Cord.top)_0  (iCord.x = grid1Cord.rht)     
  Row   4:    ***0***  (iCord.y >= grid1Cord.top)_1  (iCord.x = grid1Cord.rht) && (iCord.y <= grid1Cord.bot)
  Row   5:    ***0***  (iCord.y <= grid1Cord.bot)_0  (iCord.x = grid1Cord.rht) && (iCord.y >= grid1Cord.top)
  Row   6:    ***0***  (iCord.y <= grid1Cord.bot)_1  (iCord.x = grid1Cord.rht) && (iCord.y >= grid1Cord.top)


Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0

=================================================================================
=== Design Unit: work.rgb_if
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                            4         4         0     100.0

================================Statement Details================================

Statement Coverage for Design Unit work.rgb_if --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/top.sv
    1228                                             interface rgb_if(input bit clk);
    1229                                                 logic [7:0]  iRed;
    1230                                                 logic [7:0]  iGreen;
    1231                                                 logic [7:0]  iBlue;
    1232                                                 logic        iValid;
    1233                                                 logic        iPixelEn;
    1234                                                 logic        iEof;
    1235                                                 int unsigned iX;
    1236                                                 int unsigned iY;
    1237                                                 logic [7:0]  oRed;
    1238                                                 logic [7:0]  oGreen;
    1239                                                 logic [7:0]  oBlue;
    1240                                                 logic        oValid;
    1241            1                          1         clocking master_cb @ (posedge clk);
    1242                                                     default input #1step output #1ns;
    1243                                                     output iPixelEn,iX,iY,iRed,iGreen,iBlue,iValid,iEof;
    1244            1                          1             input  oRed;
    1245                                                 endclocking: master_cb
    1246            1                          1         clocking slave_cb @ (posedge clk);
    1247                                                     default input #1step output #1ns;
    1248            1                          1             input  iX,iY,iRed,iGreen,iBlue,iPixelEn,iValid,iEof;

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0

=================================================================================
=== Subprogram: work.socTest_pkg::axiLite_monitor::__m_uvm_field_automation
=================================================================================
=== Design Unit: work.socTest_pkg
=================================================================================

Covergroup Coverage:
    Cover Group Types                3        na        na      28.7
    Coverpoints/Crosses             14        na        na        na
        Covergroup Bins            606       346       260      57.0
-----------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal    Status               
                                                                                              
-----------------------------------------------------------------------------------------------
 TYPE work.socTest_pkg::template_monitor_afterToDut/template_cg 
                                                         0.0%        100    ZERO                 
    covered/total bins:                                     0         24                      
    missing/total bins:                                    24         24                      
    % Hit:                                               0.0%        100                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(1)
    Coverpoint template_cg::ina_cp                       0.0%        100    ZERO                 
        covered/total bins:                                 0          4                      
        missing/total bins:                                 4          4                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                         0          1    ZERO                 
        bin auto[1]                                         0          1    ZERO                 
        bin auto[2]                                         0          1    ZERO                 
        bin auto[3]                                         0          1    ZERO                 
    Coverpoint template_cg::inb_cp                       0.0%        100    ZERO                 
        covered/total bins:                                 0          4                      
        missing/total bins:                                 4          4                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                         0          1    ZERO                 
        bin auto[1]                                         0          1    ZERO                 
        bin auto[2]                                         0          1    ZERO                 
        bin auto[3]                                         0          1    ZERO                 
    Cross template_cg::#cross__0#                        0.0%        100    ZERO                 
        covered/total bins:                                 0         16                      
        missing/total bins:                                16         16                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin <auto[0],auto[0]>                               0          1    ZERO                 
        bin <auto[1],auto[0]>                               0          1    ZERO                 
        bin <auto[2],auto[0]>                               0          1    ZERO                 
        bin <auto[3],auto[0]>                               0          1    ZERO                 
        bin <auto[0],auto[1]>                               0          1    ZERO                 
        bin <auto[1],auto[1]>                               0          1    ZERO                 
        bin <auto[2],auto[1]>                               0          1    ZERO                 
        bin <auto[3],auto[1]>                               0          1    ZERO                 
        bin <auto[0],auto[2]>                               0          1    ZERO                 
        bin <auto[1],auto[2]>                               0          1    ZERO                 
        bin <auto[2],auto[2]>                               0          1    ZERO                 
        bin <auto[3],auto[2]>                               0          1    ZERO                 
        bin <auto[0],auto[3]>                               0          1    ZERO                 
        bin <auto[1],auto[3]>                               0          1    ZERO                 
        bin <auto[2],auto[3]>                               0          1    ZERO                 
        bin <auto[3],auto[3]>                               0          1    ZERO                 
 TYPE work.socTest_pkg::axiLite_fc_subscriber/aL_cg 
                                                         0.0%        100    ZERO                 
    covered/total bins:                                     0        128                      
    missing/total bins:                                   128        128                      
    % Hit:                                               0.0%        100                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(1)
    Coverpoint aL_cg::WDATA_cp                           0.0%        100    ZERO                 
        covered/total bins:                                 0         64                      
        missing/total bins:                                64         64                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:67108863]                                0          1    ZERO                 
        bin auto[67108864:134217727]                        0          1    ZERO                 
        bin auto[134217728:201326591]                       0          1    ZERO                 
        bin auto[201326592:268435455]                       0          1    ZERO                 
        bin auto[268435456:335544319]                       0          1    ZERO                 
        bin auto[335544320:402653183]                       0          1    ZERO                 
        bin auto[402653184:469762047]                       0          1    ZERO                 
        bin auto[469762048:536870911]                       0          1    ZERO                 
        bin auto[536870912:603979775]                       0          1    ZERO                 
        bin auto[603979776:671088639]                       0          1    ZERO                 
        bin auto[671088640:738197503]                       0          1    ZERO                 
        bin auto[738197504:805306367]                       0          1    ZERO                 
        bin auto[805306368:872415231]                       0          1    ZERO                 
        bin auto[872415232:939524095]                       0          1    ZERO                 
        bin auto[939524096:1006632959]                      0          1    ZERO                 
        bin auto[1006632960:1073741823]                     0          1    ZERO                 
        bin auto[1073741824:1140850687]                     0          1    ZERO                 
        bin auto[1140850688:1207959551]                     0          1    ZERO                 
        bin auto[1207959552:1275068415]                     0          1    ZERO                 
        bin auto[1275068416:1342177279]                     0          1    ZERO                 
        bin auto[1342177280:1409286143]                     0          1    ZERO                 
        bin auto[1409286144:1476395007]                     0          1    ZERO                 
        bin auto[1476395008:1543503871]                     0          1    ZERO                 
        bin auto[1543503872:1610612735]                     0          1    ZERO                 
        bin auto[1610612736:1677721599]                     0          1    ZERO                 
        bin auto[1677721600:1744830463]                     0          1    ZERO                 
        bin auto[1744830464:1811939327]                     0          1    ZERO                 
        bin auto[1811939328:1879048191]                     0          1    ZERO                 
        bin auto[1879048192:1946157055]                     0          1    ZERO                 
        bin auto[1946157056:2013265919]                     0          1    ZERO                 
        bin auto[2013265920:2080374783]                     0          1    ZERO                 
        bin auto[2080374784:2147483647]                     0          1    ZERO                 
        bin auto[2147483648:2214592511]                     0          1    ZERO                 
        bin auto[2214592512:2281701375]                     0          1    ZERO                 
        bin auto[2281701376:2348810239]                     0          1    ZERO                 
        bin auto[2348810240:2415919103]                     0          1    ZERO                 
        bin auto[2415919104:2483027967]                     0          1    ZERO                 
        bin auto[2483027968:2550136831]                     0          1    ZERO                 
        bin auto[2550136832:2617245695]                     0          1    ZERO                 
        bin auto[2617245696:2684354559]                     0          1    ZERO                 
        bin auto[2684354560:2751463423]                     0          1    ZERO                 
        bin auto[2751463424:2818572287]                     0          1    ZERO                 
        bin auto[2818572288:2885681151]                     0          1    ZERO                 
        bin auto[2885681152:2952790015]                     0          1    ZERO                 
        bin auto[2952790016:3019898879]                     0          1    ZERO                 
        bin auto[3019898880:3087007743]                     0          1    ZERO                 
        bin auto[3087007744:3154116607]                     0          1    ZERO                 
        bin auto[3154116608:3221225471]                     0          1    ZERO                 
        bin auto[3221225472:3288334335]                     0          1    ZERO                 
        bin auto[3288334336:3355443199]                     0          1    ZERO                 
        bin auto[3355443200:3422552063]                     0          1    ZERO                 
        bin auto[3422552064:3489660927]                     0          1    ZERO                 
        bin auto[3489660928:3556769791]                     0          1    ZERO                 
        bin auto[3556769792:3623878655]                     0          1    ZERO                 
        bin auto[3623878656:3690987519]                     0          1    ZERO                 
        bin auto[3690987520:3758096383]                     0          1    ZERO                 
        bin auto[3758096384:3825205247]                     0          1    ZERO                 
        bin auto[3825205248:3892314111]                     0          1    ZERO                 
        bin auto[3892314112:3959422975]                     0          1    ZERO                 
        bin auto[3959422976:4026531839]                     0          1    ZERO                 
        bin auto[4026531840:4093640703]                     0          1    ZERO                 
        bin auto[4093640704:4160749567]                     0          1    ZERO                 
        bin auto[4160749568:4227858431]                     0          1    ZERO                 
        bin auto[4227858432:4294967295]                     0          1    ZERO                 
    Coverpoint aL_cg::AWADDR_cp                          0.0%        100    ZERO                 
        covered/total bins:                                 0         64                      
        missing/total bins:                                64         64                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:67108863]                                0          1    ZERO                 
        bin auto[67108864:134217727]                        0          1    ZERO                 
        bin auto[134217728:201326591]                       0          1    ZERO                 
        bin auto[201326592:268435455]                       0          1    ZERO                 
        bin auto[268435456:335544319]                       0          1    ZERO                 
        bin auto[335544320:402653183]                       0          1    ZERO                 
        bin auto[402653184:469762047]                       0          1    ZERO                 
        bin auto[469762048:536870911]                       0          1    ZERO                 
        bin auto[536870912:603979775]                       0          1    ZERO                 
        bin auto[603979776:671088639]                       0          1    ZERO                 
        bin auto[671088640:738197503]                       0          1    ZERO                 
        bin auto[738197504:805306367]                       0          1    ZERO                 
        bin auto[805306368:872415231]                       0          1    ZERO                 
        bin auto[872415232:939524095]                       0          1    ZERO                 
        bin auto[939524096:1006632959]                      0          1    ZERO                 
        bin auto[1006632960:1073741823]                     0          1    ZERO                 
        bin auto[1073741824:1140850687]                     0          1    ZERO                 
        bin auto[1140850688:1207959551]                     0          1    ZERO                 
        bin auto[1207959552:1275068415]                     0          1    ZERO                 
        bin auto[1275068416:1342177279]                     0          1    ZERO                 
        bin auto[1342177280:1409286143]                     0          1    ZERO                 
        bin auto[1409286144:1476395007]                     0          1    ZERO                 
        bin auto[1476395008:1543503871]                     0          1    ZERO                 
        bin auto[1543503872:1610612735]                     0          1    ZERO                 
        bin auto[1610612736:1677721599]                     0          1    ZERO                 
        bin auto[1677721600:1744830463]                     0          1    ZERO                 
        bin auto[1744830464:1811939327]                     0          1    ZERO                 
        bin auto[1811939328:1879048191]                     0          1    ZERO                 
        bin auto[1879048192:1946157055]                     0          1    ZERO                 
        bin auto[1946157056:2013265919]                     0          1    ZERO                 
        bin auto[2013265920:2080374783]                     0          1    ZERO                 
        bin auto[2080374784:2147483647]                     0          1    ZERO                 
        bin auto[2147483648:2214592511]                     0          1    ZERO                 
        bin auto[2214592512:2281701375]                     0          1    ZERO                 
        bin auto[2281701376:2348810239]                     0          1    ZERO                 
        bin auto[2348810240:2415919103]                     0          1    ZERO                 
        bin auto[2415919104:2483027967]                     0          1    ZERO                 
        bin auto[2483027968:2550136831]                     0          1    ZERO                 
        bin auto[2550136832:2617245695]                     0          1    ZERO                 
        bin auto[2617245696:2684354559]                     0          1    ZERO                 
        bin auto[2684354560:2751463423]                     0          1    ZERO                 
        bin auto[2751463424:2818572287]                     0          1    ZERO                 
        bin auto[2818572288:2885681151]                     0          1    ZERO                 
        bin auto[2885681152:2952790015]                     0          1    ZERO                 
        bin auto[2952790016:3019898879]                     0          1    ZERO                 
        bin auto[3019898880:3087007743]                     0          1    ZERO                 
        bin auto[3087007744:3154116607]                     0          1    ZERO                 
        bin auto[3154116608:3221225471]                     0          1    ZERO                 
        bin auto[3221225472:3288334335]                     0          1    ZERO                 
        bin auto[3288334336:3355443199]                     0          1    ZERO                 
        bin auto[3355443200:3422552063]                     0          1    ZERO                 
        bin auto[3422552064:3489660927]                     0          1    ZERO                 
        bin auto[3489660928:3556769791]                     0          1    ZERO                 
        bin auto[3556769792:3623878655]                     0          1    ZERO                 
        bin auto[3623878656:3690987519]                     0          1    ZERO                 
        bin auto[3690987520:3758096383]                     0          1    ZERO                 
        bin auto[3758096384:3825205247]                     0          1    ZERO                 
        bin auto[3825205248:3892314111]                     0          1    ZERO                 
        bin auto[3892314112:3959422975]                     0          1    ZERO                 
        bin auto[3959422976:4026531839]                     0          1    ZERO                 
        bin auto[4026531840:4093640703]                     0          1    ZERO                 
        bin auto[4093640704:4160749567]                     0          1    ZERO                 
        bin auto[4160749568:4227858431]                     0          1    ZERO                 
        bin auto[4227858432:4294967295]                     0          1    ZERO                 
 TYPE work.socTest_pkg::rgb_fc_subscriber/rgb_cg        86.2%        100    Uncovered            
    covered/total bins:                                   346        454                      
    missing/total bins:                                   108        454                      
    % Hit:                                              76.2%        100                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(1)
    Coverpoint rgb_cg::iRed_cp                          79.6%        100    Uncovered            
        covered/total bins:                                51         64                      
        missing/total bins:                                13         64                      
        % Hit:                                          79.6%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:3]                                       4          1    Covered              
        bin auto[4:7]                                       0          1    ZERO                 
        bin auto[8:11]                                      6          1    Covered              
        bin auto[12:15]                                     0          1    ZERO                 
        bin auto[16:19]                                     4          1    Covered              
        bin auto[20:23]                                     0          1    ZERO                 
        bin auto[24:27]                                     6          1    Covered              
        bin auto[28:31]                                     8          1    Covered              
        bin auto[32:35]                                     2          1    Covered              
        bin auto[36:39]                                     4          1    Covered              
        bin auto[40:43]                                     6          1    Covered              
        bin auto[44:47]                                     4          1    Covered              
        bin auto[48:51]                                     2          1    Covered              
        bin auto[52:55]                                     8          1    Covered              
        bin auto[56:59]                                     2          1    Covered              
        bin auto[60:63]                                     2          1    Covered              
        bin auto[64:67]                                     2          1    Covered              
        bin auto[68:71]                                     0          1    ZERO                 
        bin auto[72:75]                                     4          1    Covered              
        bin auto[76:79]                                     0          1    ZERO                 
        bin auto[80:83]                                     6          1    Covered              
        bin auto[84:87]                                     2          1    Covered              
        bin auto[88:91]                                     2          1    Covered              
        bin auto[92:95]                                     8          1    Covered              
        bin auto[96:99]                                     2          1    Covered              
        bin auto[100:103]                                   0          1    ZERO                 
        bin auto[104:107]                                   0          1    ZERO                 
        bin auto[108:111]                                   2          1    Covered              
        bin auto[112:115]                                   2          1    Covered              
        bin auto[116:119]                                   0          1    ZERO                 
        bin auto[120:123]                                   2          1    Covered              
        bin auto[124:127]                                   2          1    Covered              
        bin auto[128:131]                                   6          1    Covered              
        bin auto[132:135]                                   6          1    Covered              
        bin auto[136:139]                                   0          1    ZERO                 
        bin auto[140:143]                                   2          1    Covered              
        bin auto[144:147]                                   8          1    Covered              
        bin auto[148:151]                                   0          1    ZERO                 
        bin auto[152:155]                                   4          1    Covered              
        bin auto[156:159]                                   6          1    Covered              
        bin auto[160:163]                                   0          1    ZERO                 
        bin auto[164:167]                                   2          1    Covered              
        bin auto[168:171]                                   2          1    Covered              
        bin auto[172:175]                                   4          1    Covered              
        bin auto[176:179]                                   6          1    Covered              
        bin auto[180:183]                                   6          1    Covered              
        bin auto[184:187]                                   4          1    Covered              
        bin auto[188:191]                                   6          1    Covered              
        bin auto[192:195]                                   4          1    Covered              
        bin auto[196:199]                                   4          1    Covered              
        bin auto[200:203]                                   4          1    Covered              
        bin auto[204:207]                                   4          1    Covered              
        bin auto[208:211]                                   2          1    Covered              
        bin auto[212:215]                                   8          1    Covered              
        bin auto[216:219]                                   2          1    Covered              
        bin auto[220:223]                                   8          1    Covered              
        bin auto[224:227]                                   4          1    Covered              
        bin auto[228:231]                                   6          1    Covered              
        bin auto[232:235]                                   4          1    Covered              
        bin auto[236:239]                                   0          1    ZERO                 
        bin auto[240:243]                                   2          1    Covered              
        bin auto[244:247]                                  10          1    Covered              
        bin auto[248:251]                                   4          1    Covered              
        bin auto[252:255]                                   0          1    ZERO                 
    Coverpoint rgb_cg::iGreen_cp                        81.2%        100    Uncovered            
        covered/total bins:                                52         64                      
        missing/total bins:                                12         64                      
        % Hit:                                          81.2%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:3]                                       6          1    Covered              
        bin auto[4:7]                                       6          1    Covered              
        bin auto[8:11]                                      6          1    Covered              
        bin auto[12:15]                                     0          1    ZERO                 
        bin auto[16:19]                                     4          1    Covered              
        bin auto[20:23]                                     2          1    Covered              
        bin auto[24:27]                                     2          1    Covered              
        bin auto[28:31]                                     8          1    Covered              
        bin auto[32:35]                                     2          1    Covered              
        bin auto[36:39]                                     4          1    Covered              
        bin auto[40:43]                                     8          1    Covered              
        bin auto[44:47]                                    10          1    Covered              
        bin auto[48:51]                                     0          1    ZERO                 
        bin auto[52:55]                                     2          1    Covered              
        bin auto[56:59]                                     0          1    ZERO                 
        bin auto[60:63]                                     6          1    Covered              
        bin auto[64:67]                                     0          1    ZERO                 
        bin auto[68:71]                                     2          1    Covered              
        bin auto[72:75]                                     0          1    ZERO                 
        bin auto[76:79]                                     4          1    Covered              
        bin auto[80:83]                                     2          1    Covered              
        bin auto[84:87]                                     2          1    Covered              
        bin auto[88:91]                                     2          1    Covered              
        bin auto[92:95]                                     2          1    Covered              
        bin auto[96:99]                                     6          1    Covered              
        bin auto[100:103]                                   6          1    Covered              
        bin auto[104:107]                                   4          1    Covered              
        bin auto[108:111]                                  12          1    Covered              
        bin auto[112:115]                                   4          1    Covered              
        bin auto[116:119]                                   2          1    Covered              
        bin auto[120:123]                                   0          1    ZERO                 
        bin auto[124:127]                                   2          1    Covered              
        bin auto[128:131]                                   2          1    Covered              
        bin auto[132:135]                                  10          1    Covered              
        bin auto[136:139]                                   0          1    ZERO                 
        bin auto[140:143]                                   4          1    Covered              
        bin auto[144:147]                                   2          1    Covered              
        bin auto[148:151]                                   4          1    Covered              
        bin auto[152:155]                                   0          1    ZERO                 
        bin auto[156:159]                                   4          1    Covered              
        bin auto[160:163]                                   0          1    ZERO                 
        bin auto[164:167]                                   2          1    Covered              
        bin auto[168:171]                                   6          1    Covered              
        bin auto[172:175]                                   2          1    Covered              
        bin auto[176:179]                                   6          1    Covered              
        bin auto[180:183]                                   2          1    Covered              
        bin auto[184:187]                                   4          1    Covered              
        bin auto[188:191]                                   2          1    Covered              
        bin auto[192:195]                                   2          1    Covered              
        bin auto[196:199]                                   4          1    Covered              
        bin auto[200:203]                                   6          1    Covered              
        bin auto[204:207]                                   2          1    Covered              
        bin auto[208:211]                                   0          1    ZERO                 
        bin auto[212:215]                                   6          1    Covered              
        bin auto[216:219]                                   2          1    Covered              
        bin auto[220:223]                                   4          1    Covered              
        bin auto[224:227]                                   4          1    Covered              
        bin auto[228:231]                                   2          1    Covered              
        bin auto[232:235]                                   0          1    ZERO                 
        bin auto[236:239]                                   0          1    ZERO                 
        bin auto[240:243]                                   2          1    Covered              
        bin auto[244:247]                                   8          1    Covered              
        bin auto[248:251]                                   8          1    Covered              
        bin auto[252:255]                                   4          1    Covered              
    Coverpoint rgb_cg::iBlue_cp                         89.0%        100    Uncovered            
        covered/total bins:                                57         64                      
        missing/total bins:                                 7         64                      
        % Hit:                                          89.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:3]                                       4          1    Covered              
        bin auto[4:7]                                       2          1    Covered              
        bin auto[8:11]                                      2          1    Covered              
        bin auto[12:15]                                     6          1    Covered              
        bin auto[16:19]                                     2          1    Covered              
        bin auto[20:23]                                     2          1    Covered              
        bin auto[24:27]                                     2          1    Covered              
        bin auto[28:31]                                     0          1    ZERO                 
        bin auto[32:35]                                     6          1    Covered              
        bin auto[36:39]                                     2          1    Covered              
        bin auto[40:43]                                     2          1    Covered              
        bin auto[44:47]                                     0          1    ZERO                 
        bin auto[48:51]                                     2          1    Covered              
        bin auto[52:55]                                     4          1    Covered              
        bin auto[56:59]                                     4          1    Covered              
        bin auto[60:63]                                     2          1    Covered              
        bin auto[64:67]                                     4          1    Covered              
        bin auto[68:71]                                     8          1    Covered              
        bin auto[72:75]                                     0          1    ZERO                 
        bin auto[76:79]                                     6          1    Covered              
        bin auto[80:83]                                     4          1    Covered              
        bin auto[84:87]                                     6          1    Covered              
        bin auto[88:91]                                     0          1    ZERO                 
        bin auto[92:95]                                     2          1    Covered              
        bin auto[96:99]                                     6          1    Covered              
        bin auto[100:103]                                   6          1    Covered              
        bin auto[104:107]                                   4          1    Covered              
        bin auto[108:111]                                   6          1    Covered              
        bin auto[112:115]                                   2          1    Covered              
        bin auto[116:119]                                   4          1    Covered              
        bin auto[120:123]                                   0          1    ZERO                 
        bin auto[124:127]                                   2          1    Covered              
        bin auto[128:131]                                   2          1    Covered              
        bin auto[132:135]                                   4          1    Covered              
        bin auto[136:139]                                   6          1    Covered              
        bin auto[140:143]                                   4          1    Covered              
        bin auto[144:147]                                   2          1    Covered              
        bin auto[148:151]                                   4          1    Covered              
        bin auto[152:155]                                   6          1    Covered              
        bin auto[156:159]                                   4          1    Covered              
        bin auto[160:163]                                  10          1    Covered              
        bin auto[164:167]                                   6          1    Covered              
        bin auto[168:171]                                   2          1    Covered              
        bin auto[172:175]                                   4          1    Covered              
        bin auto[176:179]                                   2          1    Covered              
        bin auto[180:183]                                   2          1    Covered              
        bin auto[184:187]                                   2          1    Covered              
        bin auto[188:191]                                   2          1    Covered              
        bin auto[192:195]                                   6          1    Covered              
        bin auto[196:199]                                   2          1    Covered              
        bin auto[200:203]                                   2          1    Covered              
        bin auto[204:207]                                   0          1    ZERO                 
        bin auto[208:211]                                   2          1    Covered              
        bin auto[212:215]                                   2          1    Covered              
        bin auto[216:219]                                   0          1    ZERO                 
        bin auto[220:223]                                   2          1    Covered              
        bin auto[224:227]                                   8          1    Covered              
        bin auto[228:231]                                   6          1    Covered              
        bin auto[232:235]                                   6          1    Covered              
        bin auto[236:239]                                   2          1    Covered              
        bin auto[240:243]                                   2          1    Covered              
        bin auto[244:247]                                   4          1    Covered              
        bin auto[248:251]                                   8          1    Covered              
        bin auto[252:255]                                   4          1    Covered              
    Coverpoint rgb_cg::iPixelEn_cp                     100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                       120          1    Covered              
        bin auto[1]                                       100          1    Covered              
    Coverpoint rgb_cg::iValid_cp                       100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                       132          1    Covered              
        bin auto[1]                                        88          1    Covered              
    Coverpoint rgb_cg::iEof_cp                         100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                       114          1    Covered              
        bin auto[1]                                       106          1    Covered              
    Coverpoint rgb_cg::iX_cp                            85.9%        100    Uncovered            
        covered/total bins:                                55         64                      
        missing/total bins:                                 9         64                      
        % Hit:                                          85.9%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:31]                                      4          1    Covered              
        bin auto[32:63]                                     2          1    Covered              
        bin auto[64:95]                                     6          1    Covered              
        bin auto[96:127]                                   10          1    Covered              
        bin auto[128:159]                                   8          1    Covered              
        bin auto[160:191]                                   0          1    ZERO                 
        bin auto[192:223]                                   2          1    Covered              
        bin auto[224:255]                                   4          1    Covered              
        bin auto[256:287]                                   2          1    Covered              
        bin auto[288:319]                                   8          1    Covered              
        bin auto[320:351]                                   6          1    Covered              
        bin auto[352:383]                                   4          1    Covered              
        bin auto[384:415]                                   0          1    ZERO                 
        bin auto[416:447]                                   2          1    Covered              
        bin auto[448:479]                                   4          1    Covered              
        bin auto[480:511]                                   0          1    ZERO                 
        bin auto[512:543]                                   4          1    Covered              
        bin auto[544:575]                                   6          1    Covered              
        bin auto[576:607]                                   2          1    Covered              
        bin auto[608:639]                                   8          1    Covered              
        bin auto[640:671]                                   2          1    Covered              
        bin auto[672:703]                                   2          1    Covered              
        bin auto[704:735]                                   4          1    Covered              
        bin auto[736:767]                                   2          1    Covered              
        bin auto[768:799]                                   2          1    Covered              
        bin auto[800:831]                                   6          1    Covered              
        bin auto[832:863]                                   0          1    ZERO                 
        bin auto[864:895]                                   2          1    Covered              
        bin auto[896:927]                                   2          1    Covered              
        bin auto[928:959]                                   2          1    Covered              
        bin auto[960:991]                                   4          1    Covered              
        bin auto[992:1023]                                  4          1    Covered              
        bin auto[1024:1055]                                 4          1    Covered              
        bin auto[1056:1087]                                 4          1    Covered              
        bin auto[1088:1119]                                 4          1    Covered              
        bin auto[1120:1151]                                 0          1    ZERO                 
        bin auto[1152:1183]                                 6          1    Covered              
        bin auto[1184:1215]                                 6          1    Covered              
        bin auto[1216:1247]                                 8          1    Covered              
        bin auto[1248:1279]                                 4          1    Covered              
        bin auto[1280:1311]                                 6          1    Covered              
        bin auto[1312:1343]                                 0          1    ZERO                 
        bin auto[1344:1375]                                 0          1    ZERO                 
        bin auto[1376:1407]                                 4          1    Covered              
        bin auto[1408:1439]                                 6          1    Covered              
        bin auto[1440:1471]                                 0          1    ZERO                 
        bin auto[1472:1503]                                 2          1    Covered              
        bin auto[1504:1535]                                 2          1    Covered              
        bin auto[1536:1567]                                 4          1    Covered              
        bin auto[1568:1599]                                 2          1    Covered              
        bin auto[1600:1631]                                 2          1    Covered              
        bin auto[1632:1663]                                 0          1    ZERO                 
        bin auto[1664:1695]                                 4          1    Covered              
        bin auto[1696:1727]                                 2          1    Covered              
        bin auto[1728:1759]                                 4          1    Covered              
        bin auto[1760:1791]                                 6          1    Covered              
        bin auto[1792:1823]                                 2          1    Covered              
        bin auto[1824:1855]                                 4          1    Covered              
        bin auto[1856:1887]                                 2          1    Covered              
        bin auto[1888:1919]                                 2          1    Covered              
        bin auto[1920:1951]                                 2          1    Covered              
        bin auto[1952:1983]                                 2          1    Covered              
        bin auto[1984:2015]                                 8          1    Covered              
        bin auto[2016:2047]                                 4          1    Covered              
    Coverpoint rgb_cg::iY_cp                            85.9%        100    Uncovered            
        covered/total bins:                                55         64                      
        missing/total bins:                                 9         64                      
        % Hit:                                          85.9%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:31]                                      2          1    Covered              
        bin auto[32:63]                                     2          1    Covered              
        bin auto[64:95]                                     6          1    Covered              
        bin auto[96:127]                                    6          1    Covered              
        bin auto[128:159]                                   2          1    Covered              
        bin auto[160:191]                                   4          1    Covered              
        bin auto[192:223]                                   4          1    Covered              
        bin auto[224:255]                                   6          1    Covered              
        bin auto[256:287]                                   6          1    Covered              
        bin auto[288:319]                                   4          1    Covered              
        bin auto[320:351]                                   2          1    Covered              
        bin auto[352:383]                                   8          1    Covered              
        bin auto[384:415]                                   0          1    ZERO                 
        bin auto[416:447]                                   2          1    Covered              
        bin auto[448:479]                                   6          1    Covered              
        bin auto[480:511]                                   6          1    Covered              
        bin auto[512:543]                                   6          1    Covered              
        bin auto[544:575]                                   4          1    Covered              
        bin auto[576:607]                                   2          1    Covered              
        bin auto[608:639]                                   0          1    ZERO                 
        bin auto[640:671]                                   4          1    Covered              
        bin auto[672:703]                                   4          1    Covered              
        bin auto[704:735]                                   2          1    Covered              
        bin auto[736:767]                                   4          1    Covered              
        bin auto[768:799]                                   6          1    Covered              
        bin auto[800:831]                                   4          1    Covered              
        bin auto[832:863]                                   4          1    Covered              
        bin auto[864:895]                                   4          1    Covered              
        bin auto[896:927]                                   4          1    Covered              
        bin auto[928:959]                                   2          1    Covered              
        bin auto[960:991]                                   4          1    Covered              
        bin auto[992:1023]                                  6          1    Covered              
        bin auto[1024:1055]                                 0          1    ZERO                 
        bin auto[1056:1087]                                 2          1    Covered              
        bin auto[1088:1119]                                 2          1    Covered              
        bin auto[1120:1151]                                 4          1    Covered              
        bin auto[1152:1183]                                 2          1    Covered              
        bin auto[1184:1215]                                 4          1    Covered              
        bin auto[1216:1247]                                 6          1    Covered              
        bin auto[1248:1279]                                 4          1    Covered              
        bin auto[1280:1311]                                 6          1    Covered              
        bin auto[1312:1343]                                 2          1    Covered              
        bin auto[1344:1375]                                 4          1    Covered              
        bin auto[1376:1407]                                 0          1    ZERO                 
        bin auto[1408:1439]                                 4          1    Covered              
        bin auto[1440:1471]                                 0          1    ZERO                 
        bin auto[1472:1503]                                 4          1    Covered              
        bin auto[1504:1535]                                 2          1    Covered              
        bin auto[1536:1567]                                 4          1    Covered              
        bin auto[1568:1599]                                 8          1    Covered              
        bin auto[1600:1631]                                 6          1    Covered              
        bin auto[1632:1663]                                 2          1    Covered              
        bin auto[1664:1695]                                 2          1    Covered              
        bin auto[1696:1727]                                 0          1    ZERO                 
        bin auto[1728:1759]                                 4          1    Covered              
        bin auto[1760:1791]                                 6          1    Covered              
        bin auto[1792:1823]                                 4          1    Covered              
        bin auto[1824:1855]                                 2          1    Covered              
        bin auto[1856:1887]                                 0          1    ZERO                 
        bin auto[1888:1919]                                 0          1    ZERO                 
        bin auto[1920:1951]                                 4          1    Covered              
        bin auto[1952:1983]                                 0          1    ZERO                 
        bin auto[1984:2015]                                 4          1    Covered              
        bin auto[2016:2047]                                 2          1    Covered              
    Cross rgb_cg::#cross__0#                            54.6%        100    Uncovered            
        covered/total bins:                                70        128                      
        missing/total bins:                                58        128                      
        % Hit:                                          54.6%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin <auto[0:3],auto[0]>                             4          1    Covered              
        bin <auto[8:11],auto[0]>                            6          1    Covered              
        bin <auto[16:19],auto[0]>                           2          1    Covered              
        bin <auto[24:27],auto[0]>                           6          1    Covered              
        bin <auto[28:31],auto[0]>                           2          1    Covered              
        bin <auto[32:35],auto[0]>                           2          1    Covered              
        bin <auto[40:43],auto[0]>                           2          1    Covered              
        bin <auto[44:47],auto[0]>                           4          1    Covered              
        bin <auto[48:51],auto[0]>                           2          1    Covered              
        bin <auto[52:55],auto[0]>                           4          1    Covered              
        bin <auto[56:59],auto[0]>                           2          1    Covered              
        bin <auto[72:75],auto[0]>                           2          1    Covered              
        bin <auto[80:83],auto[0]>                           4          1    Covered              
        bin <auto[88:91],auto[0]>                           2          1    Covered              
        bin <auto[108:111],auto[0]>                         2          1    Covered              
        bin <auto[112:115],auto[0]>                         2          1    Covered              
        bin <auto[120:123],auto[0]>                         2          1    Covered              
        bin <auto[128:131],auto[0]>                         2          1    Covered              
        bin <auto[132:135],auto[0]>                         2          1    Covered              
        bin <auto[144:147],auto[0]>                         6          1    Covered              
        bin <auto[152:155],auto[0]>                         4          1    Covered              
        bin <auto[156:159],auto[0]>                         4          1    Covered              
        bin <auto[172:175],auto[0]>                         2          1    Covered              
        bin <auto[180:183],auto[0]>                         6          1    Covered              
        bin <auto[184:187],auto[0]>                         2          1    Covered              
        bin <auto[188:191],auto[0]>                         4          1    Covered              
        bin <auto[192:195],auto[0]>                         4          1    Covered              
        bin <auto[196:199],auto[0]>                         4          1    Covered              
        bin <auto[200:203],auto[0]>                         2          1    Covered              
        bin <auto[204:207],auto[0]>                         2          1    Covered              
        bin <auto[208:211],auto[0]>                         2          1    Covered              
        bin <auto[212:215],auto[0]>                         6          1    Covered              
        bin <auto[216:219],auto[0]>                         2          1    Covered              
        bin <auto[220:223],auto[0]>                         2          1    Covered              
        bin <auto[224:227],auto[0]>                         2          1    Covered              
        bin <auto[228:231],auto[0]>                         2          1    Covered              
        bin <auto[232:235],auto[0]>                         4          1    Covered              
        bin <auto[16:19],auto[1]>                           2          1    Covered              
        bin <auto[28:31],auto[1]>                           6          1    Covered              
        bin <auto[36:39],auto[1]>                           4          1    Covered              
        bin <auto[40:43],auto[1]>                           4          1    Covered              
        bin <auto[52:55],auto[1]>                           4          1    Covered              
        bin <auto[60:63],auto[1]>                           2          1    Covered              
        bin <auto[64:67],auto[1]>                           2          1    Covered              
        bin <auto[72:75],auto[1]>                           2          1    Covered              
        bin <auto[80:83],auto[1]>                           2          1    Covered              
        bin <auto[84:87],auto[1]>                           2          1    Covered              
        bin <auto[92:95],auto[1]>                           8          1    Covered              
        bin <auto[96:99],auto[1]>                           2          1    Covered              
        bin <auto[124:127],auto[1]>                         2          1    Covered              
        bin <auto[128:131],auto[1]>                         4          1    Covered              
        bin <auto[132:135],auto[1]>                         4          1    Covered              
        bin <auto[140:143],auto[1]>                         2          1    Covered              
        bin <auto[144:147],auto[1]>                         2          1    Covered              
        bin <auto[156:159],auto[1]>                         2          1    Covered              
        bin <auto[164:167],auto[1]>                         2          1    Covered              
        bin <auto[168:171],auto[1]>                         2          1    Covered              
        bin <auto[172:175],auto[1]>                         2          1    Covered              
        bin <auto[176:179],auto[1]>                         6          1    Covered              
        bin <auto[184:187],auto[1]>                         2          1    Covered              
        bin <auto[188:191],auto[1]>                         2          1    Covered              
        bin <auto[200:203],auto[1]>                         2          1    Covered              
        bin <auto[204:207],auto[1]>                         2          1    Covered              
        bin <auto[212:215],auto[1]>                         2          1    Covered              
        bin <auto[220:223],auto[1]>                         6          1    Covered              
        bin <auto[224:227],auto[1]>                         2          1    Covered              
        bin <auto[228:231],auto[1]>                         4          1    Covered              
        bin <auto[240:243],auto[1]>                         2          1    Covered              
        bin <auto[244:247],auto[1]>                        10          1    Covered              
        bin <auto[248:251],auto[1]>                         4          1    Covered              
        bin <auto[4:7],auto[0]>                             0          1    ZERO                 
        bin <auto[12:15],auto[0]>                           0          1    ZERO                 
        bin <auto[20:23],auto[0]>                           0          1    ZERO                 
        bin <auto[36:39],auto[0]>                           0          1    ZERO                 
        bin <auto[60:63],auto[0]>                           0          1    ZERO                 
        bin <auto[64:67],auto[0]>                           0          1    ZERO                 
        bin <auto[68:71],auto[0]>                           0          1    ZERO                 
        bin <auto[76:79],auto[0]>                           0          1    ZERO                 
        bin <auto[84:87],auto[0]>                           0          1    ZERO                 
        bin <auto[92:95],auto[0]>                           0          1    ZERO                 
        bin <auto[96:99],auto[0]>                           0          1    ZERO                 
        bin <auto[100:103],auto[0]>                         0          1    ZERO                 
        bin <auto[104:107],auto[0]>                         0          1    ZERO                 
        bin <auto[116:119],auto[0]>                         0          1    ZERO                 
        bin <auto[124:127],auto[0]>                         0          1    ZERO                 
        bin <auto[136:139],auto[0]>                         0          1    ZERO                 
        bin <auto[140:143],auto[0]>                         0          1    ZERO                 
        bin <auto[148:151],auto[0]>                         0          1    ZERO                 
        bin <auto[160:163],auto[0]>                         0          1    ZERO                 
        bin <auto[164:167],auto[0]>                         0          1    ZERO                 
        bin <auto[168:171],auto[0]>                         0          1    ZERO                 
        bin <auto[176:179],auto[0]>                         0          1    ZERO                 
        bin <auto[236:239],auto[0]>                         0          1    ZERO                 
        bin <auto[240:243],auto[0]>                         0          1    ZERO                 
        bin <auto[244:247],auto[0]>                         0          1    ZERO                 
        bin <auto[248:251],auto[0]>                         0          1    ZERO                 
        bin <auto[252:255],auto[0]>                         0          1    ZERO                 
        bin <auto[0:3],auto[1]>                             0          1    ZERO                 
        bin <auto[4:7],auto[1]>                             0          1    ZERO                 
        bin <auto[8:11],auto[1]>                            0          1    ZERO                 
        bin <auto[12:15],auto[1]>                           0          1    ZERO                 
        bin <auto[20:23],auto[1]>                           0          1    ZERO                 
        bin <auto[24:27],auto[1]>                           0          1    ZERO                 
        bin <auto[32:35],auto[1]>                           0          1    ZERO                 
        bin <auto[44:47],auto[1]>                           0          1    ZERO                 
        bin <auto[48:51],auto[1]>                           0          1    ZERO                 
        bin <auto[56:59],auto[1]>                           0          1    ZERO                 
        bin <auto[68:71],auto[1]>                           0          1    ZERO                 
        bin <auto[76:79],auto[1]>                           0          1    ZERO                 
        bin <auto[88:91],auto[1]>                           0          1    ZERO                 
        bin <auto[100:103],auto[1]>                         0          1    ZERO                 
        bin <auto[104:107],auto[1]>                         0          1    ZERO                 
        bin <auto[108:111],auto[1]>                         0          1    ZERO                 
        bin <auto[112:115],auto[1]>                         0          1    ZERO                 
        bin <auto[116:119],auto[1]>                         0          1    ZERO                 
        bin <auto[120:123],auto[1]>                         0          1    ZERO                 
        bin <auto[136:139],auto[1]>                         0          1    ZERO                 
        bin <auto[148:151],auto[1]>                         0          1    ZERO                 
        bin <auto[152:155],auto[1]>                         0          1    ZERO                 
        bin <auto[160:163],auto[1]>                         0          1    ZERO                 
        bin <auto[180:183],auto[1]>                         0          1    ZERO                 
        bin <auto[192:195],auto[1]>                         0          1    ZERO                 
        bin <auto[196:199],auto[1]>                         0          1    ZERO                 
        bin <auto[208:211],auto[1]>                         0          1    ZERO                 
        bin <auto[216:219],auto[1]>                         0          1    ZERO                 
        bin <auto[232:235],auto[1]>                         0          1    ZERO                 
        bin <auto[236:239],auto[1]>                         0          1    ZERO                 
        bin <auto[252:255],auto[1]>                         0          1    ZERO                 

=================================================================================
=== Subprogram: work.socTest_pkg::random_sequence_r2::body
=================================================================================
=== Design Unit: work.socTest_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0     100.0
-------------------------------------------------------
Name                 File(Line)           Failure Pass 
                                          Count   Count 
-------------------------------------------------------
work.socTest_pkg::random_sequence_r2/body/random_loop/immed__188
                     ../modules/top.sv(188)       0     1

=================================================================================
=== Subprogram: work.socTest_pkg::rgb_test::build_phase
=================================================================================
=== Design Unit: work.socTest_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0     100.0
-------------------------------------------------------
Name                 File(Line)           Failure Pass 
                                          Count   Count 
-------------------------------------------------------
work.socTest_pkg::rgb_test/build_phase/#ublk#215236535#1157/immed__1160
                     ../modules/top.sv(1160)       0     1

=================================================================================
=== Design Unit: work.socTest_pkg
=================================================================================

Covergroup Coverage:
    Cover Group Types                3        na        na      28.7
    Coverpoints/Crosses             14        na        na        na
        Covergroup Bins            606       346       260      57.0

Assertion Coverage:
    Assertions                       2         2         0     100.0

=================================================================================
=== Design Unit: work.template
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           24         8        16      33.3

================================Statement Details================================

Statement Coverage for Design Unit work.template --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/dut/template.v
    1                                                module template(input wire clk,
    2                                                		   input wire en_i,
    3                                                		   input wire ina,
    4                                                		   input wire inb,
    5                                                		   output reg en_o,
    6                                                		   output reg out);
    7                                                	integer counter, state;
    8                                                	reg[1:0] temp_a, temp_b;
    9                                                	reg[2:0] temp_out;
    10                                               	//Init
    11                                               	initial begin
    12              1                          1     		counter = 0;
    13              1                          1     		temp_a = 2'b00;
    14              1                          1     		temp_b = 2'b00;
    15              1                          1     		temp_out = 3'b000;
    16              1                          1     		out = 1;
    17              1                          1     		en_o <= 0;
    18              1                          1     		state = 0;
    19                                               	end
    20              1                        220     	always@(posedge clk)
    21                                               	begin
    22                                               		//State 0: Wait for en_i
    23                                               		if(en_i==1'b1)
    24                                               		begin
    25              1                    ***0***     			state = 1;
    26                                               		end
    27                                               		case(state)
    28                                               			//State 1: Start reading inputs
    29                                               			1: begin
    30              1                    ***0***     				temp_a = temp_a << 1;
    31              1                    ***0***     				temp_a = temp_a | ina;
    32              1                    ***0***     				temp_b = temp_b << 1;
    33              1                    ***0***     				temp_b = temp_b | inb;
    34              1                    ***0***     				counter = counter + 1;
    35                                               				//After 2 bits, do the operation an move to the next state
    36                                               				if(counter==2) begin
    37              1                    ***0***     					temp_out = temp_a + temp_b;
    38              1                    ***0***     					state = 2;
    39                                               				end
    40                                               			end
    41                                               			//State 2: Enable en_o and sends result to the output
    42                                               			2: begin
    43              1                    ***0***     				out <= temp_out[2];
    44              1                    ***0***     				temp_out = temp_out << 1;
    45              1                    ***0***     				counter = counter + 1;
    46              1                    ***0***     				if(counter==3) en_o <= 1'b1;
    47              1                    ***0***     				if(counter==4) en_o <= 1'b0;
    48                                               				if(counter==6) begin
    49              1                    ***0***     					counter = 0;
    50              1                    ***0***     					out <= 1'b1;
    51              1                    ***0***     					state = 0;

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                        13         2        11      15.3

================================Branch Details================================

Branch Coverage for Design Unit work.template

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/dut/template.v
------------------------------------IF Branch------------------------------------
    23                                       220     Count coming in to IF
    23              1                    ***0***     		if(en_i==1'b1)
                                             220     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------CASE Branch------------------------------------
    27                                       220     Count coming in to CASE
    29              1                    ***0***     			1: begin
    42              1                    ***0***     			2: begin
                                             220     All False Count
Branch totals: 1 hit of 3 branches = 33.3%

------------------------------------IF Branch------------------------------------
    36                                   ***0***     Count coming in to IF
    36              1                    ***0***     				if(counter==2) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    46                                   ***0***     Count coming in to IF
    46              1                    ***0***     				if(counter==3) en_o <= 1'b1;
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    47                                   ***0***     Count coming in to IF
    47              1                    ***0***     				if(counter==4) en_o <= 1'b0;
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    48                                   ***0***     Count coming in to IF
    48              1                    ***0***     				if(counter==6) begin
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                         0.0
        States                       3         0         3       0.0
        Transitions                  4         0         4       0.0

================================FSM Details================================

FSM Coverage for Design Unit work.template --

FSM_ID: state
    Current State Object : state
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  29                 st0                   1
  42                 st1                   2
  25                 st2                   0
    Uncovered States :
    ------------------
                   State
                   -----
                     st0
                     st1
                     st2
    Uncovered Transitions :
    -----------------------
Line            Trans_ID          Transition          
----            --------          ----------          
  38                   0          st0 -> st1          
  51                   1          st1 -> st2          
  25                   2          st1 -> st0          
  25                   3          st2 -> st0          


    Summary                     Active      Hits    Misses % Covered
    -------                     ------      ----    ------ ---------
        States                       3         0         3       0.0
        Transitions                  4         0         4       0.0

=================================================================================
=== Design Unit: work.top
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                           22        22         0     100.0

================================Statement Details================================

Statement Coverage for Design Unit work.top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/top.sv
    1322                                             module top;
    1323                                                 import uvm_pkg::*;
    1324                                                 import socTest_pkg::*;
    1325                                                 reg ACLK;
    1326                                                 reg ARESETN;
    1327                                                 reg clk;
    1328                                                 axiLite_if          axiLiteVif(ACLK,ARESETN);
    1329                                                 vfpConfigDut        vfpConfig_test(axiLiteVif); // [AXILITE]
    1330                                                 template_if         templateVif();
    1331                                                 adder               templateDut(templateVif);   // [TEMPLATE]
    1332                                                 rgb_if              frame_slave_if(clk);
    1333                                                 rgb_color           frame_color(frame_slave_if);// [RGB]
    1334                                                 initial begin
    1335            1                          1             ARESETN = 1'b0;
    1336            1                          1         #1000;
    1337            1                          1             ARESETN = 1'b1;
    1338                                                 end
    1339                                                 initial begin
    1340            1                          1             ACLK = 0;
    1341            1                          1         #5ns ;
    1342            1                          1         forever #5ns ACLK = ! ACLK;
    1342            2                        440     
    1342            3                        439     
    1343                                                 end
    1344                                                 initial begin
    1345            1                          1             templateVif.sig_clock = 0;
    1346            1                          1         #5ns ;
    1347            1                          1         forever #5ns templateVif.sig_clock = ! templateVif.sig_clock;
    1347            2                        440     
    1347            3                        439     
    1348                                                 end
    1349                                                 initial begin
    1350            1                          1             clk = 0;
    1351            1                          1             #5ns ;
    1352            1                          1             forever #5ns clk = ! clk;
    1352            2                        440     
    1352            3                        439     
    1353                                                 end
    1354                                                 initial begin
    1355            1                          1         uvm_config_db #(virtual axiLite_if)::set(null, "*", "axiLiteVif", axiLiteVif);
    1356            1                          1         uvm_resource_db#(virtual template_if)::set(.scope("ifs"), .name("template_if"), .val(templateVif));
    1357            1                          1         uvm_resource_db#(virtual rgb_if)::set(.scope("ifs"),.name("rgb_if"),.val(frame_slave_if));
    1358            1                          1         run_test();

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                         0         0         0     100.0
Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms              0         0         0     100.0
Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             0         0         0     100.0
FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0

=================================================================================
=== Design Unit: work.vfpconfig(arch_imp)
=================================================================================
Statement Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Stmts                          492        95       397      19.3

================================Statement Details================================

Statement Coverage for Design Unit work.vfpconfig(arch_imp) --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/dut/vfpConfig.vhd
    32                                               architecture arch_imp of vfpConfig is
    33                                                   constant C_DATA_WIDTH        : integer := 32;
    34                                                   constant C_ADDR_WIDTH        : integer := 8;
    35                                               	constant ADDR_LSB            : integer := (C_DATA_WIDTH/32)+ 1;
    36                                               	constant OPT_MEM_ADDR_BITS   : integer := 5;
    37                                               	signal axi_awaddr	         : std_logic_vector(C_ADDR_WIDTH-1 downto 0);
    38                                               	signal axi_awready	         : std_logic;
    39                                               	signal axi_wready	         : std_logic;
    40                                               	signal axi_bresp	         : std_logic_vector(1 downto 0);
    41                                               	signal axi_bvalid	         : std_logic;
    42                                               	signal axi_araddr	         : std_logic_vector(C_ADDR_WIDTH-1 downto 0);
    43                                               	signal axi_arready	         : std_logic;
    44                                               	signal axi_rdata	         : std_logic_vector(C_DATA_WIDTH-1 downto 0);
    45                                               	signal axi_rresp	         : std_logic_vector(1 downto 0);
    46                                               	signal axi_rvalid	         : std_logic;
    47                                                   signal slv_reg_rden          : std_logic;
    48                                                   signal slv_reg_wren          : std_logic;
    49                                                   signal reg_data_out          : std_logic_vector(C_DATA_WIDTH-1 downto 0);
    50                                                   signal byte_index            : integer;
    51                                                   signal aw_en                 : std_logic;
    52                                                   signal localRegs             : mRegs;
    53                                                   signal wrRegsOut             : mRegs;
    54                                                   signal rdRegsIn              : mRegs;
    55                                                   
    56                                               begin
    57              1                          2         rdRegsIn            <= wrRegsOut;
    58              1                          2         AWREADY             <= axi_awready;
    59              1                          2         WREADY              <= axi_wready;
    60              1                          2         BRESP               <= axi_bresp;
    61              1                          2         BVALID              <= axi_bvalid;
    62              1                          2         ARREADY             <= axi_arready;
    63              1                          2         RDATA               <= axi_rdata;
    64              1                          2         RRESP               <= axi_rresp;
    65              1                          2         RVALID              <= axi_rvalid;
    66                                                   process (ACLK)
    67                                                   begin
    68                                                     if rising_edge(ACLK) then 
    69                                                       if ARESETN = '0' then
    70              1                          2               axi_awready <= '0';
    71              1                          2               aw_en <= '1';
    72                                                       else
    73                                                         if (axi_awready = '0' and AWVALID = '1' and WVALID = '1' and aw_en = '1') then
    74              1                    ***0***                 axi_awready <= '1';
    75                                                           elsif (BREADY = '1' and axi_bvalid = '1') then
    76              1                    ***0***                     aw_en <= '1';
    77              1                    ***0***                     axi_awready <= '0';
    78                                                         else
    79              1                          1                 axi_awready <= '0';
    80                                                         end if;
    81                                                       end if;
    82                                                     end if;
    83                                                   end process;
    84                                                   process (ACLK)
    85                                                   begin
    86                                                     if rising_edge(ACLK) then 
    87                                                       if ARESETN = '0' then
    88              1                          2               axi_awaddr <= (others => '0');
    89                                                       else
    90                                                         if (axi_awready = '0' and AWVALID = '1' and WVALID = '1' and aw_en = '1') then
    91              1                    ***0***                 axi_awaddr <= AWADDR;
    92                                                         end if;
    93                                                       end if;
    94                                                     end if;                   
    95                                                   end process; 
    96                                                   process (ACLK)
    97                                                   begin
    98                                                     if rising_edge(ACLK) then 
    99                                                       if ARESETN = '0' then
    100             1                          2               axi_wready <= '0';
    101                                                      else
    102                                                        if (axi_wready = '0' and WVALID = '1' and AWVALID = '1' and aw_en = '1') then
    103             1                    ***0***                   axi_wready <= '1';
    104                                                        else
    105             1                          1                 axi_wready <= '0';
    106                                                        end if;
    107                                                      end if;
    108                                                    end if;
    109                                                  end process; 
    110             1                          2         slv_reg_wren <= axi_wready and WVALID and axi_awready and AWVALID ;
    111                                              	process (ACLK)
    112                                              	variable loc_addr :std_logic_vector(OPT_MEM_ADDR_BITS downto 0); 
    113                                              	begin
    114                                              	  if rising_edge(ACLK) then 
    115                                              	    if ARESETN = '0' then
    116             1                         99     	      localRegs.cfigReg0 <= (others => '0');
    117             1                         99     	      localRegs.cfigReg1 <= (others => '0');
    118             1                         99     	      localRegs.cfigReg2 <= (others => '0');
    119             1                         99     	      localRegs.cfigReg3 <= (others => '0');
    120             1                         99     	      localRegs.cfigReg4 <= (others => '0');
    121             1                         99     	      localRegs.cfigReg5 <= (others => '0');
    122             1                         99     	      localRegs.cfigReg6 <= (others => '0');
    123             1                         99     	      localRegs.cfigReg7 <= (others => '0');
    124             1                         99     	      localRegs.cfigReg8 <= (others => '0');
    125             1                         99     	      localRegs.cfigReg9 <= (others => '0');
    126             1                         99     	      localRegs.cfigReg10 <= (others => '0');
    127             1                         99     	      localRegs.cfigReg11 <= (others => '0');
    128             1                         99     	      localRegs.cfigReg12 <= (others => '0');
    129             1                         99     	      localRegs.cfigReg13 <= (others => '0');
    130             1                         99     	      localRegs.cfigReg14 <= (others => '0');
    131             1                         99     	      localRegs.cfigReg15 <= (others => '0');
    132             1                         99     	      localRegs.cfigReg16 <= (others => '0');
    133             1                         99     	      localRegs.cfigReg17 <= (others => '0');
    134             1                         99     	      localRegs.cfigReg18 <= (others => '0');
    135             1                         99     	      localRegs.cfigReg19 <= (others => '0');
    136             1                         99     	      localRegs.cfigReg20 <= (others => '0');
    137             1                         99     	      localRegs.cfigReg21 <= (others => '0');
    138             1                         99     	      localRegs.cfigReg22 <= (others => '0');
    139             1                         99     	      localRegs.cfigReg23 <= (others => '0');
    140             1                         99     	      localRegs.cfigReg24 <= (others => '0');
    141             1                         99     	      localRegs.cfigReg25 <= (others => '0');
    142             1                         99     	      localRegs.cfigReg26 <= (others => '0');
    143             1                         99     	      localRegs.cfigReg27 <= (others => '0');
    144             1                         99     	      localRegs.cfigReg28 <= (others => '0');
    145             1                         99     	      localRegs.cfigReg29 <= (others => '0');
    146             1                         99     	      localRegs.cfigReg30 <= (others => '0');
    147             1                         99     	      localRegs.cfigReg31 <= (others => '0');
    148             1                         99     	      localRegs.cfigReg32 <= (others => '0');
    149             1                         99     	      localRegs.cfigReg33 <= (others => '0');
    150             1                         99     	      localRegs.cfigReg34 <= (others => '0');
    151             1                         99     	      localRegs.cfigReg35 <= (others => '0');
    152             1                         99     	      localRegs.cfigReg36 <= (others => '0');
    153             1                         99     	      localRegs.cfigReg37 <= (others => '0');
    154             1                         99     	      localRegs.cfigReg38 <= (others => '0');
    155             1                         99     	      localRegs.cfigReg39 <= (others => '0');
    156             1                         99     	      localRegs.cfigReg40 <= (others => '0');
    157             1                         99     	      localRegs.cfigReg41 <= (others => '0');
    158             1                         99     	      localRegs.cfigReg42 <= (others => '0');
    159             1                         99     	      localRegs.cfigReg43 <= (others => '0');
    160             1                         99     	      localRegs.cfigReg44 <= (others => '0');
    161             1                         99     	      localRegs.cfigReg45 <= (others => '0');
    162             1                         99     	      localRegs.cfigReg46 <= (others => '0');
    163             1                         99     	      localRegs.cfigReg47 <= (others => '0');
    164             1                         99     	      localRegs.cfigReg48 <= (others => '0');
    165             1                         99     	      localRegs.cfigReg49 <= (others => '0');
    166             1                         99     	      localRegs.cfigReg50 <= (others => '0');
    167             1                         99     	      localRegs.cfigReg51 <= (others => '0');
    168             1                         99     	      localRegs.cfigReg52 <= (others => '0');
    169             1                         99     	      localRegs.cfigReg53 <= (others => '0');
    170             1                         99     	      localRegs.cfigReg54 <= (others => '0');
    171             1                         99     	      localRegs.cfigReg55 <= (others => '0');
    172             1                         99     	      localRegs.cfigReg56 <= (others => '0');
    173             1                         99     	      localRegs.cfigReg57 <= (others => '0');
    174             1                         99     	      localRegs.cfigReg58 <= (others => '0');
    175             1                         99     	      localRegs.cfigReg59 <= (others => '0');
    176             1                         99     	      localRegs.cfigReg60 <= (others => '0');
    177             1                         99     	      localRegs.cfigReg61 <= (others => '0');
    178             1                         99     	      localRegs.cfigReg62 <= (others => '0');
    179             1                         99     	      localRegs.cfigReg63 <= (others => '0');
    180                                              	    else
    181             1                        121     	      loc_addr := axi_awaddr(ADDR_LSB + OPT_MEM_ADDR_BITS downto ADDR_LSB);
    182                                              	      if (slv_reg_wren = '1') then
    183                                              	        case loc_addr is
    184                                              	          when b"000000" =>
    185             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    185             2                    ***0***     
    186                                              	              if ( WSTRB(byte_index) = '1' ) then
    187             1                    ***0***     	                localRegs.cfigReg0(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    188                                              	              end if;
    189             1                    ***0***     	            end loop;
    190                                              	          when b"000001" =>
    191             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    191             2                    ***0***     
    192                                              	              if ( WSTRB(byte_index) = '1' ) then
    193             1                    ***0***     	                localRegs.cfigReg1(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    194                                              	              end if;
    195             1                    ***0***     	            end loop;
    196                                              	          when b"000010" =>
    197             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    197             2                    ***0***     
    198                                              	              if ( WSTRB(byte_index) = '1' ) then
    199             1                    ***0***     	                localRegs.cfigReg2(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    200                                              	              end if;
    201             1                    ***0***     	            end loop;
    202                                              	          when b"000011" =>
    203             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    203             2                    ***0***     
    204                                              	              if ( WSTRB(byte_index) = '1' ) then
    205             1                    ***0***     	                localRegs.cfigReg3(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    206                                              	              end if;
    207             1                    ***0***     	            end loop;
    208                                              	          when b"000100" =>
    209             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    209             2                    ***0***     
    210                                              	              if ( WSTRB(byte_index) = '1' ) then
    211             1                    ***0***     	                localRegs.cfigReg4(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    212                                              	              end if;
    213             1                    ***0***     	            end loop;
    214                                              	          when b"000101" =>
    215             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    215             2                    ***0***     
    216                                              	              if ( WSTRB(byte_index) = '1' ) then
    217             1                    ***0***     	                localRegs.cfigReg5(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    218                                              	              end if;
    219             1                    ***0***     	            end loop;
    220                                              	          when b"000110" =>
    221             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    221             2                    ***0***     
    222                                              	              if ( WSTRB(byte_index) = '1' ) then
    223             1                    ***0***     	                localRegs.cfigReg6(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    224                                              	              end if;
    225             1                    ***0***     	            end loop;
    226                                              	          when b"000111" =>
    227             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    227             2                    ***0***     
    228                                              	              if ( WSTRB(byte_index) = '1' ) then
    229             1                    ***0***     	                localRegs.cfigReg7(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    230                                              	              end if;
    231             1                    ***0***     	            end loop;
    232                                              	          when b"001000" =>
    233             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    233             2                    ***0***     
    234                                              	              if ( WSTRB(byte_index) = '1' ) then
    235             1                    ***0***     	                localRegs.cfigReg8(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    236                                              	              end if;
    237             1                    ***0***     	            end loop;
    238                                              	          when b"001001" =>
    239             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    239             2                    ***0***     
    240                                              	              if ( WSTRB(byte_index) = '1' ) then
    241             1                    ***0***     	                localRegs.cfigReg9(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    242                                              	              end if;
    243             1                    ***0***     	            end loop;
    244                                              	          when b"001010" =>
    245             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    245             2                    ***0***     
    246                                              	              if ( WSTRB(byte_index) = '1' ) then
    247             1                    ***0***     	                localRegs.cfigReg10(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    248                                              	              end if;
    249             1                    ***0***     	            end loop;
    250                                              	          when b"001011" =>
    251             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    251             2                    ***0***     
    252                                              	              if ( WSTRB(byte_index) = '1' ) then
    253             1                    ***0***     	                localRegs.cfigReg11(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    254                                              	              end if;
    255             1                    ***0***     	            end loop;
    256                                              	          when b"001100" =>
    257             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    257             2                    ***0***     
    258                                              	              if ( WSTRB(byte_index) = '1' ) then
    259             1                    ***0***     	                localRegs.cfigReg12(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    260                                              	              end if;
    261             1                    ***0***     	            end loop;
    262                                              	          when b"001101" =>
    263             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    263             2                    ***0***     
    264                                              	              if ( WSTRB(byte_index) = '1' ) then
    265             1                    ***0***     	                localRegs.cfigReg13(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    266                                              	              end if;
    267             1                    ***0***     	            end loop;
    268                                              	          when b"001110" =>
    269             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    269             2                    ***0***     
    270                                              	              if ( WSTRB(byte_index) = '1' ) then
    271             1                    ***0***     	                localRegs.cfigReg14(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    272                                              	              end if;
    273             1                    ***0***     	            end loop;
    274                                              	          when b"001111" =>
    275             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    275             2                    ***0***     
    276                                              	              if ( WSTRB(byte_index) = '1' ) then
    277             1                    ***0***     	                localRegs.cfigReg15(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    278                                              	              end if;
    279             1                    ***0***     	            end loop;
    280                                              	          when b"010000" =>
    281             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    281             2                    ***0***     
    282                                              	              if ( WSTRB(byte_index) = '1' ) then
    283             1                    ***0***     	                localRegs.cfigReg16(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    284                                              	              end if;
    285             1                    ***0***     	            end loop;
    286                                              	          when b"010001" =>
    287             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    287             2                    ***0***     
    288                                              	              if ( WSTRB(byte_index) = '1' ) then
    289             1                    ***0***     	                localRegs.cfigReg17(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    290                                              	              end if;
    291             1                    ***0***     	            end loop;
    292                                              	          when b"010010" =>
    293             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    293             2                    ***0***     
    294                                              	              if ( WSTRB(byte_index) = '1' ) then
    295             1                    ***0***     	                localRegs.cfigReg18(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    296                                              	              end if;
    297             1                    ***0***     	            end loop;
    298                                              	          when b"010011" =>
    299             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    299             2                    ***0***     
    300                                              	              if ( WSTRB(byte_index) = '1' ) then
    301             1                    ***0***     	                localRegs.cfigReg19(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    302                                              	              end if;
    303             1                    ***0***     	            end loop;
    304                                              	          when b"010100" =>
    305             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    305             2                    ***0***     
    306                                              	              if ( WSTRB(byte_index) = '1' ) then
    307             1                    ***0***     	                localRegs.cfigReg20(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    308                                              	              end if;
    309             1                    ***0***     	            end loop;
    310                                              	          when b"010101" =>
    311             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    311             2                    ***0***     
    312                                              	              if ( WSTRB(byte_index) = '1' ) then
    313             1                    ***0***     	                localRegs.cfigReg21(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    314                                              	              end if;
    315             1                    ***0***     	            end loop;
    316                                              	          when b"010110" =>
    317             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    317             2                    ***0***     
    318                                              	              if ( WSTRB(byte_index) = '1' ) then
    319             1                    ***0***     	                localRegs.cfigReg22(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    320                                              	              end if;
    321             1                    ***0***     	            end loop;
    322                                              	          when b"010111" =>
    323             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    323             2                    ***0***     
    324                                              	              if ( WSTRB(byte_index) = '1' ) then
    325             1                    ***0***     	                localRegs.cfigReg23(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    326                                              	              end if;
    327             1                    ***0***     	            end loop;
    328                                              	          when b"011000" =>
    329             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    329             2                    ***0***     
    330                                              	              if ( WSTRB(byte_index) = '1' ) then
    331             1                    ***0***     	                localRegs.cfigReg24(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    332                                              	              end if;
    333             1                    ***0***     	            end loop;
    334                                              	          when b"011001" =>
    335             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    335             2                    ***0***     
    336                                              	              if ( WSTRB(byte_index) = '1' ) then
    337             1                    ***0***     	                localRegs.cfigReg25(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    338                                              	              end if;
    339             1                    ***0***     	            end loop;
    340                                              	          when b"011010" =>
    341             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    341             2                    ***0***     
    342                                              	              if ( WSTRB(byte_index) = '1' ) then
    343             1                    ***0***     	                localRegs.cfigReg26(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    344                                              	              end if;
    345             1                    ***0***     	            end loop;
    346                                              	          when b"011011" =>
    347             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    347             2                    ***0***     
    348                                              	              if ( WSTRB(byte_index) = '1' ) then
    349             1                    ***0***     	                localRegs.cfigReg27(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    350                                              	              end if;
    351             1                    ***0***     	            end loop;
    352                                              	          when b"011100" =>
    353             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    353             2                    ***0***     
    354                                              	              if ( WSTRB(byte_index) = '1' ) then
    355             1                    ***0***     	                localRegs.cfigReg28(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    356                                              	              end if;
    357             1                    ***0***     	            end loop;
    358                                              	          when b"011101" =>
    359             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    359             2                    ***0***     
    360                                              	              if ( WSTRB(byte_index) = '1' ) then
    361             1                    ***0***     	                localRegs.cfigReg29(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    362                                              	              end if;
    363             1                    ***0***     	            end loop;
    364                                              	          when b"011110" =>
    365             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    365             2                    ***0***     
    366                                              	              if ( WSTRB(byte_index) = '1' ) then
    367             1                    ***0***     	                localRegs.cfigReg30(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    368                                              	              end if;
    369             1                    ***0***     	            end loop;
    370                                              	          when b"011111" =>
    371             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    371             2                    ***0***     
    372                                              	              if ( WSTRB(byte_index) = '1' ) then
    373             1                    ***0***     	                localRegs.cfigReg31(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    374                                              	              end if;
    375             1                    ***0***     	            end loop;
    376                                              	          when b"100000" =>
    377             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    377             2                    ***0***     
    378                                              	              if ( WSTRB(byte_index) = '1' ) then
    379             1                    ***0***     	                localRegs.cfigReg32(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    380                                              	              end if;
    381             1                    ***0***     	            end loop;
    382                                              	          when b"100001" =>
    383             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    383             2                    ***0***     
    384                                              	              if ( WSTRB(byte_index) = '1' ) then
    385             1                    ***0***     	                localRegs.cfigReg33(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    386                                              	              end if;
    387             1                    ***0***     	            end loop;
    388                                              	          when b"100010" =>
    389             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    389             2                    ***0***     
    390                                              	              if ( WSTRB(byte_index) = '1' ) then
    391             1                    ***0***     	                localRegs.cfigReg34(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    392                                              	              end if;
    393             1                    ***0***     	            end loop;
    394                                              	          when b"100011" =>
    395             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    395             2                    ***0***     
    396                                              	              if ( WSTRB(byte_index) = '1' ) then
    397             1                    ***0***     	                localRegs.cfigReg35(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    398                                              	              end if;
    399             1                    ***0***     	            end loop;
    400                                              	          when b"100100" =>
    401             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    401             2                    ***0***     
    402                                              	              if ( WSTRB(byte_index) = '1' ) then
    403             1                    ***0***     	                localRegs.cfigReg36(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    404                                              	              end if;
    405             1                    ***0***     	            end loop;
    406                                              	          when b"100101" =>
    407             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    407             2                    ***0***     
    408                                              	              if ( WSTRB(byte_index) = '1' ) then
    409             1                    ***0***     	                localRegs.cfigReg37(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    410                                              	              end if;
    411             1                    ***0***     	            end loop;
    412                                              	          when b"100110" =>
    413             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    413             2                    ***0***     
    414                                              	              if ( WSTRB(byte_index) = '1' ) then
    415             1                    ***0***     	                localRegs.cfigReg38(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    416                                              	              end if;
    417             1                    ***0***     	            end loop;
    418                                              	          when b"100111" =>
    419             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    419             2                    ***0***     
    420                                              	              if ( WSTRB(byte_index) = '1' ) then
    421             1                    ***0***     	                localRegs.cfigReg39(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    422                                              	              end if;
    423             1                    ***0***     	            end loop;
    424                                              	          when b"101000" =>
    425             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    425             2                    ***0***     
    426                                              	              if ( WSTRB(byte_index) = '1' ) then
    427             1                    ***0***     	                localRegs.cfigReg40(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    428                                              	              end if;
    429             1                    ***0***     	            end loop;
    430                                              	          when b"101001" =>
    431             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    431             2                    ***0***     
    432                                              	              if ( WSTRB(byte_index) = '1' ) then
    433             1                    ***0***     	                localRegs.cfigReg41(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    434                                              	              end if;
    435             1                    ***0***     	            end loop;
    436                                              	          when b"101010" =>
    437             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    437             2                    ***0***     
    438                                              	              if ( WSTRB(byte_index) = '1' ) then
    439             1                    ***0***     	                localRegs.cfigReg42(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    440                                              	              end if;
    441             1                    ***0***     	            end loop;
    442                                              	          when b"101011" =>
    443             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    443             2                    ***0***     
    444                                              	              if ( WSTRB(byte_index) = '1' ) then
    445             1                    ***0***     	                localRegs.cfigReg43(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    446                                              	              end if;
    447             1                    ***0***     	            end loop;
    448                                              	          when b"101100" =>
    449             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    449             2                    ***0***     
    450                                              	              if ( WSTRB(byte_index) = '1' ) then
    451             1                    ***0***     	                localRegs.cfigReg44(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    452                                              	              end if;
    453             1                    ***0***     	            end loop;
    454                                              	          when b"101101" =>
    455             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    455             2                    ***0***     
    456                                              	              if ( WSTRB(byte_index) = '1' ) then
    457             1                    ***0***     	                localRegs.cfigReg45(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    458                                              	              end if;
    459             1                    ***0***     	            end loop;
    460                                              	          when b"101110" =>
    461             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    461             2                    ***0***     
    462                                              	              if ( WSTRB(byte_index) = '1' ) then
    463             1                    ***0***     	                localRegs.cfigReg46(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    464                                              	              end if;
    465             1                    ***0***     	            end loop;
    466                                              	          when b"101111" =>
    467             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    467             2                    ***0***     
    468                                              	              if ( WSTRB(byte_index) = '1' ) then
    469             1                    ***0***     	                localRegs.cfigReg47(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    470                                              	              end if;
    471             1                    ***0***     	            end loop;
    472                                              	          when b"110000" =>
    473             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    473             2                    ***0***     
    474                                              	              if ( WSTRB(byte_index) = '1' ) then
    475             1                    ***0***     	                localRegs.cfigReg48(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    476                                              	              end if;
    477             1                    ***0***     	            end loop;
    478                                              	          when b"110001" =>
    479             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    479             2                    ***0***     
    480                                              	              if ( WSTRB(byte_index) = '1' ) then
    481             1                    ***0***     	                localRegs.cfigReg49(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    482                                              	              end if;
    483             1                    ***0***     	            end loop;
    484                                              	          when b"110010" =>
    485             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    485             2                    ***0***     
    486                                              	              if ( WSTRB(byte_index) = '1' ) then
    487             1                    ***0***     	                localRegs.cfigReg50(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    488                                              	              end if;
    489             1                    ***0***     	            end loop;
    490                                              	          when b"110011" =>
    491             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    491             2                    ***0***     
    492                                              	              if ( WSTRB(byte_index) = '1' ) then
    493             1                    ***0***     	                localRegs.cfigReg51(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    494                                              	              end if;
    495             1                    ***0***     	            end loop;
    496                                              	          when b"110100" =>
    497             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    497             2                    ***0***     
    498                                              	              if ( WSTRB(byte_index) = '1' ) then
    499             1                    ***0***     	                localRegs.cfigReg52(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    500                                              	              end if;
    501             1                    ***0***     	            end loop;
    502                                              	          when b"110101" =>
    503             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    503             2                    ***0***     
    504                                              	              if ( WSTRB(byte_index) = '1' ) then
    505             1                    ***0***     	                localRegs.cfigReg53(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    506                                              	              end if;
    507             1                    ***0***     	            end loop;
    508                                              	          when b"110110" =>
    509             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    509             2                    ***0***     
    510                                              	              if ( WSTRB(byte_index) = '1' ) then
    511             1                    ***0***     	                localRegs.cfigReg54(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    512                                              	              end if;
    513             1                    ***0***     	            end loop;
    514                                              	          when b"110111" =>
    515             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    515             2                    ***0***     
    516                                              	              if ( WSTRB(byte_index) = '1' ) then
    517             1                    ***0***     	                localRegs.cfigReg55(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    518                                              	              end if;
    519             1                    ***0***     	            end loop;
    520                                              	          when b"111000" =>
    521             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    521             2                    ***0***     
    522                                              	              if ( WSTRB(byte_index) = '1' ) then
    523             1                    ***0***     	                localRegs.cfigReg56(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    524                                              	              end if;
    525             1                    ***0***     	            end loop;
    526                                              	          when b"111001" =>
    527             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    527             2                    ***0***     
    528                                              	              if ( WSTRB(byte_index) = '1' ) then
    529             1                    ***0***     	                localRegs.cfigReg57(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    530                                              	              end if;
    531             1                    ***0***     	            end loop;
    532                                              	          when b"111010" =>
    533             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    533             2                    ***0***     
    534                                              	              if ( WSTRB(byte_index) = '1' ) then
    535             1                    ***0***     	                localRegs.cfigReg58(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    536                                              	              end if;
    537             1                    ***0***     	            end loop;
    538                                              	          when b"111011" =>
    539             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    539             2                    ***0***     
    540                                              	              if ( WSTRB(byte_index) = '1' ) then
    541             1                    ***0***     	                localRegs.cfigReg59(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    542                                              	              end if;
    543             1                    ***0***     	            end loop;
    544                                              	          when b"111100" =>
    545             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    545             2                    ***0***     
    546                                              	              if ( WSTRB(byte_index) = '1' ) then
    547             1                    ***0***     	                localRegs.cfigReg60(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    548                                              	              end if;
    549             1                    ***0***     	            end loop;
    550                                              	          when b"111101" =>
    551             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    551             2                    ***0***     
    552                                              	              if ( WSTRB(byte_index) = '1' ) then
    553             1                    ***0***     	                localRegs.cfigReg61(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    554                                              	              end if;
    555             1                    ***0***     	            end loop;
    556                                              	          when b"111110" =>
    557             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    557             2                    ***0***     
    558                                              	              if ( WSTRB(byte_index) = '1' ) then
    559             1                    ***0***     	                localRegs.cfigReg62(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    560                                              	              end if;
    561             1                    ***0***     	            end loop;
    562                                              	          when b"111111" =>
    563             1                    ***0***     	            for byte_index in 0 to (C_DATA_WIDTH/8-1) loop
    563             2                    ***0***     
    564                                              	              if ( WSTRB(byte_index) = '1' ) then
    565             1                    ***0***     	                localRegs.cfigReg63(byte_index*8+7 downto byte_index*8) <= WDATA(byte_index*8+7 downto byte_index*8);
    566                                              	              end if;
    567             1                    ***0***     	            end loop;
    568                                              	          when others =>
    569                                                              --stored cpu values
    570             1                    ***0***     	            localRegs.cfigReg0 <= localRegs.cfigReg0;
    571             1                    ***0***     	            localRegs.cfigReg1 <= localRegs.cfigReg1;
    572             1                    ***0***     	            localRegs.cfigReg2 <= localRegs.cfigReg2;
    573             1                    ***0***     	            localRegs.cfigReg3 <= localRegs.cfigReg3;
    574             1                    ***0***     	            localRegs.cfigReg4 <= localRegs.cfigReg4;
    575             1                    ***0***     	            localRegs.cfigReg5 <= localRegs.cfigReg5;
    576             1                    ***0***     	            localRegs.cfigReg6 <= localRegs.cfigReg6;
    577             1                    ***0***     	            localRegs.cfigReg7 <= localRegs.cfigReg7;
    578             1                    ***0***     	            localRegs.cfigReg8 <= localRegs.cfigReg8;
    579             1                    ***0***     	            localRegs.cfigReg9 <= localRegs.cfigReg9;
    580             1                    ***0***     	            localRegs.cfigReg10 <= localRegs.cfigReg10;
    581             1                    ***0***     	            localRegs.cfigReg11 <= localRegs.cfigReg11;
    582             1                    ***0***     	            localRegs.cfigReg12 <= localRegs.cfigReg12;
    583             1                    ***0***     	            localRegs.cfigReg13 <= localRegs.cfigReg13;
    584             1                    ***0***     	            localRegs.cfigReg14 <= localRegs.cfigReg14;
    585             1                    ***0***     	            localRegs.cfigReg15 <= localRegs.cfigReg15;
    586             1                    ***0***     	            localRegs.cfigReg16 <= localRegs.cfigReg16;
    587             1                    ***0***     	            localRegs.cfigReg17 <= localRegs.cfigReg17;
    588             1                    ***0***     	            localRegs.cfigReg18 <= localRegs.cfigReg18;
    589             1                    ***0***     	            localRegs.cfigReg19 <= localRegs.cfigReg19;
    590             1                    ***0***     	            localRegs.cfigReg20 <= localRegs.cfigReg20;
    591             1                    ***0***     	            localRegs.cfigReg21 <= localRegs.cfigReg21;
    592             1                    ***0***     	            localRegs.cfigReg22 <= localRegs.cfigReg22;
    593             1                    ***0***     	            localRegs.cfigReg23 <= localRegs.cfigReg23;
    594             1                    ***0***     	            localRegs.cfigReg24 <= localRegs.cfigReg24;
    595             1                    ***0***     	            localRegs.cfigReg25 <= localRegs.cfigReg25;
    596             1                    ***0***     	            localRegs.cfigReg26 <= localRegs.cfigReg26;
    597             1                    ***0***     	            localRegs.cfigReg27 <= localRegs.cfigReg27;
    598             1                    ***0***     	            localRegs.cfigReg28 <= localRegs.cfigReg28;
    599             1                    ***0***     	            localRegs.cfigReg29 <= localRegs.cfigReg29;
    600             1                    ***0***     	            localRegs.cfigReg30 <= localRegs.cfigReg30;
    601             1                    ***0***     	            localRegs.cfigReg31 <= localRegs.cfigReg31;
    602             1                    ***0***     	            localRegs.cfigReg32 <= localRegs.cfigReg32;
    603             1                    ***0***     	            localRegs.cfigReg33 <= localRegs.cfigReg33;
    604             1                    ***0***     	            localRegs.cfigReg34 <= localRegs.cfigReg34;
    605             1                    ***0***     	            localRegs.cfigReg35 <= localRegs.cfigReg35;
    606             1                    ***0***     	            localRegs.cfigReg36 <= localRegs.cfigReg36;
    607             1                    ***0***     	            localRegs.cfigReg37 <= localRegs.cfigReg37;
    608             1                    ***0***     	            localRegs.cfigReg38 <= localRegs.cfigReg38;
    609             1                    ***0***     	            localRegs.cfigReg39 <= localRegs.cfigReg39;
    610             1                    ***0***     	            localRegs.cfigReg40 <= localRegs.cfigReg40;
    611             1                    ***0***     	            localRegs.cfigReg41 <= localRegs.cfigReg41;
    612             1                    ***0***     	            localRegs.cfigReg42 <= localRegs.cfigReg42;
    613             1                    ***0***     	            localRegs.cfigReg43 <= localRegs.cfigReg43;
    614             1                    ***0***     	            localRegs.cfigReg44 <= localRegs.cfigReg44;
    615             1                    ***0***     	            localRegs.cfigReg45 <= localRegs.cfigReg45;
    616             1                    ***0***     	            localRegs.cfigReg46 <= localRegs.cfigReg46;
    617             1                    ***0***     	            localRegs.cfigReg47 <= localRegs.cfigReg47;
    618             1                    ***0***     	            localRegs.cfigReg48 <= localRegs.cfigReg48;
    619             1                    ***0***     	            localRegs.cfigReg49 <= localRegs.cfigReg49;
    620             1                    ***0***     	            localRegs.cfigReg50 <= localRegs.cfigReg50;
    621             1                    ***0***     	            localRegs.cfigReg51 <= localRegs.cfigReg51;
    622             1                    ***0***     	            localRegs.cfigReg52 <= localRegs.cfigReg52;
    623             1                    ***0***     	            localRegs.cfigReg53 <= localRegs.cfigReg53;
    624             1                    ***0***     	            localRegs.cfigReg54 <= localRegs.cfigReg54;
    625             1                    ***0***     	            localRegs.cfigReg55 <= localRegs.cfigReg55;
    626             1                    ***0***     	            localRegs.cfigReg56 <= localRegs.cfigReg56;
    627             1                    ***0***     	            localRegs.cfigReg57 <= localRegs.cfigReg57;
    628             1                    ***0***     	            localRegs.cfigReg58 <= localRegs.cfigReg58;
    629             1                    ***0***     	            localRegs.cfigReg59 <= localRegs.cfigReg59;
    630             1                    ***0***     	            localRegs.cfigReg60 <= localRegs.cfigReg60;
    631             1                    ***0***     	            localRegs.cfigReg61 <= localRegs.cfigReg61;
    632             1                    ***0***     	            localRegs.cfigReg62 <= localRegs.cfigReg62;
    633             1                    ***0***     	            localRegs.cfigReg63 <= localRegs.cfigReg63;
    634                                              	        end case;
    635                                              	      end if;
    636                                              	    end if;
    637                                              	  end if;                   
    638                                              	end process; 
    639                                                  process (ACLK)
    640                                                  begin
    641                                                    if rising_edge(ACLK) then 
    642                                                      if ARESETN = '0' then
    643             1                          2               axi_bvalid  <= '0';
    644             1                          2               axi_bresp   <= "00"; 
    645                                                      else
    646                                                        if (axi_awready = '1' and AWVALID = '1' and axi_wready = '1' and WVALID = '1' and axi_bvalid = '0'  ) then
    647             1                    ***0***                 axi_bvalid <= '1';
    648             1                    ***0***                 axi_bresp  <= "00"; 
    649                                                        elsif (BREADY = '1' and axi_bvalid = '1') then   
    650             1                    ***0***                 axi_bvalid <= '0';                                 
    651                                                        end if;
    652                                                      end if;
    653                                                    end if;                   
    654                                                  end process; 
    655                                                  process (ACLK)
    656                                                  begin
    657                                                    if rising_edge(ACLK) then 
    658                                                      if ARESETN = '0' then
    659             1                          2               axi_arready <= '0';
    660             1                          2               axi_araddr  <= (others => '1');
    661                                                      else
    662                                                        if (axi_arready = '0' and ARVALID = '1') then
    663             1                    ***0***                 axi_arready <= '1';
    664             1                    ***0***                 axi_araddr  <= ARADDR;           
    665                                                        else
    666             1                          1                 axi_arready <= '0';
    667                                                        end if;
    668                                                      end if;
    669                                                    end if;                   
    670                                                  end process; 
    671                                                  process (ACLK)
    672                                                  begin
    673                                                    if rising_edge(ACLK) then
    674                                                      if ARESETN = '0' then
    675             1                          2               axi_rvalid <= '0';
    676             1                          2               axi_rresp  <= "00";
    677                                                      else
    678                                                        if (axi_arready = '1' and ARVALID = '1' and axi_rvalid = '0') then
    679             1                    ***0***                 axi_rvalid <= '1';
    680             1                    ***0***                 axi_rresp  <= "00"; 
    681                                                        elsif (axi_rvalid = '1' and RREADY = '1') then
    682             1                    ***0***                 axi_rvalid <= '0';
    683                                                        end if;            
    684                                                      end if;
    685                                                    end if;
    686                                                  end process;
    687             1                          2         slv_reg_rden <= axi_arready and ARVALID and (not axi_rvalid);
    688             1                          6     process (axi_araddr, ARESETN, slv_reg_rden, rdRegsIn.cfigReg0, rdRegsIn.cfigReg1, rdRegsIn.cfigReg2, rdRegsIn.cfigReg3, rdRegsIn.cfigReg4, rdRegsIn.cfigReg5, rdRegsIn.cfigReg6, rdRegsIn.cfigReg7, rdRegsIn.cfigReg8, rdRegsIn.cfigReg9, rdRegsIn.cfigReg10, rdRegsIn.cfigReg11, rdRegsIn.cfigReg12, rdRegsIn.cfigReg13, rdRegsIn.cfigReg14, rdRegsIn.cfigReg15, rdRegsIn.cfigReg16, rdRegsIn.cfigReg17, rdRegsIn.cfigReg18, rdRegsIn.cfigReg19, rdRegsIn.cfigReg20, rdRegsIn.cfigReg21, rdRegsIn.cfigReg22, rdRegsIn.cfigReg23, rdRegsIn.cfigReg24, rdRegsIn.cfigReg25, rdRegsIn.cfigReg26, rdRegsIn.cfigReg27, rdRegsIn.cfigReg28, rdRegsIn.cfigReg29, rdRegsIn.cfigReg30, rdRegsIn.cfigReg31, rdRegsIn.cfigReg32, rdRegsIn.cfigReg33, rdRegsIn.cfigReg34, rdRegsIn.cfigReg35, rdRegsIn.cfigReg36, rdRegsIn.cfigReg37, rdRegsIn.cfigReg38, rdRegsIn.cfigReg39, rdRegsIn.cfigReg40, rdRegsIn.cfigReg41, rdRegsIn.cfigReg42, rdRegsIn.cfigReg43, rdRegsIn.cfigReg44, rdRegsIn.cfigReg45, rdRegsIn.cfigReg46, rdRegsIn.cfigReg47, rdRegsIn.cfigReg48, rdRegsIn.cfigReg49, rdRegsIn.cfigReg50, rdRegsIn.cfigReg51, rdRegsIn.cfigReg52, rdRegsIn.cfigReg53, rdRegsIn.cfigReg54, rdRegsIn.cfigReg55, rdRegsIn.cfigReg56, rdRegsIn.cfigReg57, rdRegsIn.cfigReg58, rdRegsIn.cfigReg59, rdRegsIn.cfigReg60, rdRegsIn.cfigReg61, rdRegsIn.cfigReg62, rdRegsIn.cfigReg63)
    689                                                  variable loc_addr :std_logic_vector(OPT_MEM_ADDR_BITS downto 0);
    690                                                  begin
    691             1                          6             loc_addr := axi_araddr(ADDR_LSB + OPT_MEM_ADDR_BITS downto ADDR_LSB);
    692                                                      case loc_addr is
    693                                                        when b"000000" =>
    694             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg0;
    695                                                        when b"000001" =>
    696             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg1;
    697                                                        when b"000010" =>
    698             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg2;
    699                                                        when b"000011" =>
    700             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg3;
    701                                                        when b"000100" =>
    702             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg4;
    703                                                        when b"000101" =>
    704             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg5;
    705                                                        when b"000110" =>
    706             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg6;
    707                                                        when b"000111" =>
    708             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg7;
    709                                                        when b"001000" =>
    710             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg8;
    711                                                        when b"001001" =>
    712             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg9;
    713                                                        when b"001010" =>
    714             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg10;
    715                                                        when b"001011" =>
    716             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg11;
    717                                                        when b"001100" =>
    718             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg12;
    719                                                        when b"001101" =>
    720             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg13;
    721                                                        when b"001110" =>
    722             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg14;
    723                                                        when b"001111" =>
    724             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg15;
    725                                                        when b"010000" =>
    726             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg16;
    727                                                        when b"010001" =>
    728             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg17;
    729                                                        when b"010010" =>
    730             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg18;
    731                                                        when b"010011" =>
    732             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg19;
    733                                                        when b"010100" =>
    734             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg20;
    735                                                        when b"010101" =>
    736             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg21;
    737                                                        when b"010110" =>
    738             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg22;
    739                                                        when b"010111" =>
    740             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg23;
    741                                                        when b"011000" =>
    742             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg24;
    743                                                        when b"011001" =>
    744             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg25;
    745                                                        when b"011010" =>
    746             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg26;
    747                                                        when b"011011" =>
    748             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg27;
    749                                                        when b"011100" =>
    750             1                    ***0***                 reg_data_out <= rdRegsIn.cfigReg28;
    751                                                        when b"011101" =>
    752             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg29;
    753                                                        when b"011110" =>
    754             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg30;
    755                                                        when b"011111" =>
    756             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg31;
    757                                              	      when b"100000" =>
    758             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg32;
    759                                              	      when b"100001" =>
    760             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg33;
    761                                              	      when b"100010" =>
    762             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg34;
    763                                              	      when b"100011" =>
    764             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg35;
    765                                              	      when b"100100" =>
    766             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg36;
    767                                              	      when b"100101" =>
    768             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg37;
    769                                              	      when b"100110" =>
    770             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg38;
    771                                              	      when b"100111" =>
    772             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg39;
    773                                              	      when b"101000" =>
    774             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg40;
    775                                              	      when b"101001" =>
    776             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg41;
    777                                              	      when b"101010" =>
    778             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg42;
    779                                              	      when b"101011" =>
    780             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg43;
    781                                              	      when b"101100" =>
    782             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg44;
    783                                              	      when b"101101" =>
    784             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg45;
    785                                              	      when b"101110" =>
    786             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg46;
    787                                              	      when b"101111" =>
    788             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg47;
    789                                              	      when b"110000" =>
    790             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg48;
    791                                              	      when b"110001" =>
    792             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg49;
    793                                              	      when b"110010" =>
    794             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg50;
    795                                              	      when b"110011" =>
    796             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg51;
    797                                              	      when b"110100" =>
    798             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg52;
    799                                              	      when b"110101" =>
    800             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg53;
    801                                              	      when b"110110" =>
    802             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg54;
    803                                              	      when b"110111" =>
    804             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg55;
    805                                              	      when b"111000" =>
    806             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg56;
    807                                              	      when b"111001" =>
    808             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg57;
    809                                              	      when b"111010" =>
    810             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg58;
    811                                              	      when b"111011" =>
    812             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg59;
    813                                              	      when b"111100" =>
    814             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg60;
    815                                              	      when b"111101" =>
    816             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg61;
    817                                              	      when b"111110" =>
    818             1                    ***0***     	        reg_data_out <= rdRegsIn.cfigReg62;
    819                                              	      when b"111111" =>
    820             1                          4     	        reg_data_out <= rdRegsIn.cfigReg63;
    821                                                        when others =>
    822             1                          2                 reg_data_out  <= (others => '0');
    823                                                      end case;
    824                                                  end process;
    825                                                  
    826                                                  process( ACLK ) begin
    827                                                    if (rising_edge (ACLK)) then
    828                                                      if ( ARESETN = '0' ) then
    829             1                          3               axi_rdata  <= (others => '0');
    830                                                      else
    831                                                        if (slv_reg_rden = '1') then
    832             1                    ***0***                   axi_rdata <= reg_data_out;     
    833                                                        end if;   
    834                                                      end if;
    835                                                    end if;
    836                                                  end process;
    837                                              
    838                                                  cpuOut: process (ACLK) begin
    839                                                      if (rising_edge (ACLK)) then
    840             1                        220                 wrRegsOut <= localRegs;

Branch Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    Branches                       302        35       267      11.5

================================Branch Details================================

Branch Coverage for Design Unit work.vfpconfig(arch_imp)

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File ../modules/dut/vfpConfig.vhd
------------------------------------IF Branch------------------------------------
    68                                         3     Count coming in to IF
    68              1                          3           if rising_edge(ACLK) then 
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    69                                         3     Count coming in to IF
    69              1                          2             if ARESETN = '0' then
    72              1                          1             else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    73                                         1     Count coming in to IF
    73              1                    ***0***               if (axi_awready = '0' and AWVALID = '1' and WVALID = '1' and aw_en = '1') then
    75              1                    ***0***                 elsif (BREADY = '1' and axi_bvalid = '1') then
    78              1                          1               else
Branch totals: 1 hit of 3 branches = 33.3%

------------------------------------IF Branch------------------------------------
    86                                         3     Count coming in to IF
    86              1                          3           if rising_edge(ACLK) then 
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    87                                         3     Count coming in to IF
    87              1                          2             if ARESETN = '0' then
    89              1                          1             else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    90                                         1     Count coming in to IF
    90              1                    ***0***               if (axi_awready = '0' and AWVALID = '1' and WVALID = '1' and aw_en = '1') then
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    98                                         3     Count coming in to IF
    98              1                          3           if rising_edge(ACLK) then 
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    99                                         3     Count coming in to IF
    99              1                          2             if ARESETN = '0' then
    101             1                          1             else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    102                                        1     Count coming in to IF
    102             1                    ***0***               if (axi_wready = '0' and WVALID = '1' and AWVALID = '1' and aw_en = '1') then
    104             1                          1               else
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    114                                      220     Count coming in to IF
    114             1                        220     	  if rising_edge(ACLK) then 
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    115                                      220     Count coming in to IF
    115             1                         99     	    if ARESETN = '0' then
    180             1                        121     	    else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    182                                      121     Count coming in to IF
    182             1                    ***0***     	      if (slv_reg_wren = '1') then
                                             121     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------CASE Branch------------------------------------
    183                                  ***0***     Count coming in to CASE
    184             1                    ***0***     	          when b"000000" =>
    190             1                    ***0***     	          when b"000001" =>
    196             1                    ***0***     	          when b"000010" =>
    202             1                    ***0***     	          when b"000011" =>
    208             1                    ***0***     	          when b"000100" =>
    214             1                    ***0***     	          when b"000101" =>
    220             1                    ***0***     	          when b"000110" =>
    226             1                    ***0***     	          when b"000111" =>
    232             1                    ***0***     	          when b"001000" =>
    238             1                    ***0***     	          when b"001001" =>
    244             1                    ***0***     	          when b"001010" =>
    250             1                    ***0***     	          when b"001011" =>
    256             1                    ***0***     	          when b"001100" =>
    262             1                    ***0***     	          when b"001101" =>
    268             1                    ***0***     	          when b"001110" =>
    274             1                    ***0***     	          when b"001111" =>
    280             1                    ***0***     	          when b"010000" =>
    286             1                    ***0***     	          when b"010001" =>
    292             1                    ***0***     	          when b"010010" =>
    298             1                    ***0***     	          when b"010011" =>
    304             1                    ***0***     	          when b"010100" =>
    310             1                    ***0***     	          when b"010101" =>
    316             1                    ***0***     	          when b"010110" =>
    322             1                    ***0***     	          when b"010111" =>
    328             1                    ***0***     	          when b"011000" =>
    334             1                    ***0***     	          when b"011001" =>
    340             1                    ***0***     	          when b"011010" =>
    346             1                    ***0***     	          when b"011011" =>
    352             1                    ***0***     	          when b"011100" =>
    358             1                    ***0***     	          when b"011101" =>
    364             1                    ***0***     	          when b"011110" =>
    370             1                    ***0***     	          when b"011111" =>
    376             1                    ***0***     	          when b"100000" =>
    382             1                    ***0***     	          when b"100001" =>
    388             1                    ***0***     	          when b"100010" =>
    394             1                    ***0***     	          when b"100011" =>
    400             1                    ***0***     	          when b"100100" =>
    406             1                    ***0***     	          when b"100101" =>
    412             1                    ***0***     	          when b"100110" =>
    418             1                    ***0***     	          when b"100111" =>
    424             1                    ***0***     	          when b"101000" =>
    430             1                    ***0***     	          when b"101001" =>
    436             1                    ***0***     	          when b"101010" =>
    442             1                    ***0***     	          when b"101011" =>
    448             1                    ***0***     	          when b"101100" =>
    454             1                    ***0***     	          when b"101101" =>
    460             1                    ***0***     	          when b"101110" =>
    466             1                    ***0***     	          when b"101111" =>
    472             1                    ***0***     	          when b"110000" =>
    478             1                    ***0***     	          when b"110001" =>
    484             1                    ***0***     	          when b"110010" =>
    490             1                    ***0***     	          when b"110011" =>
    496             1                    ***0***     	          when b"110100" =>
    502             1                    ***0***     	          when b"110101" =>
    508             1                    ***0***     	          when b"110110" =>
    514             1                    ***0***     	          when b"110111" =>
    520             1                    ***0***     	          when b"111000" =>
    526             1                    ***0***     	          when b"111001" =>
    532             1                    ***0***     	          when b"111010" =>
    538             1                    ***0***     	          when b"111011" =>
    544             1                    ***0***     	          when b"111100" =>
    550             1                    ***0***     	          when b"111101" =>
    556             1                    ***0***     	          when b"111110" =>
    562             1                    ***0***     	          when b"111111" =>
    568             1                    ***0***     	          when others =>
Branch totals: 0 hits of 65 branches = 0.0%

------------------------------------IF Branch------------------------------------
    186                                  ***0***     Count coming in to IF
    186             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    192                                  ***0***     Count coming in to IF
    192             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    198                                  ***0***     Count coming in to IF
    198             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    204                                  ***0***     Count coming in to IF
    204             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    210                                  ***0***     Count coming in to IF
    210             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    216                                  ***0***     Count coming in to IF
    216             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    222                                  ***0***     Count coming in to IF
    222             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    228                                  ***0***     Count coming in to IF
    228             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    234                                  ***0***     Count coming in to IF
    234             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    240                                  ***0***     Count coming in to IF
    240             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    246                                  ***0***     Count coming in to IF
    246             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    252                                  ***0***     Count coming in to IF
    252             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    258                                  ***0***     Count coming in to IF
    258             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    264                                  ***0***     Count coming in to IF
    264             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    270                                  ***0***     Count coming in to IF
    270             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    276                                  ***0***     Count coming in to IF
    276             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    282                                  ***0***     Count coming in to IF
    282             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    288                                  ***0***     Count coming in to IF
    288             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    294                                  ***0***     Count coming in to IF
    294             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    300                                  ***0***     Count coming in to IF
    300             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    306                                  ***0***     Count coming in to IF
    306             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    312                                  ***0***     Count coming in to IF
    312             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    318                                  ***0***     Count coming in to IF
    318             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    324                                  ***0***     Count coming in to IF
    324             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    330                                  ***0***     Count coming in to IF
    330             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    336                                  ***0***     Count coming in to IF
    336             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    342                                  ***0***     Count coming in to IF
    342             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    348                                  ***0***     Count coming in to IF
    348             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    354                                  ***0***     Count coming in to IF
    354             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    360                                  ***0***     Count coming in to IF
    360             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    366                                  ***0***     Count coming in to IF
    366             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    372                                  ***0***     Count coming in to IF
    372             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    378                                  ***0***     Count coming in to IF
    378             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    384                                  ***0***     Count coming in to IF
    384             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    390                                  ***0***     Count coming in to IF
    390             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    396                                  ***0***     Count coming in to IF
    396             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    402                                  ***0***     Count coming in to IF
    402             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    408                                  ***0***     Count coming in to IF
    408             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    414                                  ***0***     Count coming in to IF
    414             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    420                                  ***0***     Count coming in to IF
    420             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    426                                  ***0***     Count coming in to IF
    426             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    432                                  ***0***     Count coming in to IF
    432             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    438                                  ***0***     Count coming in to IF
    438             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    444                                  ***0***     Count coming in to IF
    444             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    450                                  ***0***     Count coming in to IF
    450             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    456                                  ***0***     Count coming in to IF
    456             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    462                                  ***0***     Count coming in to IF
    462             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    468                                  ***0***     Count coming in to IF
    468             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    474                                  ***0***     Count coming in to IF
    474             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    480                                  ***0***     Count coming in to IF
    480             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    486                                  ***0***     Count coming in to IF
    486             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    492                                  ***0***     Count coming in to IF
    492             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    498                                  ***0***     Count coming in to IF
    498             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    504                                  ***0***     Count coming in to IF
    504             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    510                                  ***0***     Count coming in to IF
    510             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    516                                  ***0***     Count coming in to IF
    516             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    522                                  ***0***     Count coming in to IF
    522             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    528                                  ***0***     Count coming in to IF
    528             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    534                                  ***0***     Count coming in to IF
    534             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    540                                  ***0***     Count coming in to IF
    540             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    546                                  ***0***     Count coming in to IF
    546             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    552                                  ***0***     Count coming in to IF
    552             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    558                                  ***0***     Count coming in to IF
    558             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    564                                  ***0***     Count coming in to IF
    564             1                    ***0***     	              if ( WSTRB(byte_index) = '1' ) then
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.0%

------------------------------------IF Branch------------------------------------
    641                                        3     Count coming in to IF
    641             1                          3           if rising_edge(ACLK) then 
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    642                                        3     Count coming in to IF
    642             1                          2             if ARESETN = '0' then
    645             1                          1             else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    646                                        1     Count coming in to IF
    646             1                    ***0***               if (axi_awready = '1' and AWVALID = '1' and axi_wready = '1' and WVALID = '1' and axi_bvalid = '0'  ) then
    649             1                    ***0***               elsif (BREADY = '1' and axi_bvalid = '1') then   
                                               1     All False Count
Branch totals: 1 hit of 3 branches = 33.3%

------------------------------------IF Branch------------------------------------
    657                                        3     Count coming in to IF
    657             1                          3           if rising_edge(ACLK) then 
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    658                                        3     Count coming in to IF
    658             1                          2             if ARESETN = '0' then
    661             1                          1             else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    662                                        1     Count coming in to IF
    662             1                    ***0***               if (axi_arready = '0' and ARVALID = '1') then
    665             1                          1               else
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    673                                        3     Count coming in to IF
    673             1                          3           if rising_edge(ACLK) then
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    674                                        3     Count coming in to IF
    674             1                          2             if ARESETN = '0' then
    677             1                          1             else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    678                                        1     Count coming in to IF
    678             1                    ***0***               if (axi_arready = '1' and ARVALID = '1' and axi_rvalid = '0') then
    681             1                    ***0***               elsif (axi_rvalid = '1' and RREADY = '1') then
                                               1     All False Count
Branch totals: 1 hit of 3 branches = 33.3%

------------------------------------CASE Branch------------------------------------
    692                                        6     Count coming in to CASE
    693             1                    ***0***               when b"000000" =>
    695             1                    ***0***               when b"000001" =>
    697             1                    ***0***               when b"000010" =>
    699             1                    ***0***               when b"000011" =>
    701             1                    ***0***               when b"000100" =>
    703             1                    ***0***               when b"000101" =>
    705             1                    ***0***               when b"000110" =>
    707             1                    ***0***               when b"000111" =>
    709             1                    ***0***               when b"001000" =>
    711             1                    ***0***               when b"001001" =>
    713             1                    ***0***               when b"001010" =>
    715             1                    ***0***               when b"001011" =>
    717             1                    ***0***               when b"001100" =>
    719             1                    ***0***               when b"001101" =>
    721             1                    ***0***               when b"001110" =>
    723             1                    ***0***               when b"001111" =>
    725             1                    ***0***               when b"010000" =>
    727             1                    ***0***               when b"010001" =>
    729             1                    ***0***               when b"010010" =>
    731             1                    ***0***               when b"010011" =>
    733             1                    ***0***               when b"010100" =>
    735             1                    ***0***               when b"010101" =>
    737             1                    ***0***               when b"010110" =>
    739             1                    ***0***               when b"010111" =>
    741             1                    ***0***               when b"011000" =>
    743             1                    ***0***               when b"011001" =>
    745             1                    ***0***               when b"011010" =>
    747             1                    ***0***               when b"011011" =>
    749             1                    ***0***               when b"011100" =>
    751             1                    ***0***               when b"011101" =>
    753             1                    ***0***               when b"011110" =>
    755             1                    ***0***               when b"011111" =>
    757             1                    ***0***     	      when b"100000" =>
    759             1                    ***0***     	      when b"100001" =>
    761             1                    ***0***     	      when b"100010" =>
    763             1                    ***0***     	      when b"100011" =>
    765             1                    ***0***     	      when b"100100" =>
    767             1                    ***0***     	      when b"100101" =>
    769             1                    ***0***     	      when b"100110" =>
    771             1                    ***0***     	      when b"100111" =>
    773             1                    ***0***     	      when b"101000" =>
    775             1                    ***0***     	      when b"101001" =>
    777             1                    ***0***     	      when b"101010" =>
    779             1                    ***0***     	      when b"101011" =>
    781             1                    ***0***     	      when b"101100" =>
    783             1                    ***0***     	      when b"101101" =>
    785             1                    ***0***     	      when b"101110" =>
    787             1                    ***0***     	      when b"101111" =>
    789             1                    ***0***     	      when b"110000" =>
    791             1                    ***0***     	      when b"110001" =>
    793             1                    ***0***     	      when b"110010" =>
    795             1                    ***0***     	      when b"110011" =>
    797             1                    ***0***     	      when b"110100" =>
    799             1                    ***0***     	      when b"110101" =>
    801             1                    ***0***     	      when b"110110" =>
    803             1                    ***0***     	      when b"110111" =>
    805             1                    ***0***     	      when b"111000" =>
    807             1                    ***0***     	      when b"111001" =>
    809             1                    ***0***     	      when b"111010" =>
    811             1                    ***0***     	      when b"111011" =>
    813             1                    ***0***     	      when b"111100" =>
    815             1                    ***0***     	      when b"111101" =>
    817             1                    ***0***     	      when b"111110" =>
    819             1                          4     	      when b"111111" =>
    821             1                          2               when others =>
Branch totals: 2 hits of 65 branches = 3.0%

------------------------------------IF Branch------------------------------------
    827                                        4     Count coming in to IF
    827             1                          4           if (rising_edge (ACLK)) then
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%

------------------------------------IF Branch------------------------------------
    828                                        4     Count coming in to IF
    828             1                          3             if ( ARESETN = '0' ) then
    830             1                          1             else
Branch totals: 2 hits of 2 branches = 100.0%

------------------------------------IF Branch------------------------------------
    831                                        1     Count coming in to IF
    831             1                    ***0***               if (slv_reg_rden = '1') then
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.0%

------------------------------------IF Branch------------------------------------
    839                                      220     Count coming in to IF
    839             1                        220             if (rising_edge (ACLK)) then
                                            ECOP     All False Count
Branch totals: 1 hit of 1 branch = 100.0%


Condition Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Condition Terms             28         0        28       0.0

================================Condition Details================================

Condition Coverage for Design Unit work.vfpconfig(arch_imp) --

  File ../modules/dut/vfpConfig.vhd
----------------Focused Condition View-------------------
Line       73 Item    1  ((((axi_awready = '0') and (AWVALID = '1')) and (WVALID = '1')) and (aw_en = '1'))
Condition totals: 0 of 4 input terms covered = 0.0%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (axi_awready = '0')         N  No hits                  Hit '_0' and '_1'
      (AWVALID = '1')         N  '_1' not hit             Hit '_1'
       (WVALID = '1')         N  No hits                  Hit '_0' and '_1'
        (aw_en = '1')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:    ***0***  (axi_awready = '0')_0  -                             
  Row   2:    ***0***  (axi_awready = '0')_1  (aw_en = '1') && (WVALID = '1') && (AWVALID = '1')
  Row   3:          1  (AWVALID = '1')_0      (axi_awready = '0')           
  Row   4:    ***0***  (AWVALID = '1')_1      (aw_en = '1') && (WVALID = '1') && (axi_awready = '0')
  Row   5:    ***0***  (WVALID = '1')_0       ((axi_awready = '0') and (AWVALID = '1'))
  Row   6:    ***0***  (WVALID = '1')_1       (aw_en = '1') && ((axi_awready = '0') and (AWVALID = '1'))
  Row   7:    ***0***  (aw_en = '1')_0        (((axi_awready = '0') and (AWVALID = '1')) and (WVALID = '1'))
  Row   8:    ***0***  (aw_en = '1')_1        (((axi_awready = '0') and (AWVALID = '1')) and (WVALID = '1'))

----------------Focused Condition View-------------------
Line       75 Item    1  ((BREADY = '1') and (axi_bvalid = '1'))
Condition totals: 0 of 2 input terms covered = 0.0%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
      (BREADY = '1')         N  '_1' not hit             Hit '_1'
  (axi_bvalid = '1')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (BREADY = '1')_0      -                             
  Row   2:    ***0***  (BREADY = '1')_1      (axi_bvalid = '1')            
  Row   3:    ***0***  (axi_bvalid = '1')_0  (BREADY = '1')                
  Row   4:    ***0***  (axi_bvalid = '1')_1  (BREADY = '1')                

----------------Focused Condition View-------------------
Line       90 Item    1  ((((axi_awready = '0') and (AWVALID = '1')) and (WVALID = '1')) and (aw_en = '1'))
Condition totals: 0 of 4 input terms covered = 0.0%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (axi_awready = '0')         N  No hits                  Hit '_0' and '_1'
      (AWVALID = '1')         N  '_1' not hit             Hit '_1'
       (WVALID = '1')         N  No hits                  Hit '_0' and '_1'
        (aw_en = '1')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:    ***0***  (axi_awready = '0')_0  -                             
  Row   2:    ***0***  (axi_awready = '0')_1  (aw_en = '1') && (WVALID = '1') && (AWVALID = '1')
  Row   3:          1  (AWVALID = '1')_0      (axi_awready = '0')           
  Row   4:    ***0***  (AWVALID = '1')_1      (aw_en = '1') && (WVALID = '1') && (axi_awready = '0')
  Row   5:    ***0***  (WVALID = '1')_0       ((axi_awready = '0') and (AWVALID = '1'))
  Row   6:    ***0***  (WVALID = '1')_1       (aw_en = '1') && ((axi_awready = '0') and (AWVALID = '1'))
  Row   7:    ***0***  (aw_en = '1')_0        (((axi_awready = '0') and (AWVALID = '1')) and (WVALID = '1'))
  Row   8:    ***0***  (aw_en = '1')_1        (((axi_awready = '0') and (AWVALID = '1')) and (WVALID = '1'))

----------------Focused Condition View-------------------
Line       102 Item    1  ((((axi_wready = '0') and (WVALID = '1')) and (AWVALID = '1')) and (aw_en = '1'))
Condition totals: 0 of 4 input terms covered = 0.0%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (axi_wready = '0')         N  No hits                  Hit '_0' and '_1'
      (WVALID = '1')         N  '_1' not hit             Hit '_1'
     (AWVALID = '1')         N  No hits                  Hit '_0' and '_1'
       (aw_en = '1')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (axi_wready = '0')_0  -                             
  Row   2:    ***0***  (axi_wready = '0')_1  (aw_en = '1') && (AWVALID = '1') && (WVALID = '1')
  Row   3:          1  (WVALID = '1')_0      (axi_wready = '0')            
  Row   4:    ***0***  (WVALID = '1')_1      (aw_en = '1') && (AWVALID = '1') && (axi_wready = '0')
  Row   5:    ***0***  (AWVALID = '1')_0     ((axi_wready = '0') and (WVALID = '1'))
  Row   6:    ***0***  (AWVALID = '1')_1     (aw_en = '1') && ((axi_wready = '0') and (WVALID = '1'))
  Row   7:    ***0***  (aw_en = '1')_0       (((axi_wready = '0') and (WVALID = '1')) and (AWVALID = '1'))
  Row   8:    ***0***  (aw_en = '1')_1       (((axi_wready = '0') and (WVALID = '1')) and (AWVALID = '1'))

----------------Focused Condition View-------------------
Line       646 Item    1  (((((axi_awready = '1') and (AWVALID = '1')) and (axi_wready = '1')) and (WVALID = '1')) and (axi_bvalid = '0'))
Condition totals: 0 of 5 input terms covered = 0.0%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (axi_awready = '1')         N  '_1' not hit             Hit '_1'
      (AWVALID = '1')         N  No hits                  Hit '_0' and '_1'
   (axi_wready = '1')         N  No hits                  Hit '_0' and '_1'
       (WVALID = '1')         N  No hits                  Hit '_0' and '_1'
   (axi_bvalid = '0')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (axi_awready = '1')_0  -                             
  Row   2:    ***0***  (axi_awready = '1')_1  (axi_bvalid = '0') && (WVALID = '1') && (axi_wready = '1') && (AWVALID = '1')
  Row   3:    ***0***  (AWVALID = '1')_0      (axi_awready = '1')           
  Row   4:    ***0***  (AWVALID = '1')_1      (axi_bvalid = '0') && (WVALID = '1') && (axi_wready = '1') && (axi_awready = '1')
  Row   5:    ***0***  (axi_wready = '1')_0   ((axi_awready = '1') and (AWVALID = '1'))
  Row   6:    ***0***  (axi_wready = '1')_1   (axi_bvalid = '0') && (WVALID = '1') && ((axi_awready = '1') and (AWVALID = '1'))
  Row   7:    ***0***  (WVALID = '1')_0       (((axi_awready = '1') and (AWVALID = '1')) and (axi_wready = '1'))
  Row   8:    ***0***  (WVALID = '1')_1       (axi_bvalid = '0') && (((axi_awready = '1') and (AWVALID = '1')) and (axi_wready = '1'))
  Row   9:    ***0***  (axi_bvalid = '0')_0   ((((axi_awready = '1') and (AWVALID = '1')) and (axi_wready = '1')) and (WVALID = '1'))
 Row   10:    ***0***  (axi_bvalid = '0')_1   ((((axi_awready = '1') and (AWVALID = '1')) and (axi_wready = '1')) and (WVALID = '1'))

----------------Focused Condition View-------------------
Line       649 Item    1  ((BREADY = '1') and (axi_bvalid = '1'))
Condition totals: 0 of 2 input terms covered = 0.0%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
      (BREADY = '1')         N  '_1' not hit             Hit '_1'
  (axi_bvalid = '1')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (BREADY = '1')_0      -                             
  Row   2:    ***0***  (BREADY = '1')_1      (axi_bvalid = '1')            
  Row   3:    ***0***  (axi_bvalid = '1')_0  (BREADY = '1')                
  Row   4:    ***0***  (axi_bvalid = '1')_1  (BREADY = '1')                

----------------Focused Condition View-------------------
Line       662 Item    1  ((axi_arready = '0') and (ARVALID = '1'))
Condition totals: 0 of 2 input terms covered = 0.0%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (axi_arready = '0')         N  No hits                  Hit '_0' and '_1'
      (ARVALID = '1')         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:    ***0***  (axi_arready = '0')_0  -                             
  Row   2:    ***0***  (axi_arready = '0')_1  (ARVALID = '1')               
  Row   3:          1  (ARVALID = '1')_0      (axi_arready = '0')           
  Row   4:    ***0***  (ARVALID = '1')_1      (axi_arready = '0')           

----------------Focused Condition View-------------------
Line       678 Item    1  (((axi_arready = '1') and (ARVALID = '1')) and (axi_rvalid = '0'))
Condition totals: 0 of 3 input terms covered = 0.0%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (axi_arready = '1')         N  '_1' not hit             Hit '_1'
      (ARVALID = '1')         N  No hits                  Hit '_0' and '_1'
   (axi_rvalid = '0')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (axi_arready = '1')_0  -                             
  Row   2:    ***0***  (axi_arready = '1')_1  (axi_rvalid = '0') && (ARVALID = '1')
  Row   3:    ***0***  (ARVALID = '1')_0      (axi_arready = '1')           
  Row   4:    ***0***  (ARVALID = '1')_1      (axi_rvalid = '0') && (axi_arready = '1')
  Row   5:    ***0***  (axi_rvalid = '0')_0   ((axi_arready = '1') and (ARVALID = '1'))
  Row   6:    ***0***  (axi_rvalid = '0')_1   ((axi_arready = '1') and (ARVALID = '1'))

----------------Focused Condition View-------------------
Line       681 Item    1  ((axi_rvalid = '1') and (RREADY = '1'))
Condition totals: 0 of 2 input terms covered = 0.0%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  (axi_rvalid = '1')         N  '_1' not hit             Hit '_1'
      (RREADY = '1')         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (axi_rvalid = '1')_0  -                             
  Row   2:    ***0***  (axi_rvalid = '1')_1  (RREADY = '1')                
  Row   3:    ***0***  (RREADY = '1')_0      (axi_rvalid = '1')            
  Row   4:    ***0***  (RREADY = '1')_1      (axi_rvalid = '1')            


Expression Coverage:
    Enabled Coverage            Active   Covered    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FEC Expression Terms             7         0         7       0.0

================================Expression Details================================

Expression Coverage for Design Unit work.vfpconfig(arch_imp) --

  File ../modules/dut/vfpConfig.vhd
----------------Focused Expression View-----------------
Line       110 Item    1  (((axi_wready and WVALID) and axi_awready) and AWVALID)
Expression totals: 0 of 4 input terms covered = 0.0%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
   axi_wready         N  No hits                  Hit '_0' and '_1'
       WVALID         N  No hits                  Hit '_0' and '_1'
  axi_awready         N  No hits                  Hit '_0' and '_1'
      AWVALID         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  axi_wready_0          AWVALID && axi_awready && WVALID
  Row   2:    ***0***  axi_wready_1          AWVALID && axi_awready && WVALID
  Row   3:    ***0***  WVALID_0              AWVALID && axi_awready && axi_wready
  Row   4:    ***0***  WVALID_1              AWVALID && axi_awready && axi_wready
  Row   5:    ***0***  axi_awready_0         AWVALID && (axi_wready and WVALID)
  Row   6:    ***0***  axi_awready_1         AWVALID && (axi_wready and WVALID)
  Row   7:    ***0***  AWVALID_0             ((axi_wready and WVALID) and axi_awready)
  Row   8:    ***0***  AWVALID_1             ((axi_wready and WVALID) and axi_awready)

----------------Focused Expression View-----------------
Line       687 Item    1  ((axi_arready and ARVALID) and not(axi_rvalid))
Expression totals: 0 of 3 input terms covered = 0.0%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  axi_arready         N  No hits                  Hit '_0' and '_1'
      ARVALID         N  No hits                  Hit '_0' and '_1'
   axi_rvalid         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  axi_arready_0         not axi_rvalid && ARVALID     
  Row   2:    ***0***  axi_arready_1         not axi_rvalid && ARVALID     
  Row   3:    ***0***  ARVALID_0             not axi_rvalid && axi_arready 
  Row   4:    ***0***  ARVALID_1             not axi_rvalid && axi_arready 
  Row   5:    ***0***  axi_rvalid_0          (axi_arready and ARVALID)     
  Row   6:    ***0***  axi_rvalid_1          (axi_arready and ARVALID)     


FSM Coverage:
    Enabled Coverage            Active      Hits    Misses % Covered
    ----------------            ------      ----    ------ ---------
    FSMs                                                       100.0
        States                       0         0         0     100.0
        Transitions                  0         0         0     100.0

COVERGROUP COVERAGE:
-----------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal    Status               
                                                                                              
-----------------------------------------------------------------------------------------------
 TYPE work.socTest_pkg::template_monitor_afterToDut/template_cg 
                                                         0.0%        100    ZERO                 
    covered/total bins:                                     0         24                      
    missing/total bins:                                    24         24                      
    % Hit:                                               0.0%        100                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(1)
    Coverpoint template_cg::ina_cp                       0.0%        100    ZERO                 
        covered/total bins:                                 0          4                      
        missing/total bins:                                 4          4                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                         0          1    ZERO                 
        bin auto[1]                                         0          1    ZERO                 
        bin auto[2]                                         0          1    ZERO                 
        bin auto[3]                                         0          1    ZERO                 
    Coverpoint template_cg::inb_cp                       0.0%        100    ZERO                 
        covered/total bins:                                 0          4                      
        missing/total bins:                                 4          4                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                         0          1    ZERO                 
        bin auto[1]                                         0          1    ZERO                 
        bin auto[2]                                         0          1    ZERO                 
        bin auto[3]                                         0          1    ZERO                 
    Cross template_cg::#cross__0#                        0.0%        100    ZERO                 
        covered/total bins:                                 0         16                      
        missing/total bins:                                16         16                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin <auto[0],auto[0]>                               0          1    ZERO                 
        bin <auto[1],auto[0]>                               0          1    ZERO                 
        bin <auto[2],auto[0]>                               0          1    ZERO                 
        bin <auto[3],auto[0]>                               0          1    ZERO                 
        bin <auto[0],auto[1]>                               0          1    ZERO                 
        bin <auto[1],auto[1]>                               0          1    ZERO                 
        bin <auto[2],auto[1]>                               0          1    ZERO                 
        bin <auto[3],auto[1]>                               0          1    ZERO                 
        bin <auto[0],auto[2]>                               0          1    ZERO                 
        bin <auto[1],auto[2]>                               0          1    ZERO                 
        bin <auto[2],auto[2]>                               0          1    ZERO                 
        bin <auto[3],auto[2]>                               0          1    ZERO                 
        bin <auto[0],auto[3]>                               0          1    ZERO                 
        bin <auto[1],auto[3]>                               0          1    ZERO                 
        bin <auto[2],auto[3]>                               0          1    ZERO                 
        bin <auto[3],auto[3]>                               0          1    ZERO                 
 CLASS template_monitor_afterToDut
 TYPE work.socTest_pkg::axiLite_fc_subscriber/aL_cg 
                                                         0.0%        100    ZERO                 
    covered/total bins:                                     0        128                      
    missing/total bins:                                   128        128                      
    % Hit:                                               0.0%        100                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(1)
    Coverpoint aL_cg::WDATA_cp                           0.0%        100    ZERO                 
        covered/total bins:                                 0         64                      
        missing/total bins:                                64         64                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:67108863]                                0          1    ZERO                 
        bin auto[67108864:134217727]                        0          1    ZERO                 
        bin auto[134217728:201326591]                       0          1    ZERO                 
        bin auto[201326592:268435455]                       0          1    ZERO                 
        bin auto[268435456:335544319]                       0          1    ZERO                 
        bin auto[335544320:402653183]                       0          1    ZERO                 
        bin auto[402653184:469762047]                       0          1    ZERO                 
        bin auto[469762048:536870911]                       0          1    ZERO                 
        bin auto[536870912:603979775]                       0          1    ZERO                 
        bin auto[603979776:671088639]                       0          1    ZERO                 
        bin auto[671088640:738197503]                       0          1    ZERO                 
        bin auto[738197504:805306367]                       0          1    ZERO                 
        bin auto[805306368:872415231]                       0          1    ZERO                 
        bin auto[872415232:939524095]                       0          1    ZERO                 
        bin auto[939524096:1006632959]                      0          1    ZERO                 
        bin auto[1006632960:1073741823]                     0          1    ZERO                 
        bin auto[1073741824:1140850687]                     0          1    ZERO                 
        bin auto[1140850688:1207959551]                     0          1    ZERO                 
        bin auto[1207959552:1275068415]                     0          1    ZERO                 
        bin auto[1275068416:1342177279]                     0          1    ZERO                 
        bin auto[1342177280:1409286143]                     0          1    ZERO                 
        bin auto[1409286144:1476395007]                     0          1    ZERO                 
        bin auto[1476395008:1543503871]                     0          1    ZERO                 
        bin auto[1543503872:1610612735]                     0          1    ZERO                 
        bin auto[1610612736:1677721599]                     0          1    ZERO                 
        bin auto[1677721600:1744830463]                     0          1    ZERO                 
        bin auto[1744830464:1811939327]                     0          1    ZERO                 
        bin auto[1811939328:1879048191]                     0          1    ZERO                 
        bin auto[1879048192:1946157055]                     0          1    ZERO                 
        bin auto[1946157056:2013265919]                     0          1    ZERO                 
        bin auto[2013265920:2080374783]                     0          1    ZERO                 
        bin auto[2080374784:2147483647]                     0          1    ZERO                 
        bin auto[2147483648:2214592511]                     0          1    ZERO                 
        bin auto[2214592512:2281701375]                     0          1    ZERO                 
        bin auto[2281701376:2348810239]                     0          1    ZERO                 
        bin auto[2348810240:2415919103]                     0          1    ZERO                 
        bin auto[2415919104:2483027967]                     0          1    ZERO                 
        bin auto[2483027968:2550136831]                     0          1    ZERO                 
        bin auto[2550136832:2617245695]                     0          1    ZERO                 
        bin auto[2617245696:2684354559]                     0          1    ZERO                 
        bin auto[2684354560:2751463423]                     0          1    ZERO                 
        bin auto[2751463424:2818572287]                     0          1    ZERO                 
        bin auto[2818572288:2885681151]                     0          1    ZERO                 
        bin auto[2885681152:2952790015]                     0          1    ZERO                 
        bin auto[2952790016:3019898879]                     0          1    ZERO                 
        bin auto[3019898880:3087007743]                     0          1    ZERO                 
        bin auto[3087007744:3154116607]                     0          1    ZERO                 
        bin auto[3154116608:3221225471]                     0          1    ZERO                 
        bin auto[3221225472:3288334335]                     0          1    ZERO                 
        bin auto[3288334336:3355443199]                     0          1    ZERO                 
        bin auto[3355443200:3422552063]                     0          1    ZERO                 
        bin auto[3422552064:3489660927]                     0          1    ZERO                 
        bin auto[3489660928:3556769791]                     0          1    ZERO                 
        bin auto[3556769792:3623878655]                     0          1    ZERO                 
        bin auto[3623878656:3690987519]                     0          1    ZERO                 
        bin auto[3690987520:3758096383]                     0          1    ZERO                 
        bin auto[3758096384:3825205247]                     0          1    ZERO                 
        bin auto[3825205248:3892314111]                     0          1    ZERO                 
        bin auto[3892314112:3959422975]                     0          1    ZERO                 
        bin auto[3959422976:4026531839]                     0          1    ZERO                 
        bin auto[4026531840:4093640703]                     0          1    ZERO                 
        bin auto[4093640704:4160749567]                     0          1    ZERO                 
        bin auto[4160749568:4227858431]                     0          1    ZERO                 
        bin auto[4227858432:4294967295]                     0          1    ZERO                 
    Coverpoint aL_cg::AWADDR_cp                          0.0%        100    ZERO                 
        covered/total bins:                                 0         64                      
        missing/total bins:                                64         64                      
        % Hit:                                           0.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:67108863]                                0          1    ZERO                 
        bin auto[67108864:134217727]                        0          1    ZERO                 
        bin auto[134217728:201326591]                       0          1    ZERO                 
        bin auto[201326592:268435455]                       0          1    ZERO                 
        bin auto[268435456:335544319]                       0          1    ZERO                 
        bin auto[335544320:402653183]                       0          1    ZERO                 
        bin auto[402653184:469762047]                       0          1    ZERO                 
        bin auto[469762048:536870911]                       0          1    ZERO                 
        bin auto[536870912:603979775]                       0          1    ZERO                 
        bin auto[603979776:671088639]                       0          1    ZERO                 
        bin auto[671088640:738197503]                       0          1    ZERO                 
        bin auto[738197504:805306367]                       0          1    ZERO                 
        bin auto[805306368:872415231]                       0          1    ZERO                 
        bin auto[872415232:939524095]                       0          1    ZERO                 
        bin auto[939524096:1006632959]                      0          1    ZERO                 
        bin auto[1006632960:1073741823]                     0          1    ZERO                 
        bin auto[1073741824:1140850687]                     0          1    ZERO                 
        bin auto[1140850688:1207959551]                     0          1    ZERO                 
        bin auto[1207959552:1275068415]                     0          1    ZERO                 
        bin auto[1275068416:1342177279]                     0          1    ZERO                 
        bin auto[1342177280:1409286143]                     0          1    ZERO                 
        bin auto[1409286144:1476395007]                     0          1    ZERO                 
        bin auto[1476395008:1543503871]                     0          1    ZERO                 
        bin auto[1543503872:1610612735]                     0          1    ZERO                 
        bin auto[1610612736:1677721599]                     0          1    ZERO                 
        bin auto[1677721600:1744830463]                     0          1    ZERO                 
        bin auto[1744830464:1811939327]                     0          1    ZERO                 
        bin auto[1811939328:1879048191]                     0          1    ZERO                 
        bin auto[1879048192:1946157055]                     0          1    ZERO                 
        bin auto[1946157056:2013265919]                     0          1    ZERO                 
        bin auto[2013265920:2080374783]                     0          1    ZERO                 
        bin auto[2080374784:2147483647]                     0          1    ZERO                 
        bin auto[2147483648:2214592511]                     0          1    ZERO                 
        bin auto[2214592512:2281701375]                     0          1    ZERO                 
        bin auto[2281701376:2348810239]                     0          1    ZERO                 
        bin auto[2348810240:2415919103]                     0          1    ZERO                 
        bin auto[2415919104:2483027967]                     0          1    ZERO                 
        bin auto[2483027968:2550136831]                     0          1    ZERO                 
        bin auto[2550136832:2617245695]                     0          1    ZERO                 
        bin auto[2617245696:2684354559]                     0          1    ZERO                 
        bin auto[2684354560:2751463423]                     0          1    ZERO                 
        bin auto[2751463424:2818572287]                     0          1    ZERO                 
        bin auto[2818572288:2885681151]                     0          1    ZERO                 
        bin auto[2885681152:2952790015]                     0          1    ZERO                 
        bin auto[2952790016:3019898879]                     0          1    ZERO                 
        bin auto[3019898880:3087007743]                     0          1    ZERO                 
        bin auto[3087007744:3154116607]                     0          1    ZERO                 
        bin auto[3154116608:3221225471]                     0          1    ZERO                 
        bin auto[3221225472:3288334335]                     0          1    ZERO                 
        bin auto[3288334336:3355443199]                     0          1    ZERO                 
        bin auto[3355443200:3422552063]                     0          1    ZERO                 
        bin auto[3422552064:3489660927]                     0          1    ZERO                 
        bin auto[3489660928:3556769791]                     0          1    ZERO                 
        bin auto[3556769792:3623878655]                     0          1    ZERO                 
        bin auto[3623878656:3690987519]                     0          1    ZERO                 
        bin auto[3690987520:3758096383]                     0          1    ZERO                 
        bin auto[3758096384:3825205247]                     0          1    ZERO                 
        bin auto[3825205248:3892314111]                     0          1    ZERO                 
        bin auto[3892314112:3959422975]                     0          1    ZERO                 
        bin auto[3959422976:4026531839]                     0          1    ZERO                 
        bin auto[4026531840:4093640703]                     0          1    ZERO                 
        bin auto[4093640704:4160749567]                     0          1    ZERO                 
        bin auto[4160749568:4227858431]                     0          1    ZERO                 
        bin auto[4227858432:4294967295]                     0          1    ZERO                 
 CLASS axiLite_fc_subscriber
 TYPE work.socTest_pkg::rgb_fc_subscriber/rgb_cg        86.2%        100    Uncovered            
    covered/total bins:                                   346        454                      
    missing/total bins:                                   108        454                      
    % Hit:                                              76.2%        100                      
    type_option.weight=1
    type_option.goal=100
    type_option.comment=
    type_option.strobe=0
    type_option.merge_instances=auto(1)
    Coverpoint rgb_cg::iRed_cp                          79.6%        100    Uncovered            
        covered/total bins:                                51         64                      
        missing/total bins:                                13         64                      
        % Hit:                                          79.6%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:3]                                       4          1    Covered              
        bin auto[4:7]                                       0          1    ZERO                 
        bin auto[8:11]                                      6          1    Covered              
        bin auto[12:15]                                     0          1    ZERO                 
        bin auto[16:19]                                     4          1    Covered              
        bin auto[20:23]                                     0          1    ZERO                 
        bin auto[24:27]                                     6          1    Covered              
        bin auto[28:31]                                     8          1    Covered              
        bin auto[32:35]                                     2          1    Covered              
        bin auto[36:39]                                     4          1    Covered              
        bin auto[40:43]                                     6          1    Covered              
        bin auto[44:47]                                     4          1    Covered              
        bin auto[48:51]                                     2          1    Covered              
        bin auto[52:55]                                     8          1    Covered              
        bin auto[56:59]                                     2          1    Covered              
        bin auto[60:63]                                     2          1    Covered              
        bin auto[64:67]                                     2          1    Covered              
        bin auto[68:71]                                     0          1    ZERO                 
        bin auto[72:75]                                     4          1    Covered              
        bin auto[76:79]                                     0          1    ZERO                 
        bin auto[80:83]                                     6          1    Covered              
        bin auto[84:87]                                     2          1    Covered              
        bin auto[88:91]                                     2          1    Covered              
        bin auto[92:95]                                     8          1    Covered              
        bin auto[96:99]                                     2          1    Covered              
        bin auto[100:103]                                   0          1    ZERO                 
        bin auto[104:107]                                   0          1    ZERO                 
        bin auto[108:111]                                   2          1    Covered              
        bin auto[112:115]                                   2          1    Covered              
        bin auto[116:119]                                   0          1    ZERO                 
        bin auto[120:123]                                   2          1    Covered              
        bin auto[124:127]                                   2          1    Covered              
        bin auto[128:131]                                   6          1    Covered              
        bin auto[132:135]                                   6          1    Covered              
        bin auto[136:139]                                   0          1    ZERO                 
        bin auto[140:143]                                   2          1    Covered              
        bin auto[144:147]                                   8          1    Covered              
        bin auto[148:151]                                   0          1    ZERO                 
        bin auto[152:155]                                   4          1    Covered              
        bin auto[156:159]                                   6          1    Covered              
        bin auto[160:163]                                   0          1    ZERO                 
        bin auto[164:167]                                   2          1    Covered              
        bin auto[168:171]                                   2          1    Covered              
        bin auto[172:175]                                   4          1    Covered              
        bin auto[176:179]                                   6          1    Covered              
        bin auto[180:183]                                   6          1    Covered              
        bin auto[184:187]                                   4          1    Covered              
        bin auto[188:191]                                   6          1    Covered              
        bin auto[192:195]                                   4          1    Covered              
        bin auto[196:199]                                   4          1    Covered              
        bin auto[200:203]                                   4          1    Covered              
        bin auto[204:207]                                   4          1    Covered              
        bin auto[208:211]                                   2          1    Covered              
        bin auto[212:215]                                   8          1    Covered              
        bin auto[216:219]                                   2          1    Covered              
        bin auto[220:223]                                   8          1    Covered              
        bin auto[224:227]                                   4          1    Covered              
        bin auto[228:231]                                   6          1    Covered              
        bin auto[232:235]                                   4          1    Covered              
        bin auto[236:239]                                   0          1    ZERO                 
        bin auto[240:243]                                   2          1    Covered              
        bin auto[244:247]                                  10          1    Covered              
        bin auto[248:251]                                   4          1    Covered              
        bin auto[252:255]                                   0          1    ZERO                 
    Coverpoint rgb_cg::iGreen_cp                        81.2%        100    Uncovered            
        covered/total bins:                                52         64                      
        missing/total bins:                                12         64                      
        % Hit:                                          81.2%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:3]                                       6          1    Covered              
        bin auto[4:7]                                       6          1    Covered              
        bin auto[8:11]                                      6          1    Covered              
        bin auto[12:15]                                     0          1    ZERO                 
        bin auto[16:19]                                     4          1    Covered              
        bin auto[20:23]                                     2          1    Covered              
        bin auto[24:27]                                     2          1    Covered              
        bin auto[28:31]                                     8          1    Covered              
        bin auto[32:35]                                     2          1    Covered              
        bin auto[36:39]                                     4          1    Covered              
        bin auto[40:43]                                     8          1    Covered              
        bin auto[44:47]                                    10          1    Covered              
        bin auto[48:51]                                     0          1    ZERO                 
        bin auto[52:55]                                     2          1    Covered              
        bin auto[56:59]                                     0          1    ZERO                 
        bin auto[60:63]                                     6          1    Covered              
        bin auto[64:67]                                     0          1    ZERO                 
        bin auto[68:71]                                     2          1    Covered              
        bin auto[72:75]                                     0          1    ZERO                 
        bin auto[76:79]                                     4          1    Covered              
        bin auto[80:83]                                     2          1    Covered              
        bin auto[84:87]                                     2          1    Covered              
        bin auto[88:91]                                     2          1    Covered              
        bin auto[92:95]                                     2          1    Covered              
        bin auto[96:99]                                     6          1    Covered              
        bin auto[100:103]                                   6          1    Covered              
        bin auto[104:107]                                   4          1    Covered              
        bin auto[108:111]                                  12          1    Covered              
        bin auto[112:115]                                   4          1    Covered              
        bin auto[116:119]                                   2          1    Covered              
        bin auto[120:123]                                   0          1    ZERO                 
        bin auto[124:127]                                   2          1    Covered              
        bin auto[128:131]                                   2          1    Covered              
        bin auto[132:135]                                  10          1    Covered              
        bin auto[136:139]                                   0          1    ZERO                 
        bin auto[140:143]                                   4          1    Covered              
        bin auto[144:147]                                   2          1    Covered              
        bin auto[148:151]                                   4          1    Covered              
        bin auto[152:155]                                   0          1    ZERO                 
        bin auto[156:159]                                   4          1    Covered              
        bin auto[160:163]                                   0          1    ZERO                 
        bin auto[164:167]                                   2          1    Covered              
        bin auto[168:171]                                   6          1    Covered              
        bin auto[172:175]                                   2          1    Covered              
        bin auto[176:179]                                   6          1    Covered              
        bin auto[180:183]                                   2          1    Covered              
        bin auto[184:187]                                   4          1    Covered              
        bin auto[188:191]                                   2          1    Covered              
        bin auto[192:195]                                   2          1    Covered              
        bin auto[196:199]                                   4          1    Covered              
        bin auto[200:203]                                   6          1    Covered              
        bin auto[204:207]                                   2          1    Covered              
        bin auto[208:211]                                   0          1    ZERO                 
        bin auto[212:215]                                   6          1    Covered              
        bin auto[216:219]                                   2          1    Covered              
        bin auto[220:223]                                   4          1    Covered              
        bin auto[224:227]                                   4          1    Covered              
        bin auto[228:231]                                   2          1    Covered              
        bin auto[232:235]                                   0          1    ZERO                 
        bin auto[236:239]                                   0          1    ZERO                 
        bin auto[240:243]                                   2          1    Covered              
        bin auto[244:247]                                   8          1    Covered              
        bin auto[248:251]                                   8          1    Covered              
        bin auto[252:255]                                   4          1    Covered              
    Coverpoint rgb_cg::iBlue_cp                         89.0%        100    Uncovered            
        covered/total bins:                                57         64                      
        missing/total bins:                                 7         64                      
        % Hit:                                          89.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:3]                                       4          1    Covered              
        bin auto[4:7]                                       2          1    Covered              
        bin auto[8:11]                                      2          1    Covered              
        bin auto[12:15]                                     6          1    Covered              
        bin auto[16:19]                                     2          1    Covered              
        bin auto[20:23]                                     2          1    Covered              
        bin auto[24:27]                                     2          1    Covered              
        bin auto[28:31]                                     0          1    ZERO                 
        bin auto[32:35]                                     6          1    Covered              
        bin auto[36:39]                                     2          1    Covered              
        bin auto[40:43]                                     2          1    Covered              
        bin auto[44:47]                                     0          1    ZERO                 
        bin auto[48:51]                                     2          1    Covered              
        bin auto[52:55]                                     4          1    Covered              
        bin auto[56:59]                                     4          1    Covered              
        bin auto[60:63]                                     2          1    Covered              
        bin auto[64:67]                                     4          1    Covered              
        bin auto[68:71]                                     8          1    Covered              
        bin auto[72:75]                                     0          1    ZERO                 
        bin auto[76:79]                                     6          1    Covered              
        bin auto[80:83]                                     4          1    Covered              
        bin auto[84:87]                                     6          1    Covered              
        bin auto[88:91]                                     0          1    ZERO                 
        bin auto[92:95]                                     2          1    Covered              
        bin auto[96:99]                                     6          1    Covered              
        bin auto[100:103]                                   6          1    Covered              
        bin auto[104:107]                                   4          1    Covered              
        bin auto[108:111]                                   6          1    Covered              
        bin auto[112:115]                                   2          1    Covered              
        bin auto[116:119]                                   4          1    Covered              
        bin auto[120:123]                                   0          1    ZERO                 
        bin auto[124:127]                                   2          1    Covered              
        bin auto[128:131]                                   2          1    Covered              
        bin auto[132:135]                                   4          1    Covered              
        bin auto[136:139]                                   6          1    Covered              
        bin auto[140:143]                                   4          1    Covered              
        bin auto[144:147]                                   2          1    Covered              
        bin auto[148:151]                                   4          1    Covered              
        bin auto[152:155]                                   6          1    Covered              
        bin auto[156:159]                                   4          1    Covered              
        bin auto[160:163]                                  10          1    Covered              
        bin auto[164:167]                                   6          1    Covered              
        bin auto[168:171]                                   2          1    Covered              
        bin auto[172:175]                                   4          1    Covered              
        bin auto[176:179]                                   2          1    Covered              
        bin auto[180:183]                                   2          1    Covered              
        bin auto[184:187]                                   2          1    Covered              
        bin auto[188:191]                                   2          1    Covered              
        bin auto[192:195]                                   6          1    Covered              
        bin auto[196:199]                                   2          1    Covered              
        bin auto[200:203]                                   2          1    Covered              
        bin auto[204:207]                                   0          1    ZERO                 
        bin auto[208:211]                                   2          1    Covered              
        bin auto[212:215]                                   2          1    Covered              
        bin auto[216:219]                                   0          1    ZERO                 
        bin auto[220:223]                                   2          1    Covered              
        bin auto[224:227]                                   8          1    Covered              
        bin auto[228:231]                                   6          1    Covered              
        bin auto[232:235]                                   6          1    Covered              
        bin auto[236:239]                                   2          1    Covered              
        bin auto[240:243]                                   2          1    Covered              
        bin auto[244:247]                                   4          1    Covered              
        bin auto[248:251]                                   8          1    Covered              
        bin auto[252:255]                                   4          1    Covered              
    Coverpoint rgb_cg::iPixelEn_cp                     100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                       120          1    Covered              
        bin auto[1]                                       100          1    Covered              
    Coverpoint rgb_cg::iValid_cp                       100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                       132          1    Covered              
        bin auto[1]                                        88          1    Covered              
    Coverpoint rgb_cg::iEof_cp                         100.0%        100    Covered              
        covered/total bins:                                 2          2                      
        missing/total bins:                                 0          2                      
        % Hit:                                         100.0%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0]                                       114          1    Covered              
        bin auto[1]                                       106          1    Covered              
    Coverpoint rgb_cg::iX_cp                            85.9%        100    Uncovered            
        covered/total bins:                                55         64                      
        missing/total bins:                                 9         64                      
        % Hit:                                          85.9%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:31]                                      4          1    Covered              
        bin auto[32:63]                                     2          1    Covered              
        bin auto[64:95]                                     6          1    Covered              
        bin auto[96:127]                                   10          1    Covered              
        bin auto[128:159]                                   8          1    Covered              
        bin auto[160:191]                                   0          1    ZERO                 
        bin auto[192:223]                                   2          1    Covered              
        bin auto[224:255]                                   4          1    Covered              
        bin auto[256:287]                                   2          1    Covered              
        bin auto[288:319]                                   8          1    Covered              
        bin auto[320:351]                                   6          1    Covered              
        bin auto[352:383]                                   4          1    Covered              
        bin auto[384:415]                                   0          1    ZERO                 
        bin auto[416:447]                                   2          1    Covered              
        bin auto[448:479]                                   4          1    Covered              
        bin auto[480:511]                                   0          1    ZERO                 
        bin auto[512:543]                                   4          1    Covered              
        bin auto[544:575]                                   6          1    Covered              
        bin auto[576:607]                                   2          1    Covered              
        bin auto[608:639]                                   8          1    Covered              
        bin auto[640:671]                                   2          1    Covered              
        bin auto[672:703]                                   2          1    Covered              
        bin auto[704:735]                                   4          1    Covered              
        bin auto[736:767]                                   2          1    Covered              
        bin auto[768:799]                                   2          1    Covered              
        bin auto[800:831]                                   6          1    Covered              
        bin auto[832:863]                                   0          1    ZERO                 
        bin auto[864:895]                                   2          1    Covered              
        bin auto[896:927]                                   2          1    Covered              
        bin auto[928:959]                                   2          1    Covered              
        bin auto[960:991]                                   4          1    Covered              
        bin auto[992:1023]                                  4          1    Covered              
        bin auto[1024:1055]                                 4          1    Covered              
        bin auto[1056:1087]                                 4          1    Covered              
        bin auto[1088:1119]                                 4          1    Covered              
        bin auto[1120:1151]                                 0          1    ZERO                 
        bin auto[1152:1183]                                 6          1    Covered              
        bin auto[1184:1215]                                 6          1    Covered              
        bin auto[1216:1247]                                 8          1    Covered              
        bin auto[1248:1279]                                 4          1    Covered              
        bin auto[1280:1311]                                 6          1    Covered              
        bin auto[1312:1343]                                 0          1    ZERO                 
        bin auto[1344:1375]                                 0          1    ZERO                 
        bin auto[1376:1407]                                 4          1    Covered              
        bin auto[1408:1439]                                 6          1    Covered              
        bin auto[1440:1471]                                 0          1    ZERO                 
        bin auto[1472:1503]                                 2          1    Covered              
        bin auto[1504:1535]                                 2          1    Covered              
        bin auto[1536:1567]                                 4          1    Covered              
        bin auto[1568:1599]                                 2          1    Covered              
        bin auto[1600:1631]                                 2          1    Covered              
        bin auto[1632:1663]                                 0          1    ZERO                 
        bin auto[1664:1695]                                 4          1    Covered              
        bin auto[1696:1727]                                 2          1    Covered              
        bin auto[1728:1759]                                 4          1    Covered              
        bin auto[1760:1791]                                 6          1    Covered              
        bin auto[1792:1823]                                 2          1    Covered              
        bin auto[1824:1855]                                 4          1    Covered              
        bin auto[1856:1887]                                 2          1    Covered              
        bin auto[1888:1919]                                 2          1    Covered              
        bin auto[1920:1951]                                 2          1    Covered              
        bin auto[1952:1983]                                 2          1    Covered              
        bin auto[1984:2015]                                 8          1    Covered              
        bin auto[2016:2047]                                 4          1    Covered              
    Coverpoint rgb_cg::iY_cp                            85.9%        100    Uncovered            
        covered/total bins:                                55         64                      
        missing/total bins:                                 9         64                      
        % Hit:                                          85.9%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin auto[0:31]                                      2          1    Covered              
        bin auto[32:63]                                     2          1    Covered              
        bin auto[64:95]                                     6          1    Covered              
        bin auto[96:127]                                    6          1    Covered              
        bin auto[128:159]                                   2          1    Covered              
        bin auto[160:191]                                   4          1    Covered              
        bin auto[192:223]                                   4          1    Covered              
        bin auto[224:255]                                   6          1    Covered              
        bin auto[256:287]                                   6          1    Covered              
        bin auto[288:319]                                   4          1    Covered              
        bin auto[320:351]                                   2          1    Covered              
        bin auto[352:383]                                   8          1    Covered              
        bin auto[384:415]                                   0          1    ZERO                 
        bin auto[416:447]                                   2          1    Covered              
        bin auto[448:479]                                   6          1    Covered              
        bin auto[480:511]                                   6          1    Covered              
        bin auto[512:543]                                   6          1    Covered              
        bin auto[544:575]                                   4          1    Covered              
        bin auto[576:607]                                   2          1    Covered              
        bin auto[608:639]                                   0          1    ZERO                 
        bin auto[640:671]                                   4          1    Covered              
        bin auto[672:703]                                   4          1    Covered              
        bin auto[704:735]                                   2          1    Covered              
        bin auto[736:767]                                   4          1    Covered              
        bin auto[768:799]                                   6          1    Covered              
        bin auto[800:831]                                   4          1    Covered              
        bin auto[832:863]                                   4          1    Covered              
        bin auto[864:895]                                   4          1    Covered              
        bin auto[896:927]                                   4          1    Covered              
        bin auto[928:959]                                   2          1    Covered              
        bin auto[960:991]                                   4          1    Covered              
        bin auto[992:1023]                                  6          1    Covered              
        bin auto[1024:1055]                                 0          1    ZERO                 
        bin auto[1056:1087]                                 2          1    Covered              
        bin auto[1088:1119]                                 2          1    Covered              
        bin auto[1120:1151]                                 4          1    Covered              
        bin auto[1152:1183]                                 2          1    Covered              
        bin auto[1184:1215]                                 4          1    Covered              
        bin auto[1216:1247]                                 6          1    Covered              
        bin auto[1248:1279]                                 4          1    Covered              
        bin auto[1280:1311]                                 6          1    Covered              
        bin auto[1312:1343]                                 2          1    Covered              
        bin auto[1344:1375]                                 4          1    Covered              
        bin auto[1376:1407]                                 0          1    ZERO                 
        bin auto[1408:1439]                                 4          1    Covered              
        bin auto[1440:1471]                                 0          1    ZERO                 
        bin auto[1472:1503]                                 4          1    Covered              
        bin auto[1504:1535]                                 2          1    Covered              
        bin auto[1536:1567]                                 4          1    Covered              
        bin auto[1568:1599]                                 8          1    Covered              
        bin auto[1600:1631]                                 6          1    Covered              
        bin auto[1632:1663]                                 2          1    Covered              
        bin auto[1664:1695]                                 2          1    Covered              
        bin auto[1696:1727]                                 0          1    ZERO                 
        bin auto[1728:1759]                                 4          1    Covered              
        bin auto[1760:1791]                                 6          1    Covered              
        bin auto[1792:1823]                                 4          1    Covered              
        bin auto[1824:1855]                                 2          1    Covered              
        bin auto[1856:1887]                                 0          1    ZERO                 
        bin auto[1888:1919]                                 0          1    ZERO                 
        bin auto[1920:1951]                                 4          1    Covered              
        bin auto[1952:1983]                                 0          1    ZERO                 
        bin auto[1984:2015]                                 4          1    Covered              
        bin auto[2016:2047]                                 2          1    Covered              
    Cross rgb_cg::#cross__0#                            54.6%        100    Uncovered            
        covered/total bins:                                70        128                      
        missing/total bins:                                58        128                      
        % Hit:                                          54.6%        100                      
        type_option.weight=1
        type_option.goal=100
        type_option.comment=
        bin <auto[0:3],auto[0]>                             4          1    Covered              
        bin <auto[8:11],auto[0]>                            6          1    Covered              
        bin <auto[16:19],auto[0]>                           2          1    Covered              
        bin <auto[24:27],auto[0]>                           6          1    Covered              
        bin <auto[28:31],auto[0]>                           2          1    Covered              
        bin <auto[32:35],auto[0]>                           2          1    Covered              
        bin <auto[40:43],auto[0]>                           2          1    Covered              
        bin <auto[44:47],auto[0]>                           4          1    Covered              
        bin <auto[48:51],auto[0]>                           2          1    Covered              
        bin <auto[52:55],auto[0]>                           4          1    Covered              
        bin <auto[56:59],auto[0]>                           2          1    Covered              
        bin <auto[72:75],auto[0]>                           2          1    Covered              
        bin <auto[80:83],auto[0]>                           4          1    Covered              
        bin <auto[88:91],auto[0]>                           2          1    Covered              
        bin <auto[108:111],auto[0]>                         2          1    Covered              
        bin <auto[112:115],auto[0]>                         2          1    Covered              
        bin <auto[120:123],auto[0]>                         2          1    Covered              
        bin <auto[128:131],auto[0]>                         2          1    Covered              
        bin <auto[132:135],auto[0]>                         2          1    Covered              
        bin <auto[144:147],auto[0]>                         6          1    Covered              
        bin <auto[152:155],auto[0]>                         4          1    Covered              
        bin <auto[156:159],auto[0]>                         4          1    Covered              
        bin <auto[172:175],auto[0]>                         2          1    Covered              
        bin <auto[180:183],auto[0]>                         6          1    Covered              
        bin <auto[184:187],auto[0]>                         2          1    Covered              
        bin <auto[188:191],auto[0]>                         4          1    Covered              
        bin <auto[192:195],auto[0]>                         4          1    Covered              
        bin <auto[196:199],auto[0]>                         4          1    Covered              
        bin <auto[200:203],auto[0]>                         2          1    Covered              
        bin <auto[204:207],auto[0]>                         2          1    Covered              
        bin <auto[208:211],auto[0]>                         2          1    Covered              
        bin <auto[212:215],auto[0]>                         6          1    Covered              
        bin <auto[216:219],auto[0]>                         2          1    Covered              
        bin <auto[220:223],auto[0]>                         2          1    Covered              
        bin <auto[224:227],auto[0]>                         2          1    Covered              
        bin <auto[228:231],auto[0]>                         2          1    Covered              
        bin <auto[232:235],auto[0]>                         4          1    Covered              
        bin <auto[16:19],auto[1]>                           2          1    Covered              
        bin <auto[28:31],auto[1]>                           6          1    Covered              
        bin <auto[36:39],auto[1]>                           4          1    Covered              
        bin <auto[40:43],auto[1]>                           4          1    Covered              
        bin <auto[52:55],auto[1]>                           4          1    Covered              
        bin <auto[60:63],auto[1]>                           2          1    Covered              
        bin <auto[64:67],auto[1]>                           2          1    Covered              
        bin <auto[72:75],auto[1]>                           2          1    Covered              
        bin <auto[80:83],auto[1]>                           2          1    Covered              
        bin <auto[84:87],auto[1]>                           2          1    Covered              
        bin <auto[92:95],auto[1]>                           8          1    Covered              
        bin <auto[96:99],auto[1]>                           2          1    Covered              
        bin <auto[124:127],auto[1]>                         2          1    Covered              
        bin <auto[128:131],auto[1]>                         4          1    Covered              
        bin <auto[132:135],auto[1]>                         4          1    Covered              
        bin <auto[140:143],auto[1]>                         2          1    Covered              
        bin <auto[144:147],auto[1]>                         2          1    Covered              
        bin <auto[156:159],auto[1]>                         2          1    Covered              
        bin <auto[164:167],auto[1]>                         2          1    Covered              
        bin <auto[168:171],auto[1]>                         2          1    Covered              
        bin <auto[172:175],auto[1]>                         2          1    Covered              
        bin <auto[176:179],auto[1]>                         6          1    Covered              
        bin <auto[184:187],auto[1]>                         2          1    Covered              
        bin <auto[188:191],auto[1]>                         2          1    Covered              
        bin <auto[200:203],auto[1]>                         2          1    Covered              
        bin <auto[204:207],auto[1]>                         2          1    Covered              
        bin <auto[212:215],auto[1]>                         2          1    Covered              
        bin <auto[220:223],auto[1]>                         6          1    Covered              
        bin <auto[224:227],auto[1]>                         2          1    Covered              
        bin <auto[228:231],auto[1]>                         4          1    Covered              
        bin <auto[240:243],auto[1]>                         2          1    Covered              
        bin <auto[244:247],auto[1]>                        10          1    Covered              
        bin <auto[248:251],auto[1]>                         4          1    Covered              
        bin <auto[4:7],auto[0]>                             0          1    ZERO                 
        bin <auto[12:15],auto[0]>                           0          1    ZERO                 
        bin <auto[20:23],auto[0]>                           0          1    ZERO                 
        bin <auto[36:39],auto[0]>                           0          1    ZERO                 
        bin <auto[60:63],auto[0]>                           0          1    ZERO                 
        bin <auto[64:67],auto[0]>                           0          1    ZERO                 
        bin <auto[68:71],auto[0]>                           0          1    ZERO                 
        bin <auto[76:79],auto[0]>                           0          1    ZERO                 
        bin <auto[84:87],auto[0]>                           0          1    ZERO                 
        bin <auto[92:95],auto[0]>                           0          1    ZERO                 
        bin <auto[96:99],auto[0]>                           0          1    ZERO                 
        bin <auto[100:103],auto[0]>                         0          1    ZERO                 
        bin <auto[104:107],auto[0]>                         0          1    ZERO                 
        bin <auto[116:119],auto[0]>                         0          1    ZERO                 
        bin <auto[124:127],auto[0]>                         0          1    ZERO                 
        bin <auto[136:139],auto[0]>                         0          1    ZERO                 
        bin <auto[140:143],auto[0]>                         0          1    ZERO                 
        bin <auto[148:151],auto[0]>                         0          1    ZERO                 
        bin <auto[160:163],auto[0]>                         0          1    ZERO                 
        bin <auto[164:167],auto[0]>                         0          1    ZERO                 
        bin <auto[168:171],auto[0]>                         0          1    ZERO                 
        bin <auto[176:179],auto[0]>                         0          1    ZERO                 
        bin <auto[236:239],auto[0]>                         0          1    ZERO                 
        bin <auto[240:243],auto[0]>                         0          1    ZERO                 
        bin <auto[244:247],auto[0]>                         0          1    ZERO                 
        bin <auto[248:251],auto[0]>                         0          1    ZERO                 
        bin <auto[252:255],auto[0]>                         0          1    ZERO                 
        bin <auto[0:3],auto[1]>                             0          1    ZERO                 
        bin <auto[4:7],auto[1]>                             0          1    ZERO                 
        bin <auto[8:11],auto[1]>                            0          1    ZERO                 
        bin <auto[12:15],auto[1]>                           0          1    ZERO                 
        bin <auto[20:23],auto[1]>                           0          1    ZERO                 
        bin <auto[24:27],auto[1]>                           0          1    ZERO                 
        bin <auto[32:35],auto[1]>                           0          1    ZERO                 
        bin <auto[44:47],auto[1]>                           0          1    ZERO                 
        bin <auto[48:51],auto[1]>                           0          1    ZERO                 
        bin <auto[56:59],auto[1]>                           0          1    ZERO                 
        bin <auto[68:71],auto[1]>                           0          1    ZERO                 
        bin <auto[76:79],auto[1]>                           0          1    ZERO                 
        bin <auto[88:91],auto[1]>                           0          1    ZERO                 
        bin <auto[100:103],auto[1]>                         0          1    ZERO                 
        bin <auto[104:107],auto[1]>                         0          1    ZERO                 
        bin <auto[108:111],auto[1]>                         0          1    ZERO                 
        bin <auto[112:115],auto[1]>                         0          1    ZERO                 
        bin <auto[116:119],auto[1]>                         0          1    ZERO                 
        bin <auto[120:123],auto[1]>                         0          1    ZERO                 
        bin <auto[136:139],auto[1]>                         0          1    ZERO                 
        bin <auto[148:151],auto[1]>                         0          1    ZERO                 
        bin <auto[152:155],auto[1]>                         0          1    ZERO                 
        bin <auto[160:163],auto[1]>                         0          1    ZERO                 
        bin <auto[180:183],auto[1]>                         0          1    ZERO                 
        bin <auto[192:195],auto[1]>                         0          1    ZERO                 
        bin <auto[196:199],auto[1]>                         0          1    ZERO                 
        bin <auto[208:211],auto[1]>                         0          1    ZERO                 
        bin <auto[216:219],auto[1]>                         0          1    ZERO                 
        bin <auto[232:235],auto[1]>                         0          1    ZERO                 
        bin <auto[236:239],auto[1]>                         0          1    ZERO                 
        bin <auto[252:255],auto[1]>                         0          1    ZERO                 
 CLASS rgb_fc_subscriber

TOTAL COVERGROUP COVERAGE: 28.7%  COVERGROUP TYPES: 3

ASSERTION RESULTS:
-------------------------------------------------------
Name                 File(Line)           Failure Pass 
                                          Count   Count 
-------------------------------------------------------
work.socTest_pkg::random_sequence_r2/body/random_loop/immed__188
                     ../modules/top.sv(188)       0     1
work.socTest_pkg::rgb_test/build_phase/#ublk#215236535#1157/immed__1160
                     ../modules/top.sv(1160)       0     1

Total Coverage By Design Unit (filtered view): 24.7%

