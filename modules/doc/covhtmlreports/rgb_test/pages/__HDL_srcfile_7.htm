
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-w>library</q-w> ieee;
<a name="2"><q-n>     2  </q-n></a><q-w>use</q-w> ieee.std_logic_1164.<q-w>all</q-w>;
<a name="3"><q-n>     3  </q-n></a><q-w>use</q-w> ieee.numeric_std.<q-w>all</q-w>;
<a name="4"><q-n>     4  </q-n></a><q-w>use</q-w> work.constantspackage.<q-w>all</q-w>;
<a name="5"><q-n>     5  </q-n></a><q-w>use</q-w> work.vpfRecords.<q-w>all</q-w>;
<a name="6"><q-n>     6  </q-n></a><q-w>use</q-w> work.portspackage.<q-w>all</q-w>;
<a name="7"><q-n>     7  </q-n></a><q-w>entity</q-w> RawToRgb <q-w>is</q-w>
<a name="8"><q-n>     8  </q-n></a><q-w>port</q-w> (
<a name="9"><q-n>     9  </q-n></a>    clk            : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="10"><q-n>     10  </q-n></a>    rst_l          : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="11"><q-n>     11  </q-n></a>    iTpData        : <q-a>in</q-w> rTp;
<a name="12"><q-n>     12  </q-n></a>    oRgbSet        : <q-a>out</q-w> rRgb);
<a name="13"><q-n>     13  </q-n></a><q-w>end</q-w> <q-w>entity</q-w>;
<a name="14"><q-n>     14  </q-n></a><q-w>architecture</q-w> arch <q-w>of</q-w> RawToRgb <q-w>is</q-w>
<a name="15"><q-n>     15  </q-n></a>    <q-w>signal</q-w> rgb           : rawRgb;
<a name="16"><q-n>     16  </q-n></a>    <q-w>signal</q-w> tpd1          : uTp;
<a name="17"><q-n>     17  </q-n></a>    <q-w>signal</q-w> tpd2          : uTp;
<a name="18"><q-n>     18  </q-n></a>    <q-w>signal</q-w> r1Valid       : <q-t>std_logic</q-w> :='0';
<a name="19"><q-n>     19  </q-n></a>    <q-w>signal</q-w> r2Valid       : <q-t>std_logic</q-w> :='0';
<a name="20"><q-n>     20  </q-n></a>    <q-w>signal</q-w> d1TpData      : rTp;
<a name="21"><q-n>     21  </q-n></a>    <q-w>signal</q-w> d2TpData      : rTp;
<a name="22"><q-n>     22  </q-n></a><q-w>begin</q-w>
<a name="23"><q-n>     23  </q-n></a>validSyncP: <q-w>process</q-w>(clk) <q-w>begin</q-w>
<a name="24"><q-n>     24  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="25"><q-n>     25  </q-n></a>        r1Valid       &lt;= iTpData.valid;
<a name="26"><q-n>     26  </q-n></a>        r2Valid       &lt;= r1Valid;
<a name="27"><q-n>     27  </q-n></a>        oRgbSet.valid &lt;= r2Valid;
<a name="28"><q-n>     28  </q-n></a>        d1TpData      &lt;= iTpData;
<a name="29"><q-n>     29  </q-n></a>        d2TpData      &lt;= d1TpData;
<a name="30"><q-n>     30  </q-n></a>        oRgbSet.pEof  &lt;= d2TpData.pEof;
<a name="31"><q-n>     31  </q-n></a>        oRgbSet.pSof  &lt;= d2TpData.pSof;
<a name="32"><q-n>     32  </q-n></a>        oRgbSet.cord  &lt;= d2TpData.cord;
<a name="33"><q-n>     33  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="34"><q-n>     34  </q-n></a><q-w>end</q-w> <q-w>process</q-w> validSyncP;
<a name="35"><q-n>     35  </q-n></a>syncDataP: <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="36"><q-n>     36  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="37"><q-n>     37  </q-n></a>        <q-w>if</q-w> rst_l = '0' <q-w>then</q-w>
<a name="38"><q-n>     38  </q-n></a>            tpd1.tp3  &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="39"><q-n>     39  </q-n></a>            tpd2.tp3  &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="40"><q-n>     40  </q-n></a>            tpd1.tp2  &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="41"><q-n>     41  </q-n></a>            tpd2.tp2  &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="42"><q-n>     42  </q-n></a>            tpd1.tp1  &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="43"><q-n>     43  </q-n></a>            tpd2.tp1  &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="44"><q-n>     44  </q-n></a>            <q-w>else</q-w>
<a name="45"><q-n>     45  </q-n></a>            tpd1.tp1  &lt;=<q-t>unsigned</q-w>(iTpData.taps.tp1);
<a name="46"><q-n>     46  </q-n></a>            tpd1.tp2  &lt;=<q-t>unsigned</q-w>(iTpData.taps.tp2);
<a name="47"><q-n>     47  </q-n></a>            tpd1.tp3  &lt;=<q-t>unsigned</q-w>(iTpData.taps.tp3);
<a name="48"><q-n>     48  </q-n></a>            tpd2.tp1  &lt;=tpd1.tp1;
<a name="49"><q-n>     49  </q-n></a>            tpd2.tp2  &lt;=tpd1.tp2;
<a name="50"><q-n>     50  </q-n></a>            tpd2.tp3  &lt;=tpd1.tp3;
<a name="51"><q-n>     51  </q-n></a>            <q-w>end</q-w> <q-w>if</q-w>;
<a name="52"><q-n>     52  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="53"><q-n>     53  </q-n></a><q-w>end</q-w> <q-w>process</q-w> syncDataP;
<a name="54"><q-n>     54  </q-n></a>rawToRgbP: <q-w>process</q-w> (clk)
<a name="55"><q-n>     55  </q-n></a>    <q-w>variable</q-w> loc_addr : <q-t>std_logic_vector</q-w>(1 <q-w>downto</q-w> 0);
<a name="56"><q-n>     56  </q-n></a>    <q-w>begin</q-w>
<a name="57"><q-n>     57  </q-n></a>        <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="58"><q-n>     58  </q-n></a>        <q-w>if</q-w> rst_l = '0' <q-w>then</q-w>
<a name="59"><q-n>     59  </q-n></a>            rgb.red   &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="60"><q-n>     60  </q-n></a>            rgb.green &lt;=(<q-w>others</q-w> =&gt; '0');
<a name="61"><q-n>     61  </q-n></a>            rgb.blue  &lt;=(<q-w>others</q-w> =&gt; '0'); 
<a name="62"><q-n>     62  </q-n></a>        <q-w>else</q-w>
<a name="63"><q-n>     63  </q-n></a>        loc_addr := iTpData.cord.y(0) &amp; iTpData.cord.x(0);
<a name="64"><q-n>     64  </q-n></a>        <q-w>case</q-w> loc_addr <q-w>IS</q-w>
<a name="65"><q-n>     65  </q-n></a>            <q-w>when</q-w> b<q-l>"11"</q-l> =&gt; 
<a name="66"><q-n>     66  </q-n></a>                <q-w>if</q-w> (iTpData.cord.y(11 <q-w>downto</q-w> 0) = x<q-l>"001"</q-l>) <q-w>then</q-w>
<a name="67"><q-n>     67  </q-n></a>                    rgb.red   &lt;= tpd1.tp2;
<a name="68"><q-n>     68  </q-n></a>                    rgb.green &lt;= '0' &amp; (tpd1.tp3 + <q-t>unsigned</q-w>(iTpData.taps.tp2));
<a name="69"><q-n>     69  </q-n></a>                    rgb.blue  &lt;= <q-t>unsigned</q-w>(iTpData.taps.tp3);
<a name="70"><q-n>     70  </q-n></a>                <q-w>else</q-w>          
<a name="71"><q-n>     71  </q-n></a>                    rgb.red   &lt;= tpd1.tp2;
<a name="72"><q-n>     72  </q-n></a>                    rgb.green &lt;= '0' &amp; (<q-t>unsigned</q-w>(iTpData.taps.tp2) + tpd1.tp1);
<a name="73"><q-n>     73  </q-n></a>                    rgb.blue  &lt;= <q-t>unsigned</q-w>(iTpData.taps.tp1);
<a name="74"><q-n>     74  </q-n></a>                <q-w>end</q-w> <q-w>if</q-w>;
<a name="75"><q-n>     75  </q-n></a>            <q-w>when</q-w> b<q-l>"10"</q-l> =&gt; 
<a name="76"><q-n>     76  </q-n></a>                <q-w>if</q-w> (iTpData.cord.y(11 <q-w>downto</q-w> 0) = x<q-l>"001"</q-l>) <q-w>then</q-w>
<a name="77"><q-n>     77  </q-n></a>                    <q-w>if</q-w> (iTpData.cord.x(11 <q-w>downto</q-w> 0) = x<q-l>"000"</q-l>) <q-w>then</q-w>
<a name="78"><q-n>     78  </q-n></a>                        rgb.red    &lt;= tpd2.tp3;
<a name="79"><q-n>     79  </q-n></a>                        rgb.green  &lt;= tpd2.tp2 &amp; '0';
<a name="80"><q-n>     80  </q-n></a>                        rgb.blue   &lt;= tpd1.tp2;
<a name="81"><q-n>     81  </q-n></a>                    <q-w>else</q-w>
<a name="82"><q-n>     82  </q-n></a>                        rgb.red    &lt;= <q-t>unsigned</q-w>(iTpData.taps.tp2);
<a name="83"><q-n>     83  </q-n></a>                        rgb.green  &lt;= '0' &amp; (tpd1.tp2 + <q-t>unsigned</q-w>(iTpData.taps.tp3));
<a name="84"><q-n>     84  </q-n></a>                        rgb.blue   &lt;= tpd1.tp3;    
<a name="85"><q-n>     85  </q-n></a>                    <q-w>end</q-w> <q-w>if</q-w>;
<a name="86"><q-n>     86  </q-n></a>                <q-w>else</q-w>
<a name="87"><q-n>     87  </q-n></a>                    <q-w>if</q-w> (iTpData.cord.x(11 <q-w>downto</q-w> 0) = x<q-l>"000"</q-l>) <q-w>then</q-w>
<a name="88"><q-n>     88  </q-n></a>                        rgb.red    &lt;= tpd2.tp1;
<a name="89"><q-n>     89  </q-n></a>                        rgb.green  &lt;= tpd1.tp1 &amp; '0';
<a name="90"><q-n>     90  </q-n></a>                        rgb.blue   &lt;= tpd1.tp2;
<a name="91"><q-n>     91  </q-n></a>                    <q-w>else</q-w>
<a name="92"><q-n>     92  </q-n></a>                        rgb.red    &lt;= <q-t>unsigned</q-w>(iTpData.taps.tp2);
<a name="93"><q-n>     93  </q-n></a>                        rgb.green  &lt;= '0' &amp; (tpd1.tp2 + <q-t>unsigned</q-w>(iTpData.taps.tp1));
<a name="94"><q-n>     94  </q-n></a>                        rgb.blue   &lt;= tpd1.tp1;    
<a name="95"><q-n>     95  </q-n></a>                    <q-w>end</q-w> <q-w>if</q-w>;
<a name="96"><q-n>     96  </q-n></a>                <q-w>end</q-w> <q-w>if</q-w>;
<a name="97"><q-n>     97  </q-n></a>            <q-w>when</q-w> b<q-l>"01"</q-l> =&gt; 
<a name="98"><q-n>     98  </q-n></a>                rgb.red      &lt;= tpd1.tp1;
<a name="99"><q-n>     99  </q-n></a>                rgb.green    &lt;= '0' &amp; (<q-t>unsigned</q-w>(iTpData.taps.tp1) + tpd1.tp2);
<a name="100"><q-n>     100  </q-n></a>                rgb.blue     &lt;= <q-t>unsigned</q-w>(iTpData.taps.tp2);    
<a name="101"><q-n>     101  </q-n></a>            <q-w>when</q-w> b<q-l>"00"</q-l> =&gt; 
<a name="102"><q-n>     102  </q-n></a>                <q-w>if</q-w> (iTpData.cord.x(11 <q-w>downto</q-w> 0) = x<q-l>"000"</q-l>) <q-w>then</q-w>
<a name="103"><q-n>     103  </q-n></a>                    rgb.red     &lt;= tpd2.tp2;
<a name="104"><q-n>     104  </q-n></a>                    rgb.green   &lt;= tpd2.tp1 &amp; '0';
<a name="105"><q-n>     105  </q-n></a>                    rgb.blue    &lt;= tpd1.tp1;
<a name="106"><q-n>     106  </q-n></a>                <q-w>else</q-w>
<a name="107"><q-n>     107  </q-n></a>                    rgb.red     &lt;= <q-t>unsigned</q-w>(iTpData.taps.tp1);
<a name="108"><q-n>     108  </q-n></a>                    rgb.green   &lt;= '0' &amp; (tpd1.tp1 + <q-t>unsigned</q-w>(iTpData.taps.tp2));
<a name="109"><q-n>     109  </q-n></a>                    rgb.blue    &lt;= tpd1.tp2;    
<a name="110"><q-n>     110  </q-n></a>                <q-w>end</q-w> <q-w>if</q-w>;
<a name="111"><q-n>     111  </q-n></a>            <q-w>when</q-w> <q-w>others</q-w> =&gt; 
<a name="112"><q-n>     112  </q-n></a>                rgb.red     &lt;= rgb.red;
<a name="113"><q-n>     113  </q-n></a>                rgb.green   &lt;= rgb.green;
<a name="114"><q-n>     114  </q-n></a>                rgb.blue    &lt;= rgb.blue;
<a name="115"><q-n>     115  </q-n></a>        <q-w>end</q-w> <q-w>case</q-w>;
<a name="116"><q-n>     116  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="117"><q-n>     117  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>; 
<a name="118"><q-n>     118  </q-n></a><q-w>end</q-w> <q-w>process</q-w> rawToRgbP;
<a name="119"><q-n>     119  </q-n></a>    oRgbSet.red    &lt;= <q-t>std_logic_vector</q-w>(rgb.red(11 <q-w>downto</q-w> 4));
<a name="120"><q-n>     120  </q-n></a>    oRgbSet.green  &lt;= <q-t>std_logic_vector</q-w>(rgb.green(12 <q-w>downto</q-w> 5));
<a name="121"><q-n>     121  </q-n></a>    oRgbSet.blue   &lt;= <q-t>std_logic_vector</q-w>(rgb.blue(11 <q-w>downto</q-w> 4));
<a name="122"><q-n>     122  </q-n></a><q-w>end</q-w> <q-w>architecture</q-w>;</pre>
</tt>

  
</body>
</html>
