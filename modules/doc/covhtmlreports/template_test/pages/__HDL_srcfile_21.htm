
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>--05012019 [05-01-2019]</q-m>
<a name="2"><q-n>     2  </q-n></a><q-w>library</q-w> ieee;
<a name="3"><q-n>     3  </q-n></a><q-w>use</q-w> ieee.std_logic_1164.<q-w>all</q-w>;
<a name="4"><q-n>     4  </q-n></a><q-w>use</q-w> ieee.numeric_std.<q-w>all</q-w>;
<a name="5"><q-n>     5  </q-n></a><q-w>use</q-w> work.constantspackage.<q-w>all</q-w>;
<a name="6"><q-n>     6  </q-n></a><q-w>use</q-w> work.vpfRecords.<q-w>all</q-w>;
<a name="7"><q-n>     7  </q-n></a><q-w>entity</q-w> videoProcess_v1_0_m_axis_mm2s <q-w>is</q-w>
<a name="8"><q-n>     8  </q-n></a><q-w>generic</q-w> (
<a name="9"><q-n>     9  </q-n></a>    s_data_width	                : <q-t>integer</q-w> := 16);
<a name="10"><q-n>     10  </q-n></a><q-w>port</q-w> (
<a name="11"><q-n>     11  </q-n></a>    aclk                            : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="12"><q-n>     12  </q-n></a>    aresetn                         : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="13"><q-n>     13  </q-n></a>    rgb_s_axis_tready               : <q-a>out</q-w> <q-t>std_logic</q-w>;
<a name="14"><q-n>     14  </q-n></a>    rgb_s_axis_tvalid               : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="15"><q-n>     15  </q-n></a>    rgb_s_axis_tuser                : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="16"><q-n>     16  </q-n></a>    rgb_s_axis_tlast                : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="17"><q-n>     17  </q-n></a>    rgb_s_axis_tdata                : <q-a>in</q-w> <q-t>std_logic_vector</q-w>(s_data_width-1  <q-w>downto</q-w> 0);
<a name="18"><q-n>     18  </q-n></a>    m_axis_mm2s_tkeep               : <q-a>out</q-w> <q-t>std_logic_vector</q-w>(2 <q-w>downto</q-w> 0);
<a name="19"><q-n>     19  </q-n></a>    m_axis_mm2s_tstrb               : <q-a>out</q-w> <q-t>std_logic_vector</q-w>(2 <q-w>downto</q-w> 0);
<a name="20"><q-n>     20  </q-n></a>    m_axis_mm2s_tid                 : <q-a>out</q-w> <q-t>std_logic_vector</q-w>(0 <q-w>downto</q-w> 0);
<a name="21"><q-n>     21  </q-n></a>    m_axis_mm2s_tdest               : <q-a>out</q-w> <q-t>std_logic_vector</q-w>(0 <q-w>downto</q-w> 0);  
<a name="22"><q-n>     22  </q-n></a>    m_axis_mm2s_tready              : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="23"><q-n>     23  </q-n></a>    m_axis_mm2s_tvalid              : <q-a>out</q-w> <q-t>std_logic</q-w>;
<a name="24"><q-n>     24  </q-n></a>    m_axis_mm2s_tuser               : <q-a>out</q-w> <q-t>std_logic</q-w>;
<a name="25"><q-n>     25  </q-n></a>    m_axis_mm2s_tlast               : <q-a>out</q-w> <q-t>std_logic</q-w>;
<a name="26"><q-n>     26  </q-n></a>    m_axis_mm2s_tdata               : <q-a>out</q-w> <q-t>std_logic_vector</q-w>(s_data_width-1 <q-w>downto</q-w> 0));
<a name="27"><q-n>     27  </q-n></a><q-w>end</q-w> videoProcess_v1_0_m_axis_mm2s;
<a name="28"><q-n>     28  </q-n></a><q-w>architecture</q-w> arch_imp <q-w>of</q-w> videoProcess_v1_0_m_axis_mm2s <q-w>is</q-w>
<a name="29"><q-n>     29  </q-n></a>    <q-w>type</q-w> pixel_locations <q-w>is</q-w> (video_trans_in_progress,wait_to_go);
<a name="30"><q-n>     30  </q-n></a>    <q-w>signal</q-w> pixel_locations_address  : pixel_locations; 
<a name="31"><q-n>     31  </q-n></a>    <q-w>signal</q-w> axis_tvalid              : <q-t>std_logic</q-w>:= lo;
<a name="32"><q-n>     32  </q-n></a>    <q-w>signal</q-w> axis_tuser               : <q-t>std_logic</q-w>:= lo;
<a name="33"><q-n>     33  </q-n></a>    <q-w>signal</q-w> axis_tlast               : <q-t>std_logic</q-w>:= lo;
<a name="34"><q-n>     34  </q-n></a>    <q-w>signal</q-w> axis_tdata               : <q-t>std_logic_vector</q-w>(s_data_width-1 <q-w>downto</q-w> 0):= (<q-w>others</q-w> =&gt; lo); 
<a name="35"><q-n>     35  </q-n></a>    <q-w>signal</q-w> maxis_mm2s_tdata         : <q-t>std_logic_vector</q-w>(s_data_width-1 <q-w>downto</q-w> 0):= (<q-w>others</q-w> =&gt; lo);
<a name="36"><q-n>     36  </q-n></a>    <q-w>signal</q-w> maxis_mm2s_tuser         : <q-t>std_logic</q-w>:= lo;
<a name="37"><q-n>     37  </q-n></a>    <q-w>signal</q-w> maxis_mm2s_tvalid        : <q-t>std_logic</q-w>:= lo;
<a name="38"><q-n>     38  </q-n></a>    <q-w>signal</q-w> maxis_mmss_tvalid        : <q-t>std_logic</q-w>:= lo;
<a name="39"><q-n>     39  </q-n></a>    <q-w>signal</q-w> mm2s_tready              : <q-t>std_logic</q-w>:= lo;
<a name="40"><q-n>     40  </q-n></a><q-w>begin</q-w>
<a name="41"><q-n>     41  </q-n></a><q-w>process</q-w>(aclk) <q-w>begin</q-w>
<a name="42"><q-n>     42  </q-n></a>    <q-w>if</q-w> rising_edge(aclk) <q-w>then</q-w>
<a name="43"><q-n>     43  </q-n></a>        axis_tvalid &lt;= rgb_s_axis_tvalid;
<a name="44"><q-n>     44  </q-n></a>        mm2s_tready &lt;= m_axis_mm2s_tready;
<a name="45"><q-n>     45  </q-n></a>        axis_tuser  &lt;= rgb_s_axis_tuser;
<a name="46"><q-n>     46  </q-n></a>        axis_tdata  &lt;= rgb_s_axis_tdata(15 <q-w>downto</q-w> 8) &amp; rgb_s_axis_tdata(7 <q-w>downto</q-w> 0);
<a name="47"><q-n>     47  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="48"><q-n>     48  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="49"><q-n>     49  </q-n></a><q-w>process</q-w> (aclk) <q-w>begin</q-w>
<a name="50"><q-n>     50  </q-n></a>    <q-w>if</q-w> (rising_edge (aclk)) <q-w>then</q-w>
<a name="51"><q-n>     51  </q-n></a>        <q-w>if</q-w> (aresetn = lo) <q-w>then</q-w>
<a name="52"><q-n>     52  </q-n></a>            pixel_locations_address &lt;= wait_to_go;
<a name="53"><q-n>     53  </q-n></a>            rgb_s_axis_tready       &lt;=lo;
<a name="54"><q-n>     54  </q-n></a>        <q-w>else</q-w>
<a name="55"><q-n>     55  </q-n></a>        <q-w>case</q-w> (pixel_locations_address) <q-w>is</q-w>
<a name="56"><q-n>     56  </q-n></a>        <q-w>when</q-w> wait_to_go =&gt;
<a name="57"><q-n>     57  </q-n></a>            axis_tlast         &lt;=lo;
<a name="58"><q-n>     58  </q-n></a>            rgb_s_axis_tready  &lt;=hi;<q-m>--initiate</q-m>
<a name="59"><q-n>     59  </q-n></a>            maxis_mm2s_tvalid  &lt;=lo;
<a name="60"><q-n>     60  </q-n></a>            <q-w>if</q-w> (rgb_s_axis_tvalid  = hi)<q-w>then</q-w><q-m>-- initiate response</q-m>
<a name="61"><q-n>     61  </q-n></a>                pixel_locations_address &lt;= video_trans_in_progress;            
<a name="62"><q-n>     62  </q-n></a>            <q-w>else</q-w>
<a name="63"><q-n>     63  </q-n></a>                pixel_locations_address &lt;= wait_to_go;    
<a name="64"><q-n>     64  </q-n></a>            <q-w>end</q-w> <q-w>if</q-w>;        
<a name="65"><q-n>     65  </q-n></a>        <q-w>when</q-w> video_trans_in_progress =&gt;
<a name="66"><q-n>     66  </q-n></a>            maxis_mm2s_tuser   &lt;= axis_tuser;
<a name="67"><q-n>     67  </q-n></a>            maxis_mm2s_tdata   &lt;= axis_tdata;
<a name="68"><q-n>     68  </q-n></a>            <q-w>if</q-w> (rgb_s_axis_tlast = hi)<q-w>then</q-w>
<a name="69"><q-n>     69  </q-n></a>                axis_tlast &lt;=hi;
<a name="70"><q-n>     70  </q-n></a>                maxis_mm2s_tvalid  &lt;=lo;
<a name="71"><q-n>     71  </q-n></a>                pixel_locations_address &lt;= wait_to_go;
<a name="72"><q-n>     72  </q-n></a>            <q-w>else</q-w>
<a name="73"><q-n>     73  </q-n></a>                axis_tlast &lt;=lo;
<a name="74"><q-n>     74  </q-n></a>                maxis_mm2s_tvalid  &lt;=hi;
<a name="75"><q-n>     75  </q-n></a>                pixel_locations_address &lt;= video_trans_in_progress;
<a name="76"><q-n>     76  </q-n></a>            <q-w>end</q-w> <q-w>if</q-w>;
<a name="77"><q-n>     77  </q-n></a>        <q-w>when</q-w> <q-w>others</q-w> =&gt;
<a name="78"><q-n>     78  </q-n></a>            pixel_locations_address &lt;= wait_to_go;
<a name="79"><q-n>     79  </q-n></a>        <q-w>end</q-w> <q-w>case</q-w>;
<a name="80"><q-n>     80  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="81"><q-n>     81  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="82"><q-n>     82  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="83"><q-n>     83  </q-n></a><q-w>process</q-w>(aclk) <q-w>begin</q-w>
<a name="84"><q-n>     84  </q-n></a>    <q-w>if</q-w> rising_edge(aclk) <q-w>then</q-w>
<a name="85"><q-n>     85  </q-n></a>        m_axis_mm2s_tkeep      &lt;= (<q-w>others</q-w> =&gt; hi);
<a name="86"><q-n>     86  </q-n></a>        m_axis_mm2s_tid        &lt;= <q-l>"0"</q-l>;
<a name="87"><q-n>     87  </q-n></a>        m_axis_mm2s_tdest      &lt;= <q-l>"0"</q-l>;
<a name="88"><q-n>     88  </q-n></a>        m_axis_mm2s_tstrb      &lt;= (<q-w>others</q-w> =&gt; hi);
<a name="89"><q-n>     89  </q-n></a>        m_axis_mm2s_tdata      &lt;= maxis_mm2s_tdata;
<a name="90"><q-n>     90  </q-n></a>        m_axis_mm2s_tlast      &lt;= axis_tlast;
<a name="91"><q-n>     91  </q-n></a>        m_axis_mm2s_tuser      &lt;= maxis_mm2s_tuser;
<a name="92"><q-n>     92  </q-n></a>        m_axis_mm2s_tvalid     &lt;= maxis_mm2s_tvalid <q-w>or</q-w> maxis_mmss_tvalid;
<a name="93"><q-n>     93  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="94"><q-n>     94  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="95"><q-n>     95  </q-n></a><q-w>process</q-w>(aclk) <q-w>begin</q-w>
<a name="96"><q-n>     96  </q-n></a>    <q-w>if</q-w> rising_edge(aclk) <q-w>then</q-w>
<a name="97"><q-n>     97  </q-n></a>        maxis_mmss_tvalid  &lt;= maxis_mm2s_tvalid;
<a name="98"><q-n>     98  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="99"><q-n>     99  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;    
<a name="100"><q-n>     100  </q-n></a><q-w>end</q-w> arch_imp;</pre>
</tt>

  
</body>
</html>
