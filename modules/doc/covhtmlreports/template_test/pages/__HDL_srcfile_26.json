var g_sourceLines = [
'',
'library ieee;',
'use ieee.std_logic_1164.all;',
'use ieee.numeric_std.all;',
'use work.constantspackage.all;',
'use work.vpfRecords.all;',
'',
'entity pixelCord is',
'port (',
'    clk            : in std_logic;',
'    iRed           : in std_logic_vector(7 downto 0);',
'    iGreen         : in std_logic_vector(7 downto 0);',
'    iBlue          : in std_logic_vector(7 downto 0);',
'    iValid         : in std_logic;',
'    iPixelEn       : in std_logic;',
'    iEof           : in std_logic;',
'    iX             : in integer;',
'    iY             : in integer;',
'    oRed           : out std_logic_vector(7 downto 0);',
'    oGreen         : out std_logic_vector(7 downto 0);',
'    oBlue          : out std_logic_vector(7 downto 0);',
'    oValid         : out std_logic);',
'end entity;',
'architecture rtl of pixelCord is',
'    signal iCord           : cord;',
'    signal oRgb            : channel;',
'    signal iRgb            : channel;',
'    signal frameSize       : intersectPoint;',
'    signal initCord        : intersectPoint;',
'    signal newCord         : intersectPoint;',
'    signal grid1Cord       : intersectPoint;',
'    signal grid2Cord       : intersectPoint;',
'    signal grid3Cord       : intersectPoint;',
'    signal grid4Cord       : intersectPoint;',
'    signal rgb             : channel;',
'begin',
'    iCord.x         &lt;= iX;',
'    iCord.y         &lt;= iY;',
'    ',
'    iRgb.red         &lt;= iRed;',
'    iRgb.green       &lt;= iGreen;',
'    iRgb.blue        &lt;= iBlue;',
'    iRgb.valid       &lt;= iValid;',
'    ',
'    oRed             &lt;= oRgb.red;',
'    oGreen           &lt;= oRgb.green;',
'    oBlue            &lt;= oRgb.blue;',
'    oValid           &lt;= oRgb.valid;',
'    ',
'    ',
'    initCord.rht   &lt;= initCordValueRht;',
'    initCord.lft   &lt;= initCordValueLft;',
'    initCord.top   &lt;= initCordValueTop;',
'    initCord.bot   &lt;= initCordValueBot;',
'    frameSize.lft  &lt;= frameSizeLft;',
'    frameSize.rht  &lt;= frameSizeRht;',
'    frameSize.top  &lt;= frameSizeTop;',
'    frameSize.bot  &lt;= frameSizeBot;',
'dataOutP: process (clk)begin',
'    if rising_edge(clk) then',
'        oRgb.valid  &lt;= iRgb.valid;',
'        oRgb.red    &lt;= rgb.red;',
'        oRgb.green  &lt;= rgb.green;',
'        oRgb.blue   &lt;= rgb.blue;',
'    end if;',
'end process dataOutP;',
'pixelCordP: process (clk)begin',
'    if rising_edge(clk) then',
'        if (iRgb.valid = hi) then',
'            ------------------------------------',
'            if (iPixelEn = hi) then ',
'                ------------------------------------',
'                --Left Coordinates',
'                ------------------------------------',
'                if (iCord.x &lt;= newCord.lft) then',
'                    if ( iCord.x &gt;= frameSize.lft) then ',
'                        newCord.lft &lt;= iCord.x - 1;',
'                    end if;   ',
'                end if;',
'                ------------------------------------',
'                --Right Coordinates',
'                ------------------------------------',
'                if (iCord.x &gt;= newCord.rht) then',
'                    if ( iCord.x &lt;= frameSize.rht) then ',
'                        newCord.rht &lt;= iCord.x + 1;',
'                    end if;   ',
'                end if;',
'                ------------------------------------',
'                --Top Coordinates',
'                ------------------------------------',
'                if (iCord.y &lt;= newCord.top) then',
'                    if ( iCord.y &gt;= frameSize.top) then ',
'                        newCord.top &lt;= iCord.y - 1;',
'                    end if;   ',
'                end if;',
'                ------------------------------------',
'                --Bottom Coordinates',
'                ------------------------------------',
'                if (iCord.y &gt;= newCord.bot) then',
'                    if ( iCord.y &lt;= frameSize.bot) then ',
'                        newCord.bot &lt;= iCord.y + 1;',
'                    end if;   ',
'                end if;',
'            end if;--iPixelEn',
'            ------------------------------------',
'            -- 4TH FRAME',
'            ------------------------------------',
'            if ((iCord.y = grid4Cord.bot) and ((iCord.x &gt;= grid4Cord.lft) and (iCord.x &lt;= grid4Cord.rht)))then',
'                rgb.red        &lt;= white;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= black;',
'            elsif ((iCord.y = grid4Cord.top) and ((iCord.x &gt;= grid4Cord.lft) and (iCord.x &lt;= grid4Cord.rht)))then',
'                rgb.red        &lt;= white;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= black;',
'            elsif ((iCord.x = grid4Cord.lft) and ((iCord.y &gt;= grid4Cord.top) and (iCord.y &lt;= grid4Cord.bot)))then',
'                rgb.red        &lt;= white;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= black;',
'            elsif ((iCord.x = grid4Cord.rht) and ((iCord.y &gt;= grid4Cord.top) and (iCord.y &lt;= grid4Cord.bot)))then',
'                rgb.red        &lt;= white;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= black;',
'            ------------------------------------',
'           -- 3RD FRAME',
'            ------------------------------------',
'            elsif ((iCord.y = grid3Cord.bot) and ((iCord.x &gt;= grid3Cord.lft) and (iCord.x &lt;= grid3Cord.rht)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= white;',
'                rgb.blue       &lt;= black;',
'            elsif ((iCord.y = grid3Cord.top) and ((iCord.x &gt;= grid3Cord.lft) and (iCord.x &lt;= grid3Cord.rht)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= white;',
'                rgb.blue       &lt;= black;',
'            elsif ((iCord.x = grid3Cord.lft) and ((iCord.y &gt;= grid3Cord.top) and (iCord.y &lt;= grid3Cord.bot)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= white;',
'                rgb.blue       &lt;= black;',
'            elsif ((iCord.x = grid3Cord.rht) and ((iCord.y &gt;= grid3Cord.top) and (iCord.y &lt;= grid3Cord.bot)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= white;',
'                rgb.blue       &lt;= black;',
'            ------------------------------------',
'            -- 2ND FRAME',
'            ------------------------------------',
'            elsif ((iCord.y = grid2Cord.bot) and ((iCord.x &gt;= grid2Cord.lft) and (iCord.x &lt;= grid3Cord.rht)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= white;',
'            elsif ((iCord.y = grid2Cord.top) and ((iCord.x &gt;= grid2Cord.lft) and (iCord.x &lt;= grid3Cord.rht)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= white;',
'            elsif ((iCord.x = grid2Cord.lft) and ((iCord.y &gt;= grid2Cord.top) and (iCord.y &lt;= grid2Cord.bot)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= white;',
'            elsif ((iCord.x = grid3Cord.rht) and ((iCord.y &gt;= grid2Cord.top) and (iCord.y &lt;= grid2Cord.bot)))then',
'                rgb.red        &lt;= black;',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= white;',
'            ------------------------------------',
'            -- 1ST FRAME',
'            ------------------------------------',
'            elsif ((iCord.y = grid1Cord.bot) and ((iCord.x &gt;= grid1Cord.lft) and (iCord.x &lt;= grid1Cord.rht)))then',
'                rgb.red        &lt;= x"80";',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= x"80";',
'            elsif ((iCord.y = grid1Cord.top) and ((iCord.x &gt;= grid1Cord.lft) and (iCord.x &lt;= grid1Cord.rht)))then',
'                rgb.red        &lt;= x"80";',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= x"80";',
'            elsif ((iCord.x = grid1Cord.lft) and ((iCord.y &gt;= grid1Cord.top) and (iCord.y &lt;= grid1Cord.bot)))then',
'                rgb.red        &lt;= x"80";',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= x"80";',
'            elsif ((iCord.x = grid1Cord.rht) and ((iCord.y &gt;= grid1Cord.top) and (iCord.y &lt;= grid1Cord.bot)))then',
'                rgb.red        &lt;= x"80";',
'                rgb.green      &lt;= black;',
'                rgb.blue       &lt;= x"80";',
'            else',
'                rgb.red        &lt;= iRgb.red;',
'                rgb.green      &lt;= iRgb.green;',
'                rgb.blue       &lt;= iRgb.blue;',
'            end if;',
'        end if;--iRgb.valid',
'        if (iEof = hi)then',
'            --RESET COORDINATES TO DEFAULT',
'            newCord.lft       &lt;= initCord.lft;',
'            newCord.rht       &lt;= initCord.rht;',
'            newCord.top       &lt;= initCord.top;',
'            newCord.bot       &lt;= initCord.bot;',
'            -- 1ST FRAME',
'            grid1Cord.lft     &lt;= newCord.lft;',
'            grid1Cord.rht     &lt;= newCord.rht;',
'            grid1Cord.top     &lt;= newCord.top;',
'            grid1Cord.bot     &lt;= newCord.bot;',
'            -- 2ND FRAME',
'            grid2Cord.lft     &lt;= grid1Cord.lft;',
'            grid2Cord.rht     &lt;= grid1Cord.rht;',
'            grid2Cord.top     &lt;= grid1Cord.top;',
'            grid2Cord.bot     &lt;= grid1Cord.bot;',
'            -- 3RD FRAME',
'            grid3Cord.lft     &lt;= grid2Cord.lft;',
'            grid3Cord.rht     &lt;= grid2Cord.rht;',
'            grid3Cord.top     &lt;= grid2Cord.top;',
'            grid3Cord.bot     &lt;= grid2Cord.bot;',
'            -- 4TH FRAME',
'            grid4Cord.lft     &lt;= grid3Cord.lft;',
'            grid4Cord.rht     &lt;= grid3Cord.rht;',
'            grid4Cord.top     &lt;= grid3Cord.top;',
'            grid4Cord.bot     &lt;= grid3Cord.bot;',
'        end if;--iEof',
'    end if;',
'end process pixelCordP;',
'end architecture;'
];
countinueBuildStmtTable(g_sourceLines);
