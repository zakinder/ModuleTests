var g_sourceLines = [
'--02072019 [02-07-2019]',
'library ieee;',
'use ieee.std_logic_1164.all;',
'use ieee.numeric_std.all;',
'use work.constantspackage.all;',
'use work.vpfRecords.all;',
'use work.portspackage.all;',
'entity VFP_v1_0 is',
'    port (',
'    -- d5m input',
'    pixclk                    : in std_logic;',
'    ifval                     : in std_logic;',
'    ilval                     : in std_logic;',
'    idata                     : in std_logic_vector(11 downto 0);',
'    --tx channel',
'    rgb_m_axis_aclk           : in std_logic;',
'    rgb_m_axis_aresetn        : in std_logic;',
'    rgb_m_axis_tready         : in std_logic;',
'    rgb_m_axis_tvalid         : out std_logic;',
'    rgb_m_axis_tlast          : out std_logic;',
'    rgb_m_axis_tuser          : out std_logic;',
'    rgb_m_axis_tdata          : out std_logic_vector(15 downto 0);',
'    --rx channel',
'    rgb_s_axis_aclk           : in std_logic;',
'    rgb_s_axis_aresetn        : in std_logic;',
'    rgb_s_axis_tready         : out std_logic;',
'    rgb_s_axis_tvalid         : in std_logic;',
'    rgb_s_axis_tuser          : in std_logic;',
'    rgb_s_axis_tlast          : in std_logic;',
'    rgb_s_axis_tdata          : in std_logic_vector(15 downto 0);',
'    --destination channel',
'    m_axis_mm2s_aclk          : in std_logic;',
'    m_axis_mm2s_aresetn       : in std_logic;',
'    m_axis_mm2s_tready        : in std_logic;',
'    m_axis_mm2s_tvalid        : out std_logic;',
'    m_axis_mm2s_tuser         : out std_logic;',
'    m_axis_mm2s_tlast         : out std_logic;',
'    m_axis_mm2s_tdata         : out std_logic_vector(15 downto 0);',
'    m_axis_mm2s_tkeep         : out std_logic_vector(2 downto 0);',
'    m_axis_mm2s_tstrb         : out std_logic_vector(2 downto 0);',
'    m_axis_mm2s_tid           : out std_logic_vector(0 downto 0);',
'    m_axis_mm2s_tdest         : out std_logic_vector(0 downto 0);',
'    --video configuration       ',
'    vfpconfig_aclk            : in std_logic;',
'    vfpconfig_aresetn         : in std_logic;',
'    vfpconfig_awaddr          : in std_logic_vector(7 downto 0);',
'    vfpconfig_awprot          : in std_logic_vector(2 downto 0);',
'    vfpconfig_awvalid         : in std_logic;',
'    vfpconfig_awready         : out std_logic;',
'    vfpconfig_wdata           : in std_logic_vector(31 downto 0);',
'    vfpconfig_wstrb           : in std_logic_vector(3 downto 0);',
'    vfpconfig_wvalid          : in std_logic;',
'    vfpconfig_wready          : out std_logic;',
'    vfpconfig_bresp           : out std_logic_vector(1 downto 0);',
'    vfpconfig_bvalid          : out std_logic;',
'    vfpconfig_bready          : in std_logic;',
'    vfpconfig_araddr          : in std_logic_vector(7 downto 0);',
'    vfpconfig_arprot          : in std_logic_vector(2 downto 0);',
'    vfpconfig_arvalid         : in std_logic;',
'    vfpconfig_arready         : out std_logic;',
'    vfpconfig_rdata           : out std_logic_vector(31 downto 0);',
'    vfpconfig_rresp           : out std_logic_vector(1 downto 0);',
'    vfpconfig_rvalid          : out std_logic;',
'    vfpconfig_rready          : in std_logic);',
'end VFP_v1_0;',
'architecture arch_imp of VFP_v1_0 is',
'    constant revision_number           : std_logic_vector(31 downto 0) := x"05062019";',
'    constant C_rgb_m_axis_TDATA_WIDTH  : integer := 16;',
'    constant C_rgb_m_axis_START_COUNT  : integer := 32;',
'    constant C_rgb_s_axis_TDATA_WIDTH  : integer := 16;',
'    constant C_m_axis_mm2s_TDATA_WIDTH : integer := 16;',
'    constant C_m_axis_mm2s_START_COUNT : integer := 32;',
'    constant C_vfpConfig_DATA_WIDTH    : integer := 32;',
'    constant C_vfpConfig_ADDR_WIDTH    : integer := 8;',
'    constant conf_data_width           : integer := 32;',
'    constant conf_addr_width           : integer := 8;',
'    constant i_data_width              : integer := 8;',
'    constant s_data_width              : integer := 16;',
'    constant b_data_width              : integer := 32;',
'    constant i_precision               : integer := 12;',
'    constant i_full_range              : boolean := FALSE;',
'    constant img_width                 : integer := 4096;',
'    constant dataWidth                 : integer := 12;',
'    constant addrWidth                 : integer := 12;',
'    constant adwrWidth                 : integer := 16;',
'    signal rawData                     : rData;',
'    signal rgbSet                      : rRgb;',
'    signal oWrRegs                     : mRegs;',
'    signal iRdRegs                     : mRegs;',
'    signal wrRegs                      : mRegs;',
'    signal rdRegs                      : mRegs;',
'    signal streamData                  : vStreamData;',
'    signal aBusSelect                  : std_logic_vector(vfpconfig_wdata\'range):= (others =&gt; \'0\');',
'begin',
'CameraRawToRgbInst: CameraRawToRgb',
'generic map(',
'    img_width                 =&gt; img_width,',
'    dataWidth                 =&gt; dataWidth,',
'    addrWidth                 =&gt; addrWidth)',
'port map(',
'    m_axis_mm2s_aclk          =&gt; vfpconfig_aclk,',
'    m_axis_mm2s_aresetn       =&gt; vfpconfig_aresetn,',
'    pixclk                    =&gt; pixclk,',
'    ifval                     =&gt; ifval,',
'    ilval                     =&gt; ilval,',
'    idata                     =&gt; idata,',
'    oRgbSet                   =&gt; rgbSet);',
'VideoStreamInst: VideoStream',
'generic map(',
'    revision_number           =&gt; revision_number,',
'    i_data_width              =&gt; i_data_width,',
'    s_data_width              =&gt; s_data_width,',
'    b_data_width              =&gt; b_data_width,',
'    img_width                 =&gt; img_width,',
'    adwrWidth                 =&gt; adwrWidth,',
'    addrWidth                 =&gt; addrWidth)',
'port map(',
'    m_axis_mm2s_aclk          =&gt; m_axis_mm2s_aclk,',
'    m_axis_mm2s_aresetn       =&gt; m_axis_mm2s_aresetn,',
'    iWrRegs                   =&gt; wrRegs,',
'    oRdRegs                   =&gt; rdRegs,',
'    iRgbSet                   =&gt; rgbSet,',
'    oStreamData               =&gt; streamData,',
'    oBusSelect                =&gt; aBusSelect);',
'mm2sInst: videoProcess_v1_0_m_axis_mm2s',
'generic map(',
'    s_data_width         =&gt; s_data_width)',
'port map(',
'    aclk                 =&gt; rgb_s_axis_aclk,',
'    aresetn              =&gt; rgb_s_axis_aresetn,',
'    rgb_s_axis_tready    =&gt; rgb_s_axis_tready,',
'    rgb_s_axis_tvalid    =&gt; rgb_s_axis_tvalid,',
'    rgb_s_axis_tuser     =&gt; rgb_s_axis_tuser,',
'    rgb_s_axis_tlast     =&gt; rgb_s_axis_tlast,',
'    rgb_s_axis_tdata     =&gt; rgb_s_axis_tdata,',
'    m_axis_mm2s_tkeep    =&gt; m_axis_mm2s_tkeep,',
'    m_axis_mm2s_tstrb    =&gt; m_axis_mm2s_tstrb,',
'    m_axis_mm2s_tid      =&gt; m_axis_mm2s_tid,',
'    m_axis_mm2s_tdest    =&gt; m_axis_mm2s_tdest,',
'    m_axis_mm2s_tready   =&gt; m_axis_mm2s_tready,',
'    m_axis_mm2s_tvalid   =&gt; m_axis_mm2s_tvalid,',
'    m_axis_mm2s_tuser    =&gt; m_axis_mm2s_tuser,',
'    m_axis_mm2s_tlast    =&gt; m_axis_mm2s_tlast,    ',
'    m_axis_mm2s_tdata    =&gt; m_axis_mm2s_tdata);',
'AxisExternalInst: AxisExternal',
'generic map(',
'    revision_number           =&gt; revision_number,',
'    C_rgb_m_axis_TDATA_WIDTH  =&gt; C_rgb_m_axis_TDATA_WIDTH,',
'    C_rgb_s_axis_TDATA_WIDTH  =&gt; C_rgb_s_axis_TDATA_WIDTH,',
'    C_m_axis_mm2s_TDATA_WIDTH =&gt; C_m_axis_mm2s_TDATA_WIDTH,',
'    C_vfpConfig_DATA_WIDTH    =&gt; C_vfpConfig_DATA_WIDTH,',
'    C_vfpConfig_ADDR_WIDTH    =&gt; C_vfpConfig_ADDR_WIDTH,',
'    conf_data_width           =&gt; conf_data_width,',
'    conf_addr_width           =&gt; conf_addr_width,',
'    i_data_width              =&gt; i_data_width,',
'    s_data_width              =&gt; s_data_width,',
'    b_data_width              =&gt; b_data_width)',
'port map(',
'    iBusSelect                =&gt; aBusSelect,',
'    iStreamData               =&gt; streamData,',
'    oWrRegs                   =&gt; wrRegs,',
'    iRdRegs                   =&gt; rdRegs,',
'    --tx channel',
'    rgb_m_axis_aclk           =&gt; rgb_m_axis_aclk,',
'    rgb_m_axis_aresetn        =&gt; rgb_m_axis_aresetn,',
'    rgb_m_axis_tready         =&gt; rgb_m_axis_tready,',
'    rgb_m_axis_tvalid         =&gt; rgb_m_axis_tvalid,',
'    rgb_m_axis_tlast          =&gt; rgb_m_axis_tlast,',
'    rgb_m_axis_tuser          =&gt; rgb_m_axis_tuser,',
'    rgb_m_axis_tdata          =&gt; rgb_m_axis_tdata,',
'    --rx channel',
'    rgb_s_axis_aclk           =&gt; rgb_s_axis_aclk,',
'    rgb_s_axis_aresetn        =&gt; rgb_s_axis_aresetn,',
'    rgb_s_axis_tready         =&gt; rgb_s_axis_tready,',
'    rgb_s_axis_tvalid         =&gt; rgb_s_axis_tvalid,',
'    rgb_s_axis_tuser          =&gt; rgb_s_axis_tuser,',
'    rgb_s_axis_tlast          =&gt; rgb_s_axis_tlast,',
'    rgb_s_axis_tdata          =&gt; rgb_s_axis_tdata,',
'    --destination channel',
'    m_axis_mm2s_aclk          =&gt; m_axis_mm2s_aclk,',
'    m_axis_mm2s_aresetn       =&gt; m_axis_mm2s_aresetn,',
'    m_axis_mm2s_tready        =&gt; m_axis_mm2s_tready,',
'    m_axis_mm2s_tvalid        =&gt; m_axis_mm2s_tvalid,',
'    m_axis_mm2s_tuser         =&gt; m_axis_mm2s_tuser,',
'    m_axis_mm2s_tlast         =&gt; m_axis_mm2s_tlast,',
'    m_axis_mm2s_tdata         =&gt; m_axis_mm2s_tdata,',
'    m_axis_mm2s_tkeep         =&gt; m_axis_mm2s_tkeep,',
'    m_axis_mm2s_tstrb         =&gt; m_axis_mm2s_tstrb,',
'    m_axis_mm2s_tid           =&gt; m_axis_mm2s_tid,',
'    m_axis_mm2s_tdest         =&gt; m_axis_mm2s_tdest,',
'    --video configuration',
'    vfpconfig_aclk            =&gt; vfpconfig_aclk,',
'    vfpconfig_aresetn         =&gt; vfpconfig_aresetn,',
'    vfpconfig_awaddr          =&gt; vfpconfig_awaddr,',
'    vfpconfig_awprot          =&gt; vfpconfig_awprot,',
'    vfpconfig_awvalid         =&gt; vfpconfig_awvalid,',
'    vfpconfig_awready         =&gt; vfpconfig_awready,',
'    vfpconfig_wdata           =&gt; vfpconfig_wdata,',
'    vfpconfig_wstrb           =&gt; vfpconfig_wstrb,',
'    vfpconfig_wvalid          =&gt; vfpconfig_wvalid,',
'    vfpconfig_wready          =&gt; vfpconfig_wready,',
'    vfpconfig_bresp           =&gt; vfpconfig_bresp,',
'    vfpconfig_bvalid          =&gt; vfpconfig_bvalid,',
'    vfpconfig_bready          =&gt; vfpconfig_bready,',
'    vfpconfig_araddr          =&gt; vfpconfig_araddr,',
'    vfpconfig_arprot          =&gt; vfpconfig_arprot,',
'    vfpconfig_arvalid         =&gt; vfpconfig_arvalid,',
'    vfpconfig_arready         =&gt; vfpconfig_arready,',
'    vfpconfig_rdata           =&gt; vfpconfig_rdata,',
'    vfpconfig_rresp           =&gt; vfpconfig_rresp,',
'    vfpconfig_rvalid          =&gt; vfpconfig_rvalid,',
'    vfpconfig_rready          =&gt; vfpconfig_rready);',
'end arch_imp;'
];
countinueBuildStmtTable(g_sourceLines);
