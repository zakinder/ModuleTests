
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>--02092019 [02-09-2019]</q-m>
<a name="2"><q-n>     2  </q-n></a><q-w>library</q-w> ieee;
<a name="3"><q-n>     3  </q-n></a><q-w>use</q-w> ieee.std_logic_1164.<q-w>all</q-w>;
<a name="4"><q-n>     4  </q-n></a><q-w>use</q-w> ieee.numeric_std.<q-w>all</q-w>;
<a name="5"><q-n>     5  </q-n></a><q-w>use</q-w> work.constantspackage.<q-w>all</q-w>;
<a name="6"><q-n>     6  </q-n></a><q-w>use</q-w> work.vpfRecords.<q-w>all</q-w>;
<a name="7"><q-n>     7  </q-n></a><q-w>use</q-w> work.portspackage.<q-w>all</q-w>;
<a name="8"><q-n>     8  </q-n></a><q-w>entity</q-w> blurFilter <q-w>is</q-w>
<a name="9"><q-n>     9  </q-n></a><q-w>generic</q-w> (
<a name="10"><q-n>     10  </q-n></a>    iMSB          : <q-t>integer</q-w> := 11;
<a name="11"><q-n>     11  </q-n></a>    iLSB          : <q-t>integer</q-w> := 4;
<a name="12"><q-n>     12  </q-n></a>    i_data_width  : <q-t>integer</q-w> := 8;
<a name="13"><q-n>     13  </q-n></a>    img_width     : <q-t>integer</q-w> := 256;
<a name="14"><q-n>     14  </q-n></a>    adwrWidth     : <q-t>integer</q-w> := 16;
<a name="15"><q-n>     15  </q-n></a>    addrWidth     : <q-t>integer</q-w> := 12);
<a name="16"><q-n>     16  </q-n></a><q-w>port</q-w> (
<a name="17"><q-n>     17  </q-n></a>    clk            : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="18"><q-n>     18  </q-n></a>    rst_l          : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="19"><q-n>     19  </q-n></a>    iRgb           : <q-a>in</q-w> channel;
<a name="20"><q-n>     20  </q-n></a>    oRgb           : <q-a>out</q-w> channel);
<a name="21"><q-n>     21  </q-n></a><q-w>end</q-w> <q-w>entity</q-w>;
<a name="22"><q-n>     22  </q-n></a><q-w>architecture</q-w> arch <q-w>of</q-w> blurFilter <q-w>is</q-w>
<a name="23"><q-n>     23  </q-n></a><q-m>---------------------------------------------------------------------------------</q-m>
<a name="24"><q-n>     24  </q-n></a>    <q-w>signal</q-w> vTapRGB0x        : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0);
<a name="25"><q-n>     25  </q-n></a>    <q-w>signal</q-w> vTapRGB1x        : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0);
<a name="26"><q-n>     26  </q-n></a>    <q-w>signal</q-w> vTapRGB2x        : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0);
<a name="27"><q-n>     27  </q-n></a>    <q-w>signal</q-w> v1TapRGB0x       : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0);
<a name="28"><q-n>     28  </q-n></a>    <q-w>signal</q-w> v1TapRGB1x       : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0);
<a name="29"><q-n>     29  </q-n></a>    <q-w>signal</q-w> v1TapRGB2x       : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0);
<a name="30"><q-n>     30  </q-n></a>    <q-w>signal</q-w> enable           : <q-t>std_logic</q-w>;
<a name="31"><q-n>     31  </q-n></a>    <q-w>signal</q-w> d1en             : <q-t>std_logic</q-w>;
<a name="32"><q-n>     32  </q-n></a>    <q-w>signal</q-w> d2en             : <q-t>std_logic</q-w>;
<a name="33"><q-n>     33  </q-n></a>    <q-w>signal</q-w> d3RGB            : <q-t>std_logic_vector</q-w>(23 <q-w>downto</q-w> 0);
<a name="34"><q-n>     34  </q-n></a>    <q-w>signal</q-w> rCountAddress    : <q-t>integer</q-w>;
<a name="35"><q-n>     35  </q-n></a>    <q-w>signal</q-w> rAddress         : <q-t>std_logic_vector</q-w>(15 <q-w>downto</q-w> 0);
<a name="36"><q-n>     36  </q-n></a>    <q-w>signal</q-w> rgb1x            : channel;
<a name="37"><q-n>     37  </q-n></a>    <q-w>signal</q-w> rgb2x            : channel;
<a name="38"><q-n>     38  </q-n></a>    <q-w>signal</q-w> rgb3x            : channel;
<a name="39"><q-n>     39  </q-n></a>    <q-w>signal</q-w> blurRgb          : blurchannel;
<a name="40"><q-n>     40  </q-n></a><q-m>---------------------------------------------------------------------------------</q-m>
<a name="41"><q-n>     41  </q-n></a><q-w>begin</q-w>
<a name="42"><q-n>     42  </q-n></a>    oRgb.red   &lt;= blurRgb.red(iMSB <q-w>downto</q-w> iLSB);
<a name="43"><q-n>     43  </q-n></a>    oRgb.green &lt;= blurRgb.green(iMSB <q-w>downto</q-w> iLSB);
<a name="44"><q-n>     44  </q-n></a>    oRgb.blue  &lt;= blurRgb.blue(iMSB <q-w>downto</q-w> iLSB);
<a name="45"><q-n>     45  </q-n></a>    oRgb.valid &lt;= blurRgb.valid;
<a name="46"><q-n>     46  </q-n></a>tapValidAdressP: <q-w>process</q-w>(clk)<q-w>begin</q-w>
<a name="47"><q-n>     47  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="48"><q-n>     48  </q-n></a>        <q-w>if</q-w> (iRgb.valid = '1') <q-w>then</q-w>
<a name="49"><q-n>     49  </q-n></a>            rCountAddress  &lt;= rCountAddress + 1;
<a name="50"><q-n>     50  </q-n></a>        <q-w>else</q-w>
<a name="51"><q-n>     51  </q-n></a>            rCountAddress  &lt;= 0;
<a name="52"><q-n>     52  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="53"><q-n>     53  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="54"><q-n>     54  </q-n></a><q-w>end</q-w> <q-w>process</q-w> tapValidAdressP;
<a name="55"><q-n>     55  </q-n></a>rAddress  &lt;= <q-t>std_logic_vector</q-w>(to_unsigned(rCountAddress, 16));
<a name="56"><q-n>     56  </q-n></a>RGB_inst: buffer_controller
<a name="57"><q-n>     57  </q-n></a><q-w>generic</q-w> <q-w>map</q-w>(
<a name="58"><q-n>     58  </q-n></a>    img_width       =&gt; img_width,
<a name="59"><q-n>     59  </q-n></a>    adwrWidth       =&gt; adwrWidth,
<a name="60"><q-n>     60  </q-n></a>    dataWidth       =&gt; 24,
<a name="61"><q-n>     61  </q-n></a>    addrWidth       =&gt; addrWidth)
<a name="62"><q-n>     62  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="63"><q-n>     63  </q-n></a>    aclk            =&gt; clk,
<a name="64"><q-n>     64  </q-n></a>    i_enable        =&gt; rgb2x.valid,
<a name="65"><q-n>     65  </q-n></a>    i_data          =&gt; d3RGB,
<a name="66"><q-n>     66  </q-n></a>    i_wadd          =&gt; rAddress,
<a name="67"><q-n>     67  </q-n></a>    i_radd          =&gt; rAddress,
<a name="68"><q-n>     68  </q-n></a>    en_datao        =&gt; enable,
<a name="69"><q-n>     69  </q-n></a>    taps0x          =&gt; v1TapRGB0x,
<a name="70"><q-n>     70  </q-n></a>    taps1x          =&gt; v1TapRGB1x,
<a name="71"><q-n>     71  </q-n></a>    taps2x          =&gt; v1TapRGB2x);
<a name="72"><q-n>     72  </q-n></a>MAC_R_inst: blurMac
<a name="73"><q-n>     73  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="74"><q-n>     74  </q-n></a>    clk             =&gt; clk,
<a name="75"><q-n>     75  </q-n></a>    rst_l           =&gt; rst_l,
<a name="76"><q-n>     76  </q-n></a>    vTap0x          =&gt; vTapRGB0x(23 <q-w>downto</q-w> 16),
<a name="77"><q-n>     77  </q-n></a>    vTap1x          =&gt; vTapRGB1x(23 <q-w>downto</q-w> 16),
<a name="78"><q-n>     78  </q-n></a>    vTap2x          =&gt; vTapRGB2x(23 <q-w>downto</q-w> 16),
<a name="79"><q-n>     79  </q-n></a>    DataO           =&gt; blurRgb.red);
<a name="80"><q-n>     80  </q-n></a>MAC_G_inst: blurMac
<a name="81"><q-n>     81  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="82"><q-n>     82  </q-n></a>    clk             =&gt; clk,
<a name="83"><q-n>     83  </q-n></a>    rst_l           =&gt; rst_l,
<a name="84"><q-n>     84  </q-n></a>    vTap0x          =&gt; vTapRGB0x(15 <q-w>downto</q-w> 8),
<a name="85"><q-n>     85  </q-n></a>    vTap1x          =&gt; vTapRGB1x(15 <q-w>downto</q-w> 8),
<a name="86"><q-n>     86  </q-n></a>    vTap2x          =&gt; vTapRGB2x(15 <q-w>downto</q-w> 8),
<a name="87"><q-n>     87  </q-n></a>    DataO           =&gt; blurRgb.green);
<a name="88"><q-n>     88  </q-n></a>MAC_B_inst: blurMac
<a name="89"><q-n>     89  </q-n></a><q-w>port</q-w> <q-w>map</q-w>(
<a name="90"><q-n>     90  </q-n></a>    clk             =&gt; clk,
<a name="91"><q-n>     91  </q-n></a>    rst_l           =&gt; rst_l,
<a name="92"><q-n>     92  </q-n></a>    vTap0x          =&gt; vTapRGB0x(i_data_width-1 <q-w>downto</q-w> 0),
<a name="93"><q-n>     93  </q-n></a>    vTap1x          =&gt; vTapRGB1x(i_data_width-1 <q-w>downto</q-w> 0),
<a name="94"><q-n>     94  </q-n></a>    vTap2x          =&gt; vTapRGB2x(i_data_width-1 <q-w>downto</q-w> 0),
<a name="95"><q-n>     95  </q-n></a>    DataO           =&gt; blurRgb.blue);
<a name="96"><q-n>     96  </q-n></a>tapSignedP : <q-w>process</q-w> (clk) <q-w>begin</q-w>
<a name="97"><q-n>     97  </q-n></a>    <q-w>if</q-w> rising_edge(clk) <q-w>then</q-w>
<a name="98"><q-n>     98  </q-n></a>        rgb1x         &lt;= iRgb;  
<a name="99"><q-n>     99  </q-n></a>        rgb2x         &lt;= rgb1x;
<a name="100"><q-n>     100  </q-n></a>        rgb3x         &lt;= rgb2x;
<a name="101"><q-n>     101  </q-n></a>        d3RGB         &lt;= rgb3x.red &amp; rgb3x.green &amp; rgb3x.blue;
<a name="102"><q-n>     102  </q-n></a>        d1en          &lt;= enable;
<a name="103"><q-n>     103  </q-n></a>        d2en          &lt;= d1en;
<a name="104"><q-n>     104  </q-n></a>        blurRgb.valid &lt;= d2en;
<a name="105"><q-n>     105  </q-n></a>        <q-w>if</q-w>(rgb3x.valid = '1') <q-w>then</q-w>
<a name="106"><q-n>     106  </q-n></a>            vTapRGB0x &lt;= v1TapRGB0x;
<a name="107"><q-n>     107  </q-n></a>            vTapRGB1x &lt;= v1TapRGB1x;
<a name="108"><q-n>     108  </q-n></a>            vTapRGB2x &lt;= v1TapRGB2x;
<a name="109"><q-n>     109  </q-n></a>        <q-w>else</q-w>
<a name="110"><q-n>     110  </q-n></a>            vTapRGB0x &lt;= (<q-w>others</q-w> =&gt; '0');
<a name="111"><q-n>     111  </q-n></a>            vTapRGB1x &lt;= (<q-w>others</q-w> =&gt; '0');
<a name="112"><q-n>     112  </q-n></a>            vTapRGB2x &lt;= (<q-w>others</q-w> =&gt; '0');
<a name="113"><q-n>     113  </q-n></a>        <q-w>end</q-w> <q-w>if</q-w>;
<a name="114"><q-n>     114  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="115"><q-n>     115  </q-n></a><q-w>end</q-w> <q-w>process</q-w> tapSignedP;
<a name="116"><q-n>     116  </q-n></a><q-w>end</q-w> <q-w>architecture</q-w>;</pre>
</tt>

  
</body>
</html>
