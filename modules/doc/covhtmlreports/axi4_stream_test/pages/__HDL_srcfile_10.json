var g_sourceLines = [
'--02092019 [02-09-2019]',
'library ieee;',
'use ieee.std_logic_1164.all;',
'use ieee.numeric_std.all;',
'use work.constantspackage.all;',
'use work.vpfRecords.all;',
'use work.portspackage.all;',
'entity sharpFilter is',
'generic (',
'    i_data_width  : integer := 8;',
'    img_width     : integer := 256;',
'    adwrWidth     : integer := 16;',
'    addrWidth     : integer := 12);',
'port (',
'    clk           : in std_logic;',
'    rst_l         : in std_logic;',
'    iRgb          : in channel;',
'    kls           : in coefficient;',
'    endOfFrame    : in std_logic;   ',
'    oRgb          : out channel);',
'end entity;',
'architecture arch of sharpFilter is',
'---------------------------------------------------------------------------------',
'    signal vTapRGB0x        : std_logic_vector(23 downto 0) := (others =&gt; \'0\');',
'    signal vTapRGB1x        : std_logic_vector(23 downto 0) := (others =&gt; \'0\');',
'    signal vTapRGB2x        : std_logic_vector(23 downto 0) := (others =&gt; \'0\');',
'    signal v1TapRGB0x       : std_logic_vector(23 downto 0) := (others =&gt; \'0\');',
'    signal v1TapRGB1x       : std_logic_vector(23 downto 0) := (others =&gt; \'0\');',
'    signal v1TapRGB2x       : std_logic_vector(23 downto 0) := (others =&gt; \'0\');',
'    signal enable           : std_logic;',
'    signal d1en             : std_logic;',
'    signal d2en             : std_logic;',
'    signal d3en             : std_logic;',
'    signal d4en             : std_logic;',
'    signal d5en             : std_logic;',
'    signal rCountAddress    : integer;',
'    signal rAddress         : std_logic_vector(15 downto 0);',
'    signal rgb1x            : channel;',
'    signal rgb2x            : channel;',
'    signal d2RGB            : std_logic_vector(23 downto 0) := (others =&gt; \'0\');',
'---------------------------------------------------------------------------------',
'begin',
'tapValidAdressP: process(clk)begin',
'    if rising_edge(clk) then',
'        if (iRgb.valid = \'1\') then',
'            rCountAddress  &lt;= rCountAddress + 1;',
'        else',
'            rCountAddress  &lt;= 0;',
'        end if;',
'    end if;',
'end process tapValidAdressP;',
'rAddress  &lt;= std_logic_vector(to_unsigned(rCountAddress, 16));',
'RGBInst: buffer_controller',
'generic map(',
'    img_width       =&gt; img_width,',
'    adwrWidth       =&gt; adwrWidth,',
'    dataWidth       =&gt; 24,',
'    addrWidth       =&gt; addrWidth)',
'port map(',
'    aclk            =&gt; clk,',
'    i_enable        =&gt; iRgb.valid,',
'    i_data          =&gt; d2RGB,',
'    i_wadd          =&gt; rAddress,',
'    i_radd          =&gt; rAddress,',
'    en_datao        =&gt; enable,',
'    taps0x          =&gt; v1TapRGB0x,',
'    taps1x          =&gt; v1TapRGB1x,',
'    taps2x          =&gt; v1TapRGB2x);',
'MACrInst: sharpMac',
'port map(',
'    clk             =&gt; clk,',
'    rst_l           =&gt; rst_l,',
'    vTap0x          =&gt; vTapRGB0x(23 downto 16),',
'    vTap1x          =&gt; vTapRGB1x(23 downto 16),',
'    vTap2x          =&gt; vTapRGB2x(23 downto 16),',
'    endOfFrame      =&gt; endOfFrame,',
'    kls             =&gt; kls,',
'    DataO           =&gt; oRgb.red);',
'MACgInst: sharpMac',
'port map(',
'    clk             =&gt; clk,',
'    rst_l           =&gt; rst_l,',
'    vTap0x          =&gt; vTapRGB0x(15 downto 8),',
'    vTap1x          =&gt; vTapRGB1x(15 downto 8),',
'    vTap2x          =&gt; vTapRGB2x(15 downto 8),',
'    endOfFrame      =&gt; endOfFrame,',
'    kls             =&gt; kls,    ',
'    DataO           =&gt; oRgb.green);',
'MACbInst: sharpMac',
'port map(',
'    clk             =&gt; clk,',
'    rst_l           =&gt; rst_l,',
'    vTap0x          =&gt; vTapRGB0x(i_data_width-1 downto 0),',
'    vTap1x          =&gt; vTapRGB1x(i_data_width-1 downto 0),',
'    vTap2x          =&gt; vTapRGB2x(i_data_width-1 downto 0),',
'    endOfFrame      =&gt; endOfFrame,',
'    kls             =&gt; kls,   ',
'    DataO           =&gt; oRgb.blue);',
'tapSignedP : process (clk) begin',
'    if rising_edge(clk) then',
'        rgb1x      &lt;= iRgb;  ',
'        rgb2x      &lt;= rgb1x;',
'        d2RGB      &lt;= rgb2x.red &amp; rgb2x.green &amp; rgb2x.blue;',
'        d1en       &lt;= enable;',
'        d2en       &lt;= d1en;',
'        d3en       &lt;= d2en;',
'        d4en       &lt;= d3en;',
'        d5en       &lt;= d4en;',
'        oRgb.valid &lt;= d5en;',
'        if(enable = \'1\') then',
'            vTapRGB0x &lt;=v1TapRGB0x;',
'            vTapRGB1x &lt;=v1TapRGB1x;',
'            vTapRGB2x &lt;=v1TapRGB2x;',
'        else',
'            vTapRGB0x &lt;=(others =&gt; \'0\');',
'            vTapRGB1x &lt;=(others =&gt; \'0\');',
'            vTapRGB2x &lt;=(others =&gt; \'0\');',
'        end if;',
'  end if;',
'end process tapSignedP;',
'end arch;'
];
countinueBuildStmtTable(g_sourceLines);
