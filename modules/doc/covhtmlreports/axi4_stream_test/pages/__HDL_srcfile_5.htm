
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-m>--05012019 [05-01-2019]</q-m>
<a name="2"><q-n>     2  </q-n></a><q-w>library</q-w> ieee;
<a name="3"><q-n>     3  </q-n></a><q-w>use</q-w> ieee.std_logic_1164.<q-w>all</q-w>;
<a name="4"><q-n>     4  </q-n></a><q-w>use</q-w> ieee.numeric_std.<q-w>all</q-w>;
<a name="5"><q-n>     5  </q-n></a><q-w>use</q-w> work.constantspackage.<q-w>all</q-w>;
<a name="6"><q-n>     6  </q-n></a><q-w>use</q-w> work.vpfRecords.<q-w>all</q-w>;
<a name="7"><q-n>     7  </q-n></a><q-w>entity</q-w> tap_buffer <q-w>is</q-w>
<a name="8"><q-n>     8  </q-n></a><q-w>generic</q-w> (
<a name="9"><q-n>     9  </q-n></a>    img_width    : <q-t>integer</q-w> := 4095;
<a name="10"><q-n>     10  </q-n></a>    dataWidth    : <q-t>integer</q-w> := 12; 
<a name="11"><q-n>     11  </q-n></a>    addrWidth    : <q-t>integer</q-w> := 12);
<a name="12"><q-n>     12  </q-n></a><q-w>port</q-w> (
<a name="13"><q-n>     13  </q-n></a>    write_clk    : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="14"><q-n>     14  </q-n></a>    write_enb    : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="15"><q-n>     15  </q-n></a>    w_address    : <q-a>in</q-w> <q-t>std_logic_vector</q-w>(addrWidth - 1 <q-w>downto</q-w> 0);
<a name="16"><q-n>     16  </q-n></a>    idata        : <q-a>in</q-w> <q-t>std_logic_vector</q-w>(dataWidth - 1 <q-w>downto</q-w> 0);
<a name="17"><q-n>     17  </q-n></a>    read_clk     : <q-a>in</q-w> <q-t>std_logic</q-w>;
<a name="18"><q-n>     18  </q-n></a>    r_address    : <q-a>in</q-w> <q-t>std_logic_vector</q-w>(addrWidth - 1 <q-w>downto</q-w> 0);
<a name="19"><q-n>     19  </q-n></a>    odata        : <q-a>out</q-w> <q-t>std_logic_vector</q-w>(dataWidth - 1 <q-w>downto</q-w> 0));
<a name="20"><q-n>     20  </q-n></a><q-w>end</q-w> <q-w>entity</q-w>;
<a name="21"><q-n>     21  </q-n></a><q-w>architecture</q-w> arch <q-w>of</q-w> tap_buffer <q-w>is</q-w>
<a name="22"><q-n>     22  </q-n></a>    <q-w>type</q-w> ram_type <q-w>is</q-w> <q-w>array</q-w> (0 <q-w>to</q-w> img_width) <q-w>of</q-w> <q-t>std_logic_vector</q-w> (dataWidth - 1 <q-w>downto</q-w> 0);
<a name="23"><q-n>     23  </q-n></a>    <q-w>signal</q-w> rowbuffer    : ram_type := (<q-w>others</q-w> =&gt; (<q-w>others</q-w> =&gt; '0'));
<a name="24"><q-n>     24  </q-n></a>    <q-w>signal</q-w> oregister    : <q-t>std_logic_vector</q-w>(dataWidth - 1 <q-w>downto</q-w> 0);
<a name="25"><q-n>     25  </q-n></a>    <q-w>signal</q-w> write1s_enb  : <q-t>std_logic</q-w>;
<a name="26"><q-n>     26  </q-n></a>    <q-w>signal</q-w> write2s_enb  : <q-t>std_logic</q-w>;
<a name="27"><q-n>     27  </q-n></a>    <q-w>signal</q-w> write3s_enb  : <q-t>std_logic</q-w>;  
<a name="28"><q-n>     28  </q-n></a>    <q-w>signal</q-w> write_or_enb : <q-t>std_logic</q-w>;
<a name="29"><q-n>     29  </q-n></a><q-w>begin</q-w>
<a name="30"><q-n>     30  </q-n></a><q-w>process</q-w> (write_clk) <q-w>begin</q-w>
<a name="31"><q-n>     31  </q-n></a>    <q-w>if</q-w> rising_edge(write_clk) <q-w>then</q-w>
<a name="32"><q-n>     32  </q-n></a>        write1s_enb &lt;= write_enb;
<a name="33"><q-n>     33  </q-n></a>        write2s_enb &lt;= write1s_enb;
<a name="34"><q-n>     34  </q-n></a>        write3s_enb &lt;= write2s_enb;
<a name="35"><q-n>     35  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="36"><q-n>     36  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="37"><q-n>     37  </q-n></a>write_or_enb &lt;= write_enb <q-w>or</q-w> write3s_enb;
<a name="38"><q-n>     38  </q-n></a><q-w>process</q-w> (write_clk) <q-w>begin</q-w>
<a name="39"><q-n>     39  </q-n></a><q-w>if</q-w> rising_edge(write_clk) <q-w>then</q-w>
<a name="40"><q-n>     40  </q-n></a>    <q-w>if</q-w> (write_or_enb ='1') <q-w>then</q-w>
<a name="41"><q-n>     41  </q-n></a>        rowbuffer(to_integer(<q-t>unsigned</q-w>(w_address))) &lt;= idata;
<a name="42"><q-n>     42  </q-n></a>    <q-w>end</q-w> <q-w>if</q-w>;
<a name="43"><q-n>     43  </q-n></a><q-w>end</q-w> <q-w>if</q-w>;
<a name="44"><q-n>     44  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="45"><q-n>     45  </q-n></a><q-w>process</q-w> (read_clk) <q-w>begin</q-w>
<a name="46"><q-n>     46  </q-n></a><q-w>if</q-w> rising_edge(read_clk) <q-w>then</q-w>
<a name="47"><q-n>     47  </q-n></a>    oregister &lt;= rowbuffer(to_integer(<q-t>unsigned</q-w>(r_address)));
<a name="48"><q-n>     48  </q-n></a><q-w>end</q-w> <q-w>if</q-w>;
<a name="49"><q-n>     49  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="50"><q-n>     50  </q-n></a><q-w>process</q-w> (read_clk) <q-w>begin</q-w>
<a name="51"><q-n>     51  </q-n></a><q-w>if</q-w> rising_edge(read_clk) <q-w>then</q-w>
<a name="52"><q-n>     52  </q-n></a>    odata &lt;= oregister;
<a name="53"><q-n>     53  </q-n></a><q-w>end</q-w> <q-w>if</q-w>;
<a name="54"><q-n>     54  </q-n></a><q-w>end</q-w> <q-w>process</q-w>;
<a name="55"><q-n>     55  </q-n></a><q-w>end</q-w> <q-w>architecture</q-w>;</pre>
</tt>

  
</body>
</html>
