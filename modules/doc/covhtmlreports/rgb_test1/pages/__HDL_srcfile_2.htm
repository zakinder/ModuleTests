
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-w>module</q-w> template(<q-w>input</q-w> <q-w>wire</q-w> clk,
<a name="2"><q-n>     2  </q-n></a>		   <q-w>input</q-w> <q-w>wire</q-w> en_i,
<a name="3"><q-n>     3  </q-n></a>		   <q-w>input</q-w> <q-w>wire</q-w> ina,
<a name="4"><q-n>     4  </q-n></a>		   <q-w>input</q-w> <q-w>wire</q-w> inb,
<a name="5"><q-n>     5  </q-n></a>		   <q-w>output</q-w> <q-w>reg</q-w> en_o,
<a name="6"><q-n>     6  </q-n></a>		   <q-w>output</q-w> <q-w>reg</q-w> out_c);
<a name="7"><q-n>     7  </q-n></a>	<q-w>integer</q-w> counter, state;
<a name="8"><q-n>     8  </q-n></a>	<q-w>reg</q-w>[1:0] temp_a, temp_b;
<a name="9"><q-n>     9  </q-n></a>	<q-w>reg</q-w>[2:0] temp_out;
<a name="10"><q-n>     10  </q-n></a>	<q-m>//Init</q-m>
<a name="11"><q-n>     11  </q-n></a>	<q-w>initial</q-w> <q-w>begin</q-w>
<a name="12"><q-n>     12  </q-n></a>		counter = 0;
<a name="13"><q-n>     13  </q-n></a>		temp_a = 2'b00;
<a name="14"><q-n>     14  </q-n></a>		temp_b = 2'b00;
<a name="15"><q-n>     15  </q-n></a>		temp_out = 3'b000;
<a name="16"><q-n>     16  </q-n></a>		out_c = 1;
<a name="17"><q-n>     17  </q-n></a>		en_o &lt;= 0;
<a name="18"><q-n>     18  </q-n></a>		state = 0;
<a name="19"><q-n>     19  </q-n></a>	<q-w>end</q-w>
<a name="20"><q-n>     20  </q-n></a>	<q-w>always</q-w>@(<q-a>posedge</q-w> clk)
<a name="21"><q-n>     21  </q-n></a>	<q-w>begin</q-w>
<a name="22"><q-n>     22  </q-n></a>		<q-m>//State 0: Wait for en_i</q-m>
<a name="23"><q-n>     23  </q-n></a>		<q-w>if</q-w>(en_i==1'b1)
<a name="24"><q-n>     24  </q-n></a>		<q-w>begin</q-w>
<a name="25"><q-n>     25  </q-n></a>			state = 1;
<a name="26"><q-n>     26  </q-n></a>		<q-w>end</q-w>
<a name="27"><q-n>     27  </q-n></a>		<q-w>case</q-w>(state)
<a name="28"><q-n>     28  </q-n></a>			<q-m>//State 1: Start reading inputs</q-m>
<a name="29"><q-n>     29  </q-n></a>			1: <q-w>begin</q-w>
<a name="30"><q-n>     30  </q-n></a>				temp_a = temp_a &lt;&lt; 1;
<a name="31"><q-n>     31  </q-n></a>				temp_a = temp_a | ina;
<a name="32"><q-n>     32  </q-n></a>				temp_b = temp_b &lt;&lt; 1;
<a name="33"><q-n>     33  </q-n></a>				temp_b = temp_b | inb;
<a name="34"><q-n>     34  </q-n></a>				counter = counter + 1;
<a name="35"><q-n>     35  </q-n></a>				<q-m>//After 2 bits, do the operation an move to the next state</q-m>
<a name="36"><q-n>     36  </q-n></a>				<q-w>if</q-w>(counter==2) <q-w>begin</q-w>
<a name="37"><q-n>     37  </q-n></a>					temp_out = temp_a + temp_b;
<a name="38"><q-n>     38  </q-n></a>					state = 2;
<a name="39"><q-n>     39  </q-n></a>				<q-w>end</q-w>
<a name="40"><q-n>     40  </q-n></a>			<q-w>end</q-w>
<a name="41"><q-n>     41  </q-n></a>			<q-m>//State 2: Enable en_o and sends result to the output</q-m>
<a name="42"><q-n>     42  </q-n></a>			2: <q-w>begin</q-w>
<a name="43"><q-n>     43  </q-n></a>				out_c &lt;= temp_out[2];
<a name="44"><q-n>     44  </q-n></a>				temp_out = temp_out &lt;&lt; 1;
<a name="45"><q-n>     45  </q-n></a>				counter = counter + 1;
<a name="46"><q-n>     46  </q-n></a>				<q-w>if</q-w>(counter==3) en_o &lt;= 1'b1;
<a name="47"><q-n>     47  </q-n></a>				<q-w>if</q-w>(counter==4) en_o &lt;= 1'b0;
<a name="48"><q-n>     48  </q-n></a>				<q-w>if</q-w>(counter==6) <q-w>begin</q-w>
<a name="49"><q-n>     49  </q-n></a>					counter = 0;
<a name="50"><q-n>     50  </q-n></a>					out_c &lt;= 1'b1;
<a name="51"><q-n>     51  </q-n></a>					state = 0;
<a name="52"><q-n>     52  </q-n></a>				<q-w>end</q-w>
<a name="53"><q-n>     53  </q-n></a>			<q-w>end</q-w>
<a name="54"><q-n>     54  </q-n></a>		<q-w>endcase</q-w>
<a name="55"><q-n>     55  </q-n></a>	<q-w>end</q-w>
<a name="56"><q-n>     56  </q-n></a><q-w>endmodule</q-w></pre>
</tt>

  
</body>
</html>
